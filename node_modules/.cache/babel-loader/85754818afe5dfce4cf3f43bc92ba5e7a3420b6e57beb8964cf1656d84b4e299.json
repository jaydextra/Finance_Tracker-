{"ast":null,"code":"import _objectSpread from\"/Users/machome/Documents/GitHub/Finance_Tracker-/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/* eslint-disable no-unused-vars */// src/App.js\nimport React,{useState,useEffect,createContext,useContext}from'react';import'./App.css';import Chart from'chart.js/auto';import ChartDataLabels from'chartjs-plugin-datalabels';import{Collapse,Button,Card,Nav}from'react-bootstrap';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,ArcElement}from'chart.js';import MonthPage from'./components/MonthPage';import CreditCardTracker from'./components/CreditCardTracker';// Register ChartJS components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,ArcElement);// Create theme context\nconst ThemeContext=/*#__PURE__*/createContext();// Add this before the App component.\nexport const useTheme=()=>useContext(ThemeContext);function App(){const[transactions,setTransactions]=useState([]);const[incomeDescription,setIncomeDescription]=useState('');const[incomeAmount,setIncomeAmount]=useState('');const[expenseDescription,setExpenseDescription]=useState('');const[expenseAmount,setExpenseAmount]=useState('');const[category,setCategory]=useState('Bills');const[dueDate,setDueDate]=useState(new Date().toISOString().split('T')[0]);const[frequency,setFrequency]=useState('Monthly');const[currentMonth,setCurrentMonth]=useState(new Date().getMonth());const[chart,setChart]=useState(null);const[isIncomeOpen,setIsIncomeOpen]=useState(false);const[isIncomeListOpen,setIsIncomeListOpen]=useState(true);const[isExpenseOpen,setIsExpenseOpen]=useState(false);const[editingId,setEditingId]=useState(null);const[editingValues,setEditingValues]=useState({});const[isDarkMode,setIsDarkMode]=useState(false);const[currentYear,setCurrentYear]=useState(new Date().getFullYear());const[allMonthsTransactions,setAllMonthsTransactions]=useState({});const[activeTab,setActiveTab]=useState('budget');const[creditCards,setCreditCards]=useState([]);const[customCategory,setCustomCategory]=useState('');const[isExpenseListOpen,setIsExpenseListOpen]=useState(true);const[sortConfig,setSortConfig]=useState({key:'dueDate',direction:'asc'});const[filterConfig,setFilterConfig]=useState({category:'all',status:'all',search:''});const months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];// Load transactions from localStorage on component mount\nuseEffect(()=>{// Load all data on mount\nconst loadData=()=>{try{const savedTransactions=localStorage.getItem('transactions');const savedMonthsTransactions=localStorage.getItem('allMonthsTransactions');const savedCreditCards=localStorage.getItem('creditCards');if(savedTransactions){setTransactions(JSON.parse(savedTransactions));}if(savedMonthsTransactions){setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));}if(savedCreditCards){setCreditCards(JSON.parse(savedCreditCards));}}catch(error){console.error('Error loading data:',error);}};loadData();},[]);// Only run on mount\n// Clean up chart on component unmount\nuseEffect(()=>{return()=>{if(chart){chart.destroy();}};},[chart]);// Add this helper function at the top of your App component\nconst generateColor=index=>{// Predefined colors for known categories\nconst categoryColors={'Bills':{bg:'rgba(255, 99, 132, 0.8)',border:'rgba(255, 99, 132, 1)'},'Savings':{bg:'rgba(54, 162, 235, 0.8)',border:'rgba(54, 162, 235, 1)'},'Personal':{bg:'rgba(255, 206, 86, 0.8)',border:'rgba(255, 206, 86, 1)'}};// Color palette for additional categories\nconst colorPalette=[{bg:'rgba(75, 192, 192, 0.8)',border:'rgba(75, 192, 192, 1)'},{bg:'rgba(153, 102, 255, 0.8)',border:'rgba(153, 102, 255, 1)'},{bg:'rgba(255, 159, 64, 0.8)',border:'rgba(255, 159, 64, 1)'},{bg:'rgba(231, 233, 237, 0.8)',border:'rgba(231, 233, 237, 1)'},{bg:'rgba(102, 204, 153, 0.8)',border:'rgba(102, 204, 153, 1)'},{bg:'rgba(255, 99, 255, 0.8)',border:'rgba(255, 99, 255, 1)'}];return colorPalette[index%colorPalette.length];};// Update the chart useEffect\nuseEffect(()=>{const ctx=document.getElementById('expenseChart');if(!ctx)return;let isMounted=true;try{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const tDate=new Date(t.date);return tDate.getMonth()===currentMonth&&tDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions].filter(t=>t.type==='expense'&&!t.skipped);const categoryTotals=allTransactions.reduce((acc,transaction)=>{if(!acc[transaction.category]){acc[transaction.category]=0;}acc[transaction.category]+=parseFloat(transaction.amount);return acc;},{});if(Object.keys(categoryTotals).length>0&&isMounted){const categories=Object.keys(categoryTotals);const colors=categories.map((category,index)=>{// Use predefined colors for known categories, generate for others\nconst categoryColors={'Bills':{bg:'rgba(255, 99, 132, 0.8)',border:'rgba(255, 99, 132, 1)'},'Savings':{bg:'rgba(54, 162, 235, 0.8)',border:'rgba(54, 162, 235, 1)'},'Personal':{bg:'rgba(255, 206, 86, 0.8)',border:'rgba(255, 206, 86, 1)'}};return categoryColors[category]||generateColor(index);});const chartConfig={type:'pie',data:{labels:categories,datasets:[{data:Object.values(categoryTotals),backgroundColor:colors.map(c=>c.bg),borderColor:colors.map(c=>c.border),borderWidth:1}]},options:{responsive:true,maintainAspectRatio:false,animation:{duration:500// Reduce animation duration\n},plugins:{datalabels:{formatter:value=>\"$\".concat(value.toFixed(2)),color:'#fff',font:{weight:'bold',size:14},textAlign:'center'},legend:{position:'right',labels:{color:isDarkMode?'#ffffff':'#666666',font:{size:12},generateLabels:chart=>{const data=chart.data;if(data.labels.length&&data.datasets.length){return data.labels.map((label,i)=>{const value=data.datasets[0].data[i];return{text:\"\".concat(label,\": $\").concat(value.toFixed(2)),fillStyle:data.datasets[0].backgroundColor[i],strokeStyle:data.datasets[0].borderColor[i],lineWidth:1,hidden:false,index:i};});}return[];}}},tooltip:{callbacks:{label:context=>{const value=context.raw;return\" $\".concat(value.toFixed(2));}}}}},plugins:[ChartDataLabels]};// Update existing chart if it exists, create new one if it doesn't\nif(chart&&isMounted){try{chart.data=chartConfig.data;chart.options=chartConfig.options;chart.update('none');}catch(error){console.error('Error updating chart:',error);chart.destroy();if(isMounted){const newChart=new Chart(ctx,chartConfig);setChart(newChart);}}}else if(isMounted){const newChart=new Chart(ctx,chartConfig);setChart(newChart);}}}catch(error){console.error('Error in chart effect:',error);}return()=>{isMounted=false;if(chart){try{chart.destroy();}catch(error){console.error('Error destroying chart:',error);}}};},[currentMonth,currentYear,transactions,allMonthsTransactions,isDarkMode,chart]);// Separate submit handlers for income and expenses\nconst handleIncomeSubmit=e=>{e.preventDefault();if(!incomeDescription||!incomeAmount){return;// Just return if validation fails\n}const newIncome={id:Date.now(),description:incomeDescription,amount:parseFloat(incomeAmount),type:'income',date:new Date().toISOString(),frequency:'Monthly',dueDate:new Date().toISOString().split('T')[0]};// Use addTransaction instead of directly updating transactions\naddTransaction(newIncome,'income');// Clear form\nsetIncomeDescription('');setIncomeAmount('');setIsIncomeOpen(false);// Automatically close the form after submission\n};const handleExpenseSubmit=e=>{e.preventDefault();if(!expenseDescription||!expenseAmount||!dueDate||!category){return;}// Use custom category if \"Other\" is selected\nconst finalCategory=category==='Other'?customCategory:category;const newExpense={id:Date.now(),description:expenseDescription,amount:parseFloat(expenseAmount),type:'expense',category:finalCategory,dueDate,frequency,paid:false,skipped:false,date:new Date().toISOString()};addTransaction(newExpense,'expense');// Clear form\nsetExpenseDescription('');setExpenseAmount('');setCategory('Bills');// Reset to default category\nsetCustomCategory('');// Clear custom category\nsetIsExpenseOpen(false);};const togglePaid=id=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const monthTransaction=monthTransactions.find(t=>t.id===id);try{if(monthTransaction){setAllMonthsTransactions(prev=>{const updated=_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{paid:!t.paid,skipped:false}):t)});localStorage.setItem('allMonthsTransactions',JSON.stringify(updated));return updated;});}else{setTransactions(prev=>{const updated=prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{paid:!t.paid,skipped:false}):t);localStorage.setItem('transactions',JSON.stringify(updated));return updated;});}// If chart exists, update it safely\nif(chart){requestAnimationFrame(()=>{try{chart.update('none');}catch(error){console.error('Error updating chart in togglePaid:',error);}});}}catch(error){console.error('Error in togglePaid:',error);}};const toggleSkipped=id=>{setTransactions(prev=>{const updated=prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{skipped:!t.skipped,paid:false}):t);localStorage.setItem('transactions',JSON.stringify(updated));return updated;});};const deleteTransaction=(transactionId,fromMonth)=>{if(window.confirm('Delete this transaction?')){const transaction=transactions.find(t=>t.id===transactionId);if(!transaction){const monthKey=\"\".concat(currentYear,\"-\").concat(fromMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const monthTransaction=monthTransactions.find(t=>t.id===transactionId);if(monthTransaction!==null&&monthTransaction!==void 0&&monthTransaction.originalTransactionId){const deleteAll=window.confirm('Delete all future occurrences of this recurring transaction?');if(deleteAll){const updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.keys(updatedMonthsTransactions).forEach(monthKey=>{const[year,month]=monthKey.split('-').map(Number);if(year>currentYear||year===currentYear&&month>=fromMonth){updatedMonthsTransactions[monthKey]=updatedMonthsTransactions[monthKey].filter(t=>t.originalTransactionId!==monthTransaction.originalTransactionId);}});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{const updatedMonthsTransactions=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:allMonthsTransactions[monthKey].filter(t=>t.id!==transactionId)});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}}else{const updatedMonthsTransactions=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:allMonthsTransactions[monthKey].filter(t=>t.id!==transactionId)});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}}else{const updatedTransactions=transactions.filter(t=>t.id!==transactionId);setTransactions(updatedTransactions);localStorage.setItem('transactions',JSON.stringify(updatedTransactions));}}};// Update the filterTransactions function to properly combine both sources\nconst filterTransactions=type=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];// Get transactions from both sources\nconst regularTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return t.type===type&&transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const recurringTransactions=monthTransactions.filter(t=>t.type===type);// Combine and remove duplicates\nconst combined=[...regularTransactions,...recurringTransactions];return combined.filter((transaction,index,self)=>index===self.findIndex(t=>t.id===transaction.id));};// Update calculateTotals to include both regular and recurring transactions\nconst calculateTotals=()=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions];return{income:allTransactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+t.amount,0),expenses:allTransactions.filter(t=>t.type==='expense'&&!t.skipped).reduce((sum,t)=>sum+t.amount,0),paid:allTransactions.filter(t=>t.paid).reduce((sum,t)=>sum+t.amount,0)};};// Update the saveEdit function\nconst saveEdit=id=>{var _allMonthsTransaction;const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const isMonthTransaction=(_allMonthsTransaction=allMonthsTransactions[monthKey])===null||_allMonthsTransaction===void 0?void 0:_allMonthsTransaction.some(t=>t.id===id);if(isMonthTransaction){// Handle editing recurring transactions\nif(editingValues.originalTransactionId){const editFuture=window.confirm('Do you want to apply these changes to all future occurrences?');if(editFuture){// Update all future occurrences\nconst updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.keys(updatedMonthsTransactions).forEach(key=>{const[year,month]=key.split('-').map(Number);if(year>currentYear||year===currentYear&&month>=currentMonth){updatedMonthsTransactions[key]=updatedMonthsTransactions[key].map(t=>t.originalTransactionId===editingValues.originalTransactionId?_objectSpread(_objectSpread({},t),editingValues):t);}});setAllMonthsTransactions(updatedMonthsTransactions);}else{// Update only this occurrence\nsetAllMonthsTransactions(prev=>_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t)}));}}else{// Update one-time transaction\nsetAllMonthsTransactions(prev=>_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t)}));}}else{// Handle regular transactions\nsetTransactions(transactions.map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t));}setEditingId(null);setEditingValues({});};// Update the startEditing function\nconst startEditing=transaction=>{setEditingId(transaction.id);setEditingValues(_objectSpread(_objectSpread({},transaction),{},{amount:transaction.amount.toString()}));};// Add this function to cancel editing\nconst cancelEdit=()=>{setEditingId(null);setEditingValues({});};// Add this helper function at the top of your App component\nconst getDayWithSuffix=date=>{const day=new Date(date).getDate();if(day>3&&day<21)return day+'th';switch(day%10){case 1:return day+\"st\";case 2:return day+\"nd\";case 3:return day+\"rd\";default:return day+\"th\";}};// Add this function in your App component\nconst getMonthlyTrends=()=>{const last6Months=Array.from({length:6},(_,i)=>{const d=new Date();d.setMonth(d.getMonth()-i);return d;}).reverse();return{labels:last6Months.map(date=>months[date.getMonth()]),expenses:last6Months.map(date=>{return transactions.filter(t=>{const tDate=new Date(t.date);return t.type==='expense'&&tDate.getMonth()===date.getMonth()&&!t.skipped;}).reduce((sum,t)=>sum+t.amount,0);}),income:last6Months.map(date=>{return transactions.filter(t=>{const tDate=new Date(t.date);return t.type==='income'&&tDate.getMonth()===date.getMonth();}).reduce((sum,t)=>sum+t.amount,0);})};};// Update the generateRecurringDates function\nconst generateRecurringDates=(startDate,frequency,endDate)=>{const dates=[];let currentDate=new Date(startDate);const end=new Date(endDate);// Set both dates to start of day for accurate comparison\ncurrentDate.setHours(0,0,0,0);end.setHours(0,0,0,0);console.log('Generating recurring dates:',{startDate:currentDate,endDate:end,frequency});while(currentDate<=end){dates.push(new Date(currentDate));// Store the original day of month\nconst originalDay=currentDate.getDate();// Calculate next date based on frequency\nswitch(frequency){case'Weekly':currentDate.setDate(currentDate.getDate()+7);break;case'Bi-Weekly':currentDate.setDate(currentDate.getDate()+14);break;case'Monthly':currentDate.setMonth(currentDate.getMonth()+1);// Check if we've rolled over to the next month\nif(currentDate.getDate()!==originalDay){// We've hit the end of the month, go back to last day of previous month\ncurrentDate.setDate(0);}break;default:return dates;}console.log(\"Added \".concat(frequency,\" date:\"),new Date(currentDate));}console.log('Generated dates:',dates);return dates;};// Add these wrapper functions\nconst updateTransactions=newTransactions=>{setTransactions(newTransactions);localStorage.setItem('transactions',JSON.stringify(newTransactions));};const updateMonthlyTransactions=newMonthlyTransactions=>{setAllMonthsTransactions(newMonthlyTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(newMonthlyTransactions));};// Update the addTransaction function\nconst addTransaction=(transaction,type)=>{const endOfYear=new Date(currentYear,11,31);const isRecurring=transaction.frequency!=='One-time';const startDate=new Date(transaction.dueDate);// Ensure paid property is set for expenses\nconst transactionWithPaid=_objectSpread(_objectSpread({},transaction),{},{paid:type==='expense'?false:undefined});if(isRecurring){const recurringDates=generateRecurringDates(startDate,transaction.frequency,endOfYear);const transactionsByMonth={};recurringDates.forEach(date=>{const monthKey=\"\".concat(date.getFullYear(),\"-\").concat(date.getMonth());if(!transactionsByMonth[monthKey]){transactionsByMonth[monthKey]=[];}const recurringTransaction=_objectSpread(_objectSpread({},transactionWithPaid),{},{id:Date.now()+Math.random(),dueDate:date.toISOString().split('T')[0],originalTransactionId:transaction.id,paid:type==='expense'?false:undefined});transactionsByMonth[monthKey].push(recurringTransaction);});// Update allMonthsTransactions\nconst updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.entries(transactionsByMonth).forEach(_ref=>{let[monthKey,transactions]=_ref;if(!updatedMonthsTransactions[monthKey]){updatedMonthsTransactions[monthKey]=[];}updatedMonthsTransactions[monthKey]=[...updatedMonthsTransactions[monthKey],...transactions];});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{if(type==='income'){updateTransactions([...transactions,transactionWithPaid]);}else{// Handle one-time expenses\nconst transactionDate=new Date(transaction.dueDate);const monthKey=\"\".concat(transactionDate.getFullYear(),\"-\").concat(transactionDate.getMonth());const updatedMonthly=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:[...(allMonthsTransactions[monthKey]||[]),_objectSpread(_objectSpread({},transactionWithPaid),{},{paid:false})]});updateMonthlyTransactions(updatedMonthly);}}};// In App.js, update the summary calculation\nconst calculateSummary=transactions=>{const income=transactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+parseFloat(t.amount),0);const paidIncome=transactions.filter(t=>t.type==='income'&&t.paid).reduce((sum,t)=>sum+parseFloat(t.amount),0);const expenses=transactions.filter(t=>t.type==='expense').reduce((sum,t)=>sum+parseFloat(t.amount),0);const balance=paidIncome-expenses;return{income,paidIncome,expenses,balance};};// Add this function near the top of App component\nconst updateCreditCards=newCards=>{setCreditCards(newCards);localStorage.setItem('creditCards',JSON.stringify(newCards));};// Add function to calculate payment summary\nconst calculatePaymentSummary=()=>{const expenses=filterTransactions('expense');const total=expenses.reduce((sum,t)=>sum+t.amount,0);const paid=expenses.reduce((sum,t)=>t.paid?sum+t.amount:sum,0);const remaining=total-paid;return{total:total.toFixed(2),paid:paid.toFixed(2),remaining:remaining.toFixed(2),progress:total>0?(paid/total*100).toFixed(1):0};};// Add this sorting function\nconst sortTransactions=transactions=>{return[...transactions].sort((a,b)=>{if(sortConfig.key==='amount'){return sortConfig.direction==='asc'?a.amount-b.amount:b.amount-a.amount;}if(sortConfig.key==='dueDate'){return sortConfig.direction==='asc'?new Date(a.dueDate)-new Date(b.dueDate):new Date(b.dueDate)-new Date(a.dueDate);}if(sortConfig.key==='description'){return sortConfig.direction==='asc'?a.description.localeCompare(b.description):b.description.localeCompare(a.description);}return 0;});};// Rename this function to applyFilters\nconst applyFilters=transactions=>{return transactions.filter(transaction=>{const matchesCategory=filterConfig.category==='all'||transaction.category===filterConfig.category;const matchesStatus=filterConfig.status==='all'||filterConfig.status==='paid'&&transaction.paid||filterConfig.status==='unpaid'&&!transaction.paid;const matchesSearch=transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());return matchesCategory&&matchesStatus&&matchesSearch;});};return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(isDarkMode?'dark-mode':''),children:[/*#__PURE__*/_jsxs(\"header\",{className:\"finance-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"theme-toggle\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsDarkMode(!isDarkMode),className:\"theme-toggle-btn\",title:isDarkMode?\"Switch to Light Mode\":\"Switch to Dark Mode\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-\".concat(isDarkMode?'sun':'moon')})})}),/*#__PURE__*/_jsx(\"h1\",{className:\"gradient-text\",children:\"Finance Tracker\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-navigation\",children:[/*#__PURE__*/_jsxs(Nav,{variant:\"tabs\",className:\"main-nav\",children:[/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{active:activeTab==='budget',onClick:()=>setActiveTab('budget'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wallet me-2\"}),\"Budget Tracker\"]})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{active:activeTab==='credit',onClick:()=>setActiveTab('credit'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-credit-card me-2\"}),\"Credit Cards\"]})})]}),activeTab==='budget'&&/*#__PURE__*/_jsxs(\"div\",{className:\"month-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn prev\",onClick:()=>{if(currentMonth===0){setCurrentYear(prev=>prev-1);setCurrentMonth(11);}else{setCurrentMonth(prev=>prev-1);}},\"aria-label\":\"Previous month\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-left\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"month-select\",children:[/*#__PURE__*/_jsx(\"select\",{value:currentMonth,onChange:e=>setCurrentMonth(Number(e.target.value)),className:\"month-dropdown\",\"aria-label\":\"Select month\",children:months.map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index,children:month},index))}),/*#__PURE__*/_jsx(\"select\",{value:currentYear,onChange:e=>setCurrentYear(Number(e.target.value)),className:\"year-dropdown\",\"aria-label\":\"Select year\",children:Array.from({length:5},(_,i)=>/*#__PURE__*/_jsx(\"option\",{value:currentYear-2+i,children:currentYear-2+i},i))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn next\",onClick:()=>{if(currentMonth===11){setCurrentYear(prev=>prev+1);setCurrentMonth(0);}else{setCurrentMonth(prev=>prev+1);}},\"aria-label\":\"Next month\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-right\"})})]})]})]}),activeTab==='budget'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 mb-4\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-danger text-white\",children:/*#__PURE__*/_jsx(Button,{onClick:()=>setIsExpenseOpen(!isExpenseOpen),\"aria-controls\":\"expenseForm\",\"aria-expanded\":isExpenseOpen,variant:\"link\",className:\"text-white w-100 text-start p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Expenses\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-caret-\".concat(isExpenseOpen?'down':'right',\" ms-2 fa-lg\")})]})})})}),/*#__PURE__*/_jsx(Collapse,{in:isExpenseOpen,children:/*#__PURE__*/_jsx(\"div\",{id:\"expenseForm\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleExpenseSubmit,className:\"transaction-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:expenseDescription,onChange:e=>setExpenseDescription(e.target.value),placeholder:\"Expense Item\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:expenseAmount,onChange:e=>setExpenseAmount(e.target.value),placeholder:\"Amount\",step:\"0.01\",className:\"form-control\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:category,onChange:e=>setCategory(e.target.value),className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Category\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other...\"})]}),category==='Other'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:customCategory,onChange:e=>setCustomCategory(e.target.value),placeholder:\"Enter custom category\",className:\"form-control mt-2\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dueDate,onChange:e=>setDueDate(e.target.value),className:\"form-control\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:frequency,onChange:e=>setFrequency(e.target.value),className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Frequency\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bi-Weekly\",children:\"Bi-Weekly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Weekly\",children:\"Weekly\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-danger\",children:\"Add Expense\"})]})})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 mb-4\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-success text-white\",children:/*#__PURE__*/_jsxs(Button,{onClick:()=>setIsIncomeOpen(!isIncomeOpen),\"aria-controls\":\"incomeSection\",\"aria-expanded\":isIncomeOpen,variant:\"link\",className:\"text-white w-100 text-start p-0\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Income\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-caret-\".concat(isIncomeOpen?'down':'right',\" ms-2 fa-lg\")})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"current-income-display mt-2\",children:[\"Total Monthly Income: $\",calculateTotals().income.toFixed(2)]})]})}),/*#__PURE__*/_jsx(Collapse,{in:isIncomeOpen,children:/*#__PURE__*/_jsx(\"div\",{id:\"incomeSection\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleIncomeSubmit,className:\"transaction-form mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:incomeDescription,onChange:e=>setIncomeDescription(e.target.value),placeholder:\"Income Source\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:incomeAmount,onChange:e=>setIncomeAmount(e.target.value),placeholder:\"Amount\",step:\"0.01\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-success\",children:\"Add Income\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortTransactions(applyFilters(filterTransactions('income'))).map(transaction=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingValues.description||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{description:e.target.value})),className:\"form-control form-control-sm\"}):transaction.description}),/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editingValues.amount||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{amount:parseFloat(e.target.value)})),className:\"form-control form-control-sm\",step:\"0.01\"}):/*#__PURE__*/_jsxs(\"span\",{className:\"text-success\",children:[\"$\",transaction.amount.toFixed(2)]})}),/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>saveEdit(transaction.id),className:\"btn-icon\",title:\"Save changes\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Save\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:cancelEdit,className:\"btn-icon delete\",title:\"Cancel editing\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Cancel\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"expense-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startEditing(transaction),className:\"btn-icon\",title:\"Edit this entry\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>deleteTransaction(transaction.id,currentMonth),className:\"btn-icon delete\",title:\"Delete this entry\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Delete\"})]})]})})]},transaction.id))})]})})]})})})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header bg-danger text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Budget & Expenses\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-link text-white\",onClick:()=>setIsExpenseListOpen(!isExpenseListOpen),children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-\".concat(isExpenseListOpen?'up':'down')})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body pb-0\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-summary mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wallet me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Monthly Income:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-success\",children:[\"$\",calculateTotals().income.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-shopping-cart me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Total Expenses:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-danger\",children:[\"$\",calculateTotals().expenses.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-piggy-bank me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Remaining:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\",children:[\"$\",(calculateTotals().income-calculateTotals().expenses).toFixed(2)]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-summary mt-3\",children:(()=>{const summary=calculatePaymentSummary();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress mb-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar bg-success\",role:\"progressbar\",style:{width:\"\".concat(summary.progress,\"%\")},\"aria-valuenow\":summary.progress,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",children:[summary.progress,\"%\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Paid:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-success\",children:[\"$\",summary.paid]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Remaining:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-danger\",children:[\"$\",summary.remaining]})]})]})]});})()})]})}),/*#__PURE__*/_jsx(Collapse,{in:isExpenseListOpen,children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"filters-section mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Search expenses...\",value:filterConfig.search,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{search:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:filterConfig.category,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{category:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Categories\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:filterConfig.status,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{status:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"paid\",children:\"Paid\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unpaid\",children:\"Unpaid\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:\"\".concat(sortConfig.key,\"-\").concat(sortConfig.direction),onChange:e=>{const[key,direction]=e.target.value.split('-');setSortConfig({key,direction});},children:[/*#__PURE__*/_jsx(\"option\",{value:\"dueDate-asc\",children:\"Date (Earliest First)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dueDate-desc\",children:\"Date (Latest First)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amount-asc\",children:\"Amount (Low to High)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amount-desc\",children:\"Amount (High to Low)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"description-asc\",children:\"Name (A to Z)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"description-desc\",children:\"Name (Z to A)\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsx(\"div\",{className:\"expense-list\",children:sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction=>/*#__PURE__*/_jsx(\"div\",{className:\"expense-item \".concat(transaction.paid?'paid':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"expense-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:transaction.paid||false,onChange:()=>togglePaid(transaction.id),id:\"paid-\".concat(transaction.id)}),/*#__PURE__*/_jsx(\"label\",{className:\"checkmark\",htmlFor:\"paid-\".concat(transaction.id)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"expense-content\",children:editingId===transaction.id?/*#__PURE__*/// Edit mode\n_jsxs(\"div\",{className:\"expense-edit-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingValues.description||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{description:e.target.value})),className:\"form-control form-control-sm mb-2\",placeholder:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editingValues.amount||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{amount:parseFloat(e.target.value)})),className:\"form-control form-control-sm mb-2\",step:\"0.01\",placeholder:\"Amount\"}),/*#__PURE__*/_jsxs(\"select\",{value:editingValues.category||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{category:e.target.value})),className:\"form-select form-select-sm mb-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:editingValues.dueDate||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{dueDate:e.target.value})),className:\"form-control form-control-sm mb-2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>saveEdit(transaction.id),className:\"btn btn-success btn-sm me-2\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),\" Save\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:cancelEdit,className:\"btn btn-secondary btn-sm\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),\" Cancel\"]})]})]}):/*#__PURE__*/// Display mode\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-primary\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"expense-title\",children:transaction.description}),/*#__PURE__*/_jsxs(\"span\",{className:\"expense-amount\",children:[\"$\",transaction.amount.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"expense-secondary\",children:[transaction.type==='expense'&&/*#__PURE__*/_jsx(\"span\",{className:\"expense-tag\",children:transaction.category}),/*#__PURE__*/_jsx(\"span\",{className:\"expense-date\",children:getDayWithSuffix(transaction.dueDate)}),/*#__PURE__*/_jsx(\"span\",{className:\"expense-frequency\",children:transaction.frequency})]})]})}),!editingId&&/*#__PURE__*/_jsxs(\"div\",{className:\"expense-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startEditing(transaction),className:\"btn-icon\",title:\"Edit\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>deleteTransaction(transaction.id,currentMonth),className:\"btn-icon delete\",title:\"Delete\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Delete\"})]})]})]})},transaction.id))})})]})})})]})})}),/*#__PURE__*/_jsx(MonthPage,{month:currentMonth,year:currentYear,transactions:allMonthsTransactions[\"\".concat(currentYear,\"-\").concat(currentMonth)]||[],onUpdateTransaction:addTransaction,onDeleteTransaction:deleteTransaction})]}):/*#__PURE__*/_jsx(CreditCardTracker,{creditCards:creditCards,setCreditCards:updateCreditCards})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Chart","ChartDataLabels","Collapse","Button","Card","Nav","Line","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","MonthPage","CreditCardTracker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","ThemeContext","useTheme","App","transactions","setTransactions","incomeDescription","setIncomeDescription","incomeAmount","setIncomeAmount","expenseDescription","setExpenseDescription","expenseAmount","setExpenseAmount","category","setCategory","dueDate","setDueDate","Date","toISOString","split","frequency","setFrequency","currentMonth","setCurrentMonth","getMonth","chart","setChart","isIncomeOpen","setIsIncomeOpen","isIncomeListOpen","setIsIncomeListOpen","isExpenseOpen","setIsExpenseOpen","editingId","setEditingId","editingValues","setEditingValues","isDarkMode","setIsDarkMode","currentYear","setCurrentYear","getFullYear","allMonthsTransactions","setAllMonthsTransactions","activeTab","setActiveTab","creditCards","setCreditCards","customCategory","setCustomCategory","isExpenseListOpen","setIsExpenseListOpen","sortConfig","setSortConfig","key","direction","filterConfig","setFilterConfig","status","search","months","loadData","savedTransactions","localStorage","getItem","savedMonthsTransactions","savedCreditCards","JSON","parse","error","console","destroy","generateColor","index","categoryColors","bg","border","colorPalette","length","ctx","document","getElementById","isMounted","monthKey","concat","monthTransactions","regularTransactions","filter","t","tDate","date","allTransactions","type","skipped","categoryTotals","reduce","acc","transaction","parseFloat","amount","Object","keys","categories","colors","map","chartConfig","data","labels","datasets","values","backgroundColor","c","borderColor","borderWidth","options","responsive","maintainAspectRatio","animation","duration","plugins","datalabels","formatter","value","toFixed","color","font","weight","size","textAlign","legend","position","generateLabels","label","i","text","fillStyle","strokeStyle","lineWidth","hidden","tooltip","callbacks","context","raw","update","newChart","handleIncomeSubmit","e","preventDefault","newIncome","id","now","description","addTransaction","handleExpenseSubmit","finalCategory","newExpense","paid","togglePaid","monthTransaction","find","prev","updated","_objectSpread","setItem","stringify","requestAnimationFrame","toggleSkipped","deleteTransaction","transactionId","fromMonth","window","confirm","originalTransactionId","deleteAll","updatedMonthsTransactions","forEach","year","month","Number","updatedTransactions","filterTransactions","transactionDate","recurringTransactions","combined","self","findIndex","calculateTotals","income","sum","expenses","saveEdit","_allMonthsTransaction","isMonthTransaction","some","editFuture","startEditing","toString","cancelEdit","getDayWithSuffix","day","getDate","getMonthlyTrends","last6Months","Array","from","_","d","setMonth","reverse","generateRecurringDates","startDate","endDate","dates","currentDate","end","setHours","log","push","originalDay","setDate","updateTransactions","newTransactions","updateMonthlyTransactions","newMonthlyTransactions","endOfYear","isRecurring","transactionWithPaid","undefined","recurringDates","transactionsByMonth","recurringTransaction","Math","random","entries","_ref","updatedMonthly","calculateSummary","paidIncome","balance","updateCreditCards","newCards","calculatePaymentSummary","total","remaining","progress","sortTransactions","sort","a","b","localeCompare","applyFilters","matchesCategory","matchesStatus","matchesSearch","toLowerCase","includes","className","children","onClick","title","variant","Item","Link","active","onChange","target","Header","in","Body","onSubmit","placeholder","required","step","summary","role","style","width","checked","htmlFor","onUpdateTransaction","onDeleteTransaction"],"sources":["/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n} from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\n// Create theme context\nconst ThemeContext = createContext();\n\n// Add this before the App component.\nexport const useTheme = () => useContext(ThemeContext);\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n  const [creditCards, setCreditCards] = useState([]);\n  const [customCategory, setCustomCategory] = useState('');\n  const [isExpenseListOpen, setIsExpenseListOpen] = useState(true);\n  const [sortConfig, setSortConfig] = useState({ key: 'dueDate', direction: 'asc' });\n  const [filterConfig, setFilterConfig] = useState({\n    category: 'all',\n    status: 'all',\n    search: ''\n  });\n\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    // Load all data on mount\n    const loadData = () => {\n      try {\n        const savedTransactions = localStorage.getItem('transactions');\n        const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n        const savedCreditCards = localStorage.getItem('creditCards');\n\n        if (savedTransactions) {\n          setTransactions(JSON.parse(savedTransactions));\n        }\n        if (savedMonthsTransactions) {\n          setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n        }\n        if (savedCreditCards) {\n          setCreditCards(JSON.parse(savedCreditCards));\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n\n    loadData();\n  }, []); // Only run on mount\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [chart]);\n\n  // Add this helper function at the top of your App component\n  const generateColor = (index) => {\n    // Predefined colors for known categories\n    const categoryColors = {\n      'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n      'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n      'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n    };\n\n    // Color palette for additional categories\n    const colorPalette = [\n      { bg: 'rgba(75, 192, 192, 0.8)', border: 'rgba(75, 192, 192, 1)' },\n      { bg: 'rgba(153, 102, 255, 0.8)', border: 'rgba(153, 102, 255, 1)' },\n      { bg: 'rgba(255, 159, 64, 0.8)', border: 'rgba(255, 159, 64, 1)' },\n      { bg: 'rgba(231, 233, 237, 0.8)', border: 'rgba(231, 233, 237, 1)' },\n      { bg: 'rgba(102, 204, 153, 0.8)', border: 'rgba(102, 204, 153, 1)' },\n      { bg: 'rgba(255, 99, 255, 0.8)', border: 'rgba(255, 99, 255, 1)' }\n    ];\n\n    return colorPalette[index % colorPalette.length];\n  };\n\n  // Update the chart useEffect\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) return;\n\n    let isMounted = true;\n\n    try {\n      const monthKey = `${currentYear}-${currentMonth}`;\n      const monthTransactions = allMonthsTransactions[monthKey] || [];\n      const regularTransactions = transactions.filter(t => {\n        const tDate = new Date(t.date);\n        return tDate.getMonth() === currentMonth && \n               tDate.getFullYear() === currentYear;\n      });\n\n      const allTransactions = [...regularTransactions, ...monthTransactions]\n        .filter(t => t.type === 'expense' && !t.skipped);\n\n      const categoryTotals = allTransactions.reduce((acc, transaction) => {\n        if (!acc[transaction.category]) {\n          acc[transaction.category] = 0;\n        }\n        acc[transaction.category] += parseFloat(transaction.amount);\n        return acc;\n      }, {});\n\n      if (Object.keys(categoryTotals).length > 0 && isMounted) {\n        const categories = Object.keys(categoryTotals);\n        const colors = categories.map((category, index) => {\n          // Use predefined colors for known categories, generate for others\n          const categoryColors = {\n            'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n            'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n            'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n          };\n\n          return categoryColors[category] || generateColor(index);\n        });\n\n        const chartConfig = {\n          type: 'pie',\n          data: {\n            labels: categories,\n            datasets: [{\n              data: Object.values(categoryTotals),\n              backgroundColor: colors.map(c => c.bg),\n              borderColor: colors.map(c => c.border),\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            animation: {\n              duration: 500 // Reduce animation duration\n            },\n            plugins: {\n              datalabels: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n                color: '#fff',\n                font: {\n                  weight: 'bold',\n                  size: 14\n                },\n                textAlign: 'center'\n              },\n              legend: {\n                position: 'right',\n                labels: {\n                  color: isDarkMode ? '#ffffff' : '#666666',\n                  font: {\n                    size: 12\n                  },\n                  generateLabels: (chart) => {\n                    const data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                      return data.labels.map((label, i) => {\n                        const value = data.datasets[0].data[i];\n                        return {\n                          text: `${label}: $${value.toFixed(2)}`,\n                          fillStyle: data.datasets[0].backgroundColor[i],\n                          strokeStyle: data.datasets[0].borderColor[i],\n                          lineWidth: 1,\n                          hidden: false,\n                          index: i\n                        };\n                      });\n                    }\n                    return [];\n                  }\n                }\n              },\n              tooltip: {\n                callbacks: {\n                  label: (context) => {\n                    const value = context.raw;\n                    return ` $${value.toFixed(2)}`;\n                  }\n                }\n              }\n            }\n          },\n          plugins: [ChartDataLabels]\n        };\n\n        // Update existing chart if it exists, create new one if it doesn't\n        if (chart && isMounted) {\n          try {\n            chart.data = chartConfig.data;\n            chart.options = chartConfig.options;\n            chart.update('none');\n          } catch (error) {\n            console.error('Error updating chart:', error);\n            chart.destroy();\n            if (isMounted) {\n              const newChart = new Chart(ctx, chartConfig);\n              setChart(newChart);\n            }\n          }\n        } else if (isMounted) {\n          const newChart = new Chart(ctx, chartConfig);\n          setChart(newChart);\n        }\n      }\n    } catch (error) {\n      console.error('Error in chart effect:', error);\n    }\n\n    return () => {\n      isMounted = false;\n      if (chart) {\n        try {\n          chart.destroy();\n        } catch (error) {\n          console.error('Error destroying chart:', error);\n        }\n      }\n    };\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode, chart]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = (e) => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      return; // Just return if validation fails\n    }\n\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly',\n      dueDate: new Date().toISOString().split('T')[0]\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n    \n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    setIsIncomeOpen(false); // Automatically close the form after submission\n  };\n\n  const handleExpenseSubmit = (e) => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      return;\n    }\n\n    // Use custom category if \"Other\" is selected\n    const finalCategory = category === 'Other' ? customCategory : category;\n\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category: finalCategory,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    addTransaction(newExpense, 'expense');\n    \n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    setCategory('Bills'); // Reset to default category\n    setCustomCategory(''); // Clear custom category\n    setIsExpenseOpen(false);\n  };\n\n  const togglePaid = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n\n    try {\n      if (monthTransaction) {\n        setAllMonthsTransactions(prev => {\n          const updated = {\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n            )\n          };\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updated));\n          return updated;\n        });\n      } else {\n        setTransactions(prev => {\n          const updated = prev.map(t =>\n            t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n          );\n          localStorage.setItem('transactions', JSON.stringify(updated));\n          return updated;\n        });\n      }\n\n      // If chart exists, update it safely\n      if (chart) {\n        requestAnimationFrame(() => {\n          try {\n            chart.update('none');\n          } catch (error) {\n            console.error('Error updating chart in togglePaid:', error);\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in togglePaid:', error);\n    }\n  };\n\n  const toggleSkipped = (id) => {\n    setTransactions(prev => {\n      const updated = prev.map(t => \n        t.id === id ? { ...t, skipped: !t.skipped, paid: false } : t\n      );\n      localStorage.setItem('transactions', JSON.stringify(updated));\n      return updated;\n    });\n  };\n\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      \n      if (!transaction) {\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        \n        if (monthTransaction?.originalTransactionId) {\n          const deleteAll = window.confirm(\n            'Delete all future occurrences of this recurring transaction?'\n          );\n          \n          if (deleteAll) {\n            const updatedMonthsTransactions = { ...allMonthsTransactions };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || (year === currentYear && month >= fromMonth)) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey]\n                  .filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          } else {\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions,\n              [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n            };\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          }\n        } else {\n          const updatedMonthsTransactions = {\n            ...allMonthsTransactions,\n            [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n          };\n          setAllMonthsTransactions(updatedMonthsTransactions);\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n        }\n      } else {\n        const updatedTransactions = transactions.filter(t => t.id !== transactionId);\n        setTransactions(updatedTransactions);\n        localStorage.setItem('transactions', JSON.stringify(updatedTransactions));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = (type) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && \n             transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n    \n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) =>\n      index === self.findIndex(t => t.id === transaction.id)\n    );\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n\n    return {\n      income: allTransactions\n        .filter(t => t.type === 'income')\n        .reduce((sum, t) => sum + t.amount, 0),\n      expenses: allTransactions\n        .filter(t => t.type === 'expense' && !t.skipped)\n        .reduce((sum, t) => sum + t.amount, 0),\n      paid: allTransactions\n        .filter(t => t.paid)\n        .reduce((sum, t) => sum + t.amount, 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = allMonthsTransactions[monthKey]?.some(t => t.id === id);\n    \n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm(\n          'Do you want to apply these changes to all future occurrences?'\n        );\n        \n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = { ...allMonthsTransactions };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || (year === currentYear && month >= currentMonth)) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t =>\n                t.originalTransactionId === editingValues.originalTransactionId\n                  ? { ...t, ...editingValues }\n                  : t\n              );\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, ...editingValues } : t\n            )\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t =>\n            t.id === id ? { ...t, ...editingValues } : t\n          )\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => \n        t.id === id ? { ...t, ...editingValues } : t\n      ));\n    }\n    \n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = (transaction) => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = (date) => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1: return day + \"st\";\n      case 2: return day + \"nd\";\n      case 3: return day + \"rd\";\n      default: return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({ length: 6 }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'expense' && \n                   tDate.getMonth() === date.getMonth() &&\n                   !t.skipped;\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'income' && \n                   tDate.getMonth() === date.getMonth();\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n      \n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n      \n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Add these wrapper functions\n  const updateTransactions = (newTransactions) => {\n    setTransactions(newTransactions);\n    localStorage.setItem('transactions', JSON.stringify(newTransactions));\n  };\n\n  const updateMonthlyTransactions = (newMonthlyTransactions) => {\n    setAllMonthsTransactions(newMonthlyTransactions);\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(newMonthlyTransactions));\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n\n    // Ensure paid property is set for expenses\n    const transactionWithPaid = {\n      ...transaction,\n      paid: type === 'expense' ? false : undefined\n    };\n\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(\n        startDate,\n        transaction.frequency,\n        endOfYear\n      );\n\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n\n        const recurringTransaction = {\n          ...transactionWithPaid,\n          id: Date.now() + Math.random(),\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: type === 'expense' ? false : undefined\n        };\n\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n\n      // Update allMonthsTransactions\n      const updatedMonthsTransactions = { ...allMonthsTransactions };\n      Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n        if (!updatedMonthsTransactions[monthKey]) {\n          updatedMonthsTransactions[monthKey] = [];\n        }\n        updatedMonthsTransactions[monthKey] = [\n          ...updatedMonthsTransactions[monthKey],\n          ...transactions\n        ];\n      });\n\n      setAllMonthsTransactions(updatedMonthsTransactions);\n      localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n\n    } else {\n      if (type === 'income') {\n        updateTransactions([...transactions, transactionWithPaid]);\n      } else {\n        // Handle one-time expenses\n        const transactionDate = new Date(transaction.dueDate);\n        const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n        \n        const updatedMonthly = {\n          ...allMonthsTransactions,\n          [monthKey]: [\n            ...(allMonthsTransactions[monthKey] || []),\n            { ...transactionWithPaid, paid: false }\n          ]\n        };\n\n        updateMonthlyTransactions(updatedMonthly);\n      }\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = (transactions) => {\n    const income = transactions\n      .filter(t => t.type === 'income')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const paidIncome = transactions\n      .filter(t => t.type === 'income' && t.paid)\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const expenses = transactions\n      .filter(t => t.type === 'expense')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const balance = paidIncome - expenses;\n\n    return { income, paidIncome, expenses, balance };\n  };\n\n  // Add this function near the top of App component\n  const updateCreditCards = (newCards) => {\n    setCreditCards(newCards);\n    localStorage.setItem('creditCards', JSON.stringify(newCards));\n  };\n\n  // Add function to calculate payment summary\n  const calculatePaymentSummary = () => {\n    const expenses = filterTransactions('expense');\n    const total = expenses.reduce((sum, t) => sum + t.amount, 0);\n    const paid = expenses.reduce((sum, t) => t.paid ? sum + t.amount : sum, 0);\n    const remaining = total - paid;\n    \n    return {\n      total: total.toFixed(2),\n      paid: paid.toFixed(2),\n      remaining: remaining.toFixed(2),\n      progress: total > 0 ? (paid / total * 100).toFixed(1) : 0\n    };\n  };\n\n  // Add this sorting function\n  const sortTransactions = (transactions) => {\n    return [...transactions].sort((a, b) => {\n      if (sortConfig.key === 'amount') {\n        return sortConfig.direction === 'asc' \n          ? a.amount - b.amount \n          : b.amount - a.amount;\n      }\n      if (sortConfig.key === 'dueDate') {\n        return sortConfig.direction === 'asc'\n          ? new Date(a.dueDate) - new Date(b.dueDate)\n          : new Date(b.dueDate) - new Date(a.dueDate);\n      }\n      if (sortConfig.key === 'description') {\n        return sortConfig.direction === 'asc'\n          ? a.description.localeCompare(b.description)\n          : b.description.localeCompare(a.description);\n      }\n      return 0;\n    });\n  };\n\n  // Rename this function to applyFilters\n  const applyFilters = (transactions) => {\n    return transactions.filter(transaction => {\n      const matchesCategory = filterConfig.category === 'all' || transaction.category === filterConfig.category;\n      const matchesStatus = filterConfig.status === 'all' \n        || (filterConfig.status === 'paid' && transaction.paid)\n        || (filterConfig.status === 'unpaid' && !transaction.paid);\n      const matchesSearch = transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());\n      \n      return matchesCategory && matchesStatus && matchesSearch;\n    });\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      <header className=\"finance-header\">\n        <div className=\"theme-toggle\">\n          <button \n            onClick={() => setIsDarkMode(!isDarkMode)}\n            className=\"theme-toggle-btn\"\n            title={isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n          >\n            <i className={`fas fa-${isDarkMode ? 'sun' : 'moon'}`}></i>\n          </button>\n        </div>\n        <h1 className=\"gradient-text\">Finance Tracker</h1>\n        \n        {/* Update the navigation section */}\n        <div className=\"app-navigation\">\n          {/* Main Tabs */}\n          <Nav variant=\"tabs\" className=\"main-nav\">\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'budget'}\n                onClick={() => setActiveTab('budget')}\n              >\n                <i className=\"fas fa-wallet me-2\"></i>\n                Budget Tracker\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'credit'}\n                onClick={() => setActiveTab('credit')}\n              >\n                <i className=\"fas fa-credit-card me-2\"></i>\n                Credit Cards\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n\n          {/* Month Navigation - Only show for budget tab */}\n          {activeTab === 'budget' && (\n            <div className=\"month-navigation\">\n              <button \n                className=\"nav-btn prev\"\n                onClick={() => {\n                  if (currentMonth === 0) {\n                    setCurrentYear(prev => prev - 1);\n                    setCurrentMonth(11);\n                  } else {\n                    setCurrentMonth(prev => prev - 1);\n                  }\n                }}\n                aria-label=\"Previous month\"\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n              \n              <div className=\"month-select\">\n                <select \n                  value={currentMonth}\n                  onChange={(e) => setCurrentMonth(Number(e.target.value))}\n                  className=\"month-dropdown\"\n                  aria-label=\"Select month\"\n                >\n                  {months.map((month, index) => (\n                    <option key={index} value={index}>{month}</option>\n                  ))}\n                </select>\n                <select \n                  value={currentYear}\n                  onChange={(e) => setCurrentYear(Number(e.target.value))}\n                  className=\"year-dropdown\"\n                  aria-label=\"Select year\"\n                >\n                  {Array.from({ length: 5 }, (_, i) => (\n                    <option key={i} value={currentYear - 2 + i}>\n                      {currentYear - 2 + i}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <button \n                className=\"nav-btn next\"\n                onClick={() => {\n                  if (currentMonth === 11) {\n                    setCurrentYear(prev => prev + 1);\n                    setCurrentMonth(0);\n                  } else {\n                    setCurrentMonth(prev => prev + 1);\n                  }\n                }}\n                aria-label=\"Next month\"\n              >\n                <i className=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </header>\n\n      {/* Conditional Rendering based on active tab */}\n      {activeTab === 'budget' ? (\n        <>\n          {/* Forms Section - Side by Side */}\n          <div className=\"row\">\n            {/* Expense Form */}\n            <div className=\"col-md-8 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-danger text-white\">\n                  <Button\n                    onClick={() => setIsExpenseOpen(!isExpenseOpen)}\n                    aria-controls=\"expenseForm\"\n                    aria-expanded={isExpenseOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Expenses</h3>\n                        <i className={`fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                <Collapse in={isExpenseOpen}>\n                  <div id=\"expenseForm\">\n                    <Card.Body>\n                      <form onSubmit={handleExpenseSubmit} className=\"transaction-form\">\n                        <input\n                          type=\"text\"\n                          value={expenseDescription}\n                          onChange={(e) => setExpenseDescription(e.target.value)}\n                          placeholder=\"Expense Item\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={expenseAmount}\n                          onChange={(e) => setExpenseAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={category} \n                          onChange={(e) => setCategory(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Category</option>\n                          <option value=\"Bills\">Bills</option>\n                          <option value=\"Savings\">Savings</option>\n                          <option value=\"Personal\">Personal</option>\n                          <option value=\"Other\">Other...</option>\n                        </select>\n                        {/* Show custom category input when \"Other\" is selected */}\n                        {category === 'Other' && (\n                          <input\n                            type=\"text\"\n                            value={customCategory}\n                            onChange={(e) => setCustomCategory(e.target.value)}\n                            placeholder=\"Enter custom category\"\n                            className=\"form-control mt-2\"\n                            required\n                          />\n                        )}\n                        <input\n                          type=\"date\"\n                          value={dueDate}\n                          onChange={(e) => setDueDate(e.target.value)}\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={frequency} \n                          onChange={(e) => setFrequency(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Frequency</option>\n                          <option value=\"Monthly\">Monthly</option>\n                          <option value=\"Bi-Weekly\">Bi-Weekly</option>\n                          <option value=\"Weekly\">Weekly</option>\n                        </select>\n                        <button type=\"submit\" className=\"btn btn-danger\">\n                          Add Expense\n                        </button>\n                      </form>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n\n            {/* Income Form */}\n            <div className=\"col-md-4 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-success text-white\">\n                  <Button\n                    onClick={() => setIsIncomeOpen(!isIncomeOpen)}\n                    aria-controls=\"incomeSection\"\n                    aria-expanded={isIncomeOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Income</h3>\n                        <i className={`fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                    <div className=\"current-income-display mt-2\">\n                      Total Monthly Income: ${calculateTotals().income.toFixed(2)}\n                    </div>\n                  </Button>\n                </Card.Header>\n                <Collapse in={isIncomeOpen}>\n                  <div id=\"incomeSection\">\n                    <Card.Body>\n                      <form onSubmit={handleIncomeSubmit} className=\"transaction-form mb-4\">\n                        <input\n                          type=\"text\"\n                          value={incomeDescription}\n                          onChange={(e) => setIncomeDescription(e.target.value)}\n                          placeholder=\"Income Source\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={incomeAmount}\n                          onChange={(e) => setIncomeAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <button type=\"submit\" className=\"btn btn-success\">\n                          Add Income\n                        </button>\n                      </form>\n                      <div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <thead>\n                            <tr>\n                              <th>Description</th>\n                              <th>Amount</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {sortTransactions(applyFilters(filterTransactions('income'))).map(transaction => (\n                              <tr key={transaction.id}>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"text\"\n                                      value={editingValues.description || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        description: e.target.value\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                    />\n                                  ) : (\n                                    transaction.description\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"number\"\n                                      value={editingValues.amount || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        amount: parseFloat(e.target.value)\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                      step=\"0.01\"\n                                    />\n                                  ) : (\n                                    <span className=\"text-success\">${transaction.amount.toFixed(2)}</span>\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <>\n                                      <button\n                                        onClick={() => saveEdit(transaction.id)}\n                                        className=\"btn-icon\"\n                                        title=\"Save changes\"\n                                      >\n                                        <i className=\"fas fa-save\"></i>\n                                        <span>Save</span>\n                                      </button>\n                                      <button\n                                        onClick={cancelEdit}\n                                        className=\"btn-icon delete\"\n                                        title=\"Cancel editing\"\n                                      >\n                                        <i className=\"fas fa-times\"></i>\n                                        <span>Cancel</span>\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <div className=\"expense-actions\">\n                                      <button\n                                        onClick={() => startEditing(transaction)}\n                                        className=\"btn-icon\"\n                                        title=\"Edit this entry\"\n                                      >\n                                        <i className=\"fas fa-edit\"></i>\n                                        <span>Edit</span>\n                                      </button>\n                                      <button\n                                        onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                        className=\"btn-icon delete\"\n                                        title=\"Delete this entry\"\n                                      >\n                                        <i className=\"fas fa-trash\"></i>\n                                        <span>Delete</span>\n                                      </button>\n                                    </div>\n                                  )}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n          </div>\n\n          {/* Updated Full Width Expenses List with Budget Info */}\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header bg-danger text-white\">\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <h3 className=\"mb-0\">Budget & Expenses</h3>\n                    <button \n                      className=\"btn btn-link text-white\" \n                      onClick={() => setIsExpenseListOpen(!isExpenseListOpen)}\n                    >\n                      <i className={`fas fa-chevron-${isExpenseListOpen ? 'up' : 'down'}`}></i>\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Updated Budget and Payment Summary Section */}\n                <div className=\"card-body pb-0\">\n                  <div className=\"budget-summary mb-3\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-wallet me-2\"></i>\n                          <span className=\"label\">Monthly Income:</span>\n                          <span className=\"value text-success\">${calculateTotals().income.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-shopping-cart me-2\"></i>\n                          <span className=\"label\">Total Expenses:</span>\n                          <span className=\"value text-danger\">${calculateTotals().expenses.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-piggy-bank me-2\"></i>\n                          <span className=\"label\">Remaining:</span>\n                          <span className=\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\">\n                            ${(calculateTotals().income - calculateTotals().expenses).toFixed(2)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"payment-summary mt-3\">\n                      {(() => {\n                        const summary = calculatePaymentSummary();\n                        return (\n                          <>\n                            <div className=\"progress mb-2\">\n                              <div \n                                className=\"progress-bar bg-success\" \n                                role=\"progressbar\" \n                                style={{width: `${summary.progress}%`}}\n                                aria-valuenow={summary.progress} \n                                aria-valuemin=\"0\" \n                                aria-valuemax=\"100\"\n                              >\n                                {summary.progress}%\n                              </div>\n                            </div>\n                            <div className=\"summary-grid\">\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Paid:</span>\n                                <span className=\"value text-success\">${summary.paid}</span>\n                              </div>\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Remaining:</span>\n                                <span className=\"value text-danger\">${summary.remaining}</span>\n                              </div>\n                            </div>\n                          </>\n                        );\n                      })()}\n                    </div>\n                  </div>\n                </div>\n\n                <Collapse in={isExpenseListOpen}>\n                  <div>\n                    <div className=\"card-body\">\n                      {/* Add Filter Controls */}\n                      <div className=\"filters-section mb-4\">\n                        <div className=\"row g-3\">\n                          <div className=\"col-md-3\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Search expenses...\"\n                              value={filterConfig.search}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                search: e.target.value\n                              }))}\n                            />\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.category}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                category: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Categories</option>\n                              <option value=\"Bills\">Bills</option>\n                              <option value=\"Savings\">Savings</option>\n                              <option value=\"Personal\">Personal</option>\n                              <option value=\"Other\">Other</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.status}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                status: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Status</option>\n                              <option value=\"paid\">Paid</option>\n                              <option value=\"unpaid\">Unpaid</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={`${sortConfig.key}-${sortConfig.direction}`}\n                              onChange={(e) => {\n                                const [key, direction] = e.target.value.split('-');\n                                setSortConfig({ key, direction });\n                              }}\n                            >\n                              <option value=\"dueDate-asc\">Date (Earliest First)</option>\n                              <option value=\"dueDate-desc\">Date (Latest First)</option>\n                              <option value=\"amount-asc\">Amount (Low to High)</option>\n                              <option value=\"amount-desc\">Amount (High to Low)</option>\n                              <option value=\"description-asc\">Name (A to Z)</option>\n                              <option value=\"description-desc\">Name (Z to A)</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"table-responsive\">\n                        <div className=\"expense-list\">\n                          {sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction => (\n                            <div key={transaction.id} className={`expense-item ${transaction.paid ? 'paid' : ''}`}>\n                              <div className=\"expense-main\">\n                                <div className=\"expense-checkbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    checked={transaction.paid || false}\n                                    onChange={() => togglePaid(transaction.id)}\n                                    id={`paid-${transaction.id}`}\n                                  />\n                                  <label className=\"checkmark\" htmlFor={`paid-${transaction.id}`}></label>\n                                </div>\n                                <div className=\"expense-content\">\n                                  {editingId === transaction.id ? (\n                                    // Edit mode\n                                    <div className=\"expense-edit-form\">\n                                      <input\n                                        type=\"text\"\n                                        value={editingValues.description || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          description: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        placeholder=\"Description\"\n                                      />\n                                      <input\n                                        type=\"number\"\n                                        value={editingValues.amount || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          amount: parseFloat(e.target.value)\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        step=\"0.01\"\n                                        placeholder=\"Amount\"\n                                      />\n                                      <select\n                                        value={editingValues.category || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          category: e.target.value\n                                        })}\n                                        className=\"form-select form-select-sm mb-2\"\n                                      >\n                                        <option value=\"Bills\">Bills</option>\n                                        <option value=\"Savings\">Savings</option>\n                                        <option value=\"Personal\">Personal</option>\n                                        <option value=\"Other\">Other</option>\n                                      </select>\n                                      <input\n                                        type=\"date\"\n                                        value={editingValues.dueDate || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          dueDate: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                      />\n                                      <div className=\"edit-actions\">\n                                        <button\n                                          onClick={() => saveEdit(transaction.id)}\n                                          className=\"btn btn-success btn-sm me-2\"\n                                        >\n                                          <i className=\"fas fa-save\"></i> Save\n                                        </button>\n                                        <button\n                                          onClick={cancelEdit}\n                                          className=\"btn btn-secondary btn-sm\"\n                                        >\n                                          <i className=\"fas fa-times\"></i> Cancel\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    // Display mode\n                                    <>\n                                      <div className=\"expense-primary\">\n                                        <span className=\"expense-title\">{transaction.description}</span>\n                                        <span className=\"expense-amount\">${transaction.amount.toFixed(2)}</span>\n                                      </div>\n                                      <div className=\"expense-secondary\">\n                                        {transaction.type === 'expense' && (\n                                          <span className=\"expense-tag\">{transaction.category}</span>\n                                        )}\n                                        <span className=\"expense-date\">{getDayWithSuffix(transaction.dueDate)}</span>\n                                        <span className=\"expense-frequency\">{transaction.frequency}</span>\n                                      </div>\n                                    </>\n                                  )}\n                                </div>\n                                {!editingId && (\n                                  <div className=\"expense-actions\">\n                                    <button\n                                      onClick={() => startEditing(transaction)}\n                                      className=\"btn-icon\"\n                                      title=\"Edit\"\n                                    >\n                                      <i className=\"fas fa-edit\"></i>\n                                      <span>Edit</span>\n                                    </button>\n                                    <button\n                                      onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                      className=\"btn-icon delete\"\n                                      title=\"Delete\"\n                                    >\n                                      <i className=\"fas fa-trash\"></i>\n                                      <span>Delete</span>\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Collapse>\n              </div>\n            </div>\n          </div>\n\n          {/* Render current month's page */}\n          <MonthPage\n            month={currentMonth}\n            year={currentYear}\n            transactions={allMonthsTransactions[`${currentYear}-${currentMonth}`] || []}\n            onUpdateTransaction={addTransaction}\n            onDeleteTransaction={deleteTransaction}\n          />\n        </>\n      ) : (\n        <CreditCardTracker \n          creditCards={creditCards} \n          setCreditCards={updateCreditCards}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}