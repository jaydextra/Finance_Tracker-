{"ast":null,"code":"var _jsxFileName = \"/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\n\n// Create theme context\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Add this before the App component.\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction App() {\n  _s2();\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    const savedTransactions = localStorage.getItem('transactions');\n    if (savedTransactions) {\n      setTransactions(JSON.parse(savedTransactions));\n    }\n  }, []);\n\n  // Save transactions to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n  }, [transactions]);\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [chart]);\n\n  // Add this new useEffect to handle localStorage for allMonthsTransactions\n  useEffect(() => {\n    const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n    if (savedMonthsTransactions) {\n      setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n    }\n  }, []);\n\n  // Add this useEffect to save allMonthsTransactions when it changes\n  useEffect(() => {\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(allMonthsTransactions));\n  }, [allMonthsTransactions]);\n\n  // Update the chart update useEffect\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) return;\n\n    // Destroy existing chart\n    if (chart) {\n      chart.destroy();\n    }\n\n    // Get transactions for current month from both sources\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && tDate.getFullYear() === currentYear;\n    });\n\n    // Combine transactions and filter out skipped ones\n    const allTransactions = [...regularTransactions, ...monthTransactions].filter(t => t.type === 'expense' && !t.skipped);\n\n    // Calculate totals by category\n    const categoryTotals = allTransactions.reduce((acc, transaction) => {\n      if (!acc[transaction.category]) {\n        acc[transaction.category] = 0;\n      }\n      acc[transaction.category] += parseFloat(transaction.amount);\n      return acc;\n    }, {});\n\n    // Define consistent colors for categories\n    const categoryColors = {\n      Bills: 'rgba(255, 99, 132, 0.8)',\n      Savings: 'rgba(54, 162, 235, 0.8)',\n      Personal: 'rgba(255, 206, 86, 0.8)',\n      Other: 'rgba(75, 192, 192, 0.8)'\n    };\n    const categoryBorders = {\n      Bills: 'rgba(255, 99, 132, 1)',\n      Savings: 'rgba(54, 162, 235, 1)',\n      Personal: 'rgba(255, 206, 86, 1)',\n      Other: 'rgba(75, 192, 192, 1)'\n    };\n\n    // Only create chart if there's data\n    if (Object.keys(categoryTotals).length > 0) {\n      const newChart = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: Object.keys(categoryTotals),\n          datasets: [{\n            data: Object.values(categoryTotals),\n            backgroundColor: Object.keys(categoryTotals).map(category => categoryColors[category] || 'rgba(128, 128, 128, 0.8)'),\n            borderColor: Object.keys(categoryTotals).map(category => categoryBorders[category] || 'rgba(128, 128, 128, 1)'),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            datalabels: {\n              formatter: value => `$${value.toFixed(2)}`,\n              color: '#fff',\n              font: {\n                weight: 'bold',\n                size: 14\n              },\n              textAlign: 'center'\n            },\n            legend: {\n              position: 'right',\n              labels: {\n                color: isDarkMode ? '#ffffff' : '#666666',\n                font: {\n                  size: 12\n                },\n                generateLabels: chart => {\n                  const data = chart.data;\n                  if (data.labels.length && data.datasets.length) {\n                    return data.labels.map((label, i) => {\n                      const value = data.datasets[0].data[i];\n                      return {\n                        text: `${label}: $${value.toFixed(2)}`,\n                        fillStyle: data.datasets[0].backgroundColor[i],\n                        strokeStyle: data.datasets[0].borderColor[i],\n                        lineWidth: 1,\n                        hidden: false,\n                        index: i\n                      };\n                    });\n                  }\n                  return [];\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: context => {\n                  const value = context.raw;\n                  return ` $${value.toFixed(2)}`;\n                }\n              }\n            }\n          }\n        },\n        plugins: [ChartDataLabels]\n      });\n      setChart(newChart);\n    }\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode, chart]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = e => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly',\n      // Add default frequency for income\n      dueDate: new Date().toISOString().split('T')[0] // Add current date as due date\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n\n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    alert('Income added successfully!');\n  };\n  const handleExpenseSubmit = e => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newExpense, 'expense');\n\n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    alert('Expense added successfully!');\n  };\n  const togglePaid = id => {\n    // Check if the transaction is in allMonthsTransactions\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n    if (monthTransaction) {\n      // Update in allMonthsTransactions\n      setAllMonthsTransactions(prev => ({\n        ...prev,\n        [monthKey]: prev[monthKey].map(t => t.id === id ? {\n          ...t,\n          paid: !t.paid,\n          skipped: false\n        } : t)\n      }));\n    } else {\n      // Update in regular transactions\n      setTransactions(transactions.map(t => t.id === id ? {\n        ...t,\n        paid: !t.paid,\n        skipped: false\n      } : t));\n    }\n  };\n  const toggleSkipped = id => {\n    setTransactions(transactions.map(t => t.id === id ? {\n      ...t,\n      skipped: !t.skipped,\n      paid: false\n    } : t));\n  };\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      if (!transaction) {\n        // Check in allMonthsTransactions if not found in transactions\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        if (monthTransaction !== null && monthTransaction !== void 0 && monthTransaction.originalTransactionId) {\n          // If it's a recurring transaction, ask if they want to delete all future occurrences\n          const deleteAll = window.confirm('Delete all future occurrences of this recurring transaction?');\n          if (deleteAll) {\n            // Delete from current month forward\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions\n            };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || year === currentYear && month >= fromMonth) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey].filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n          } else {\n            // Delete only this occurrence\n            setAllMonthsTransactions(prev => ({\n              ...prev,\n              [monthKey]: prev[monthKey].filter(t => t.id !== transactionId)\n            }));\n          }\n        } else {\n          // Handle one-time transaction deletion\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].filter(t => t.id !== transactionId)\n          }));\n        }\n      } else {\n        // Handle deletion from regular transactions array\n        setTransactions(transactions.filter(t => t.id !== transactionId));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = type => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n\n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\n    });\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n\n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) => index === self.findIndex(t => t.id === transaction.id));\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\n    });\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n    return {\n      income: allTransactions.filter(t => t.type === 'income').reduce((sum, t) => sum + t.amount, 0),\n      expenses: allTransactions.filter(t => t.type === 'expense' && !t.skipped).reduce((sum, t) => sum + t.amount, 0),\n      paid: allTransactions.filter(t => t.paid).reduce((sum, t) => sum + t.amount, 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = id => {\n    var _allMonthsTransaction;\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = (_allMonthsTransaction = allMonthsTransactions[monthKey]) === null || _allMonthsTransaction === void 0 ? void 0 : _allMonthsTransaction.some(t => t.id === id);\n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm('Do you want to apply these changes to all future occurrences?');\n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = {\n            ...allMonthsTransactions\n          };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || year === currentYear && month >= currentMonth) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t => t.originalTransactionId === editingValues.originalTransactionId ? {\n                ...t,\n                ...editingValues\n              } : t);\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t => t.id === id ? {\n              ...t,\n              ...editingValues\n            } : t)\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t => t.id === id ? {\n            ...t,\n            ...editingValues\n          } : t)\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => t.id === id ? {\n        ...t,\n        ...editingValues\n      } : t));\n    }\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = transaction => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = date => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1:\n        return day + \"st\";\n      case 2:\n        return day + \"nd\";\n      case 3:\n        return day + \"rd\";\n      default:\n        return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({\n      length: 6\n    }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions.filter(t => {\n          const tDate = new Date(t.date);\n          return t.type === 'expense' && tDate.getMonth() === date.getMonth() && !t.skipped;\n        }).reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions.filter(t => {\n          const tDate = new Date(t.date);\n          return t.type === 'income' && tDate.getMonth() === date.getMonth();\n        }).reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n\n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n\n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n\n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n    console.log('Adding transaction:', {\n      transaction,\n      type,\n      isRecurring,\n      startDate,\n      endOfYear\n    });\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(startDate, transaction.frequency, endOfYear);\n      console.log('Generated recurring dates:', recurringDates.length);\n\n      // Group transactions by month\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n        const recurringTransaction = {\n          ...transaction,\n          id: Date.now() + Math.random(),\n          // Ensure unique IDs\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: false // Reset paid status for each occurrence\n        };\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n      console.log('Transactions grouped by month:', transactionsByMonth);\n\n      // Update allMonthsTransactions\n      setAllMonthsTransactions(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n          if (!updated[monthKey]) {\n            updated[monthKey] = [];\n          }\n          updated[monthKey] = [...updated[monthKey], ...transactions];\n        });\n        return updated;\n      });\n    } else {\n      // Handle one-time transactions\n      const transactionDate = new Date(transaction.dueDate);\n      const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n      setAllMonthsTransactions(prev => ({\n        ...prev,\n        [monthKey]: [...(prev[monthKey] || []), {\n          ...transaction,\n          paid: false\n        }]\n      }));\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = transactions => {\n    const income = transactions.filter(t => t.type === 'income').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const paidIncome = transactions.filter(t => t.type === 'income' && t.paid).reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const expenses = transactions.filter(t => t.type === 'expense').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const balance = paidIncome - expenses;\n    return {\n      income,\n      paidIncome,\n      expenses,\n      balance\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"finance-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDarkMode(!isDarkMode),\n          className: \"theme-toggle-btn\",\n          title: isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas fa-${isDarkMode ? 'sun' : 'moon'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gradient-text\",\n        children: \"Finance Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          variant: \"tabs\",\n          className: \"main-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              active: activeTab === 'budget',\n              onClick: () => setActiveTab('budget'),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-wallet me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 17\n              }, this), \"Budget Tracker\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              active: activeTab === 'credit',\n              onClick: () => setActiveTab('credit'),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-credit-card me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 17\n              }, this), \"Credit Cards\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this), activeTab === 'budget' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn prev\",\n            onClick: () => {\n              if (currentMonth === 0) {\n                setCurrentYear(prev => prev - 1);\n                setCurrentMonth(11);\n              } else {\n                setCurrentMonth(prev => prev - 1);\n              }\n            },\n            \"aria-label\": \"Previous month\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-arrow-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentMonth,\n              onChange: e => setCurrentMonth(Number(e.target.value)),\n              className: \"month-dropdown\",\n              \"aria-label\": \"Select month\",\n              children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: index,\n                children: month\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentYear,\n              onChange: e => setCurrentYear(Number(e.target.value)),\n              className: \"year-dropdown\",\n              \"aria-label\": \"Select year\",\n              children: Array.from({\n                length: 5\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: currentYear - 2 + i,\n                children: currentYear - 2 + i\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn next\",\n            onClick: () => {\n              if (currentMonth === 11) {\n                setCurrentYear(prev => prev + 1);\n                setCurrentMonth(0);\n              } else {\n                setCurrentMonth(prev => prev + 1);\n              }\n            },\n            \"aria-label\": \"Next month\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-arrow-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 7\n    }, this), activeTab === 'budget' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-row income\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", calculateTotals().income.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-row expenses\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Expenses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", calculateTotals().expenses.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 761,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-row balance\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", (calculateTotals().income - calculateTotals().expenses).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Expense Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"expenseChart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-danger text-white\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setIsExpenseOpen(!isExpenseOpen),\n                \"aria-controls\": \"expenseForm\",\n                \"aria-expanded\": isExpenseOpen,\n                variant: \"link\",\n                className: \"text-white w-100 text-start p-0\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"mb-0\",\n                      children: \"Expenses\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 796,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 797,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 795,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: isExpenseOpen,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"expenseForm\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleExpenseSubmit,\n                    className: \"transaction-form\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: expenseDescription,\n                      onChange: e => setExpenseDescription(e.target.value),\n                      placeholder: \"Expense Item\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: expenseAmount,\n                      onChange: e => setExpenseAmount(e.target.value),\n                      placeholder: \"Amount\",\n                      step: \"0.01\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 814,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: category,\n                      onChange: e => setCategory(e.target.value),\n                      className: \"form-select\",\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 829,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Bills\",\n                        children: \"Bills\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 830,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Savings\",\n                        children: \"Savings\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 831,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Personal\",\n                        children: \"Personal\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 832,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Other\",\n                        children: \"Other\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 833,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 823,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      value: dueDate,\n                      onChange: e => setDueDate(e.target.value),\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 835,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: frequency,\n                      onChange: e => setFrequency(e.target.value),\n                      className: \"form-select\",\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Frequency\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 848,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Monthly\",\n                        children: \"Monthly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 849,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Bi-Weekly\",\n                        children: \"Bi-Weekly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 850,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Weekly\",\n                        children: \"Weekly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 851,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 842,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-danger\",\n                      children: \"Add Expense\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 853,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 805,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-success text-white\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setIsIncomeOpen(!isIncomeOpen),\n                \"aria-controls\": \"incomeSection\",\n                \"aria-expanded\": isIncomeOpen,\n                variant: \"link\",\n                className: \"text-white w-100 text-start p-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"mb-0\",\n                      children: \"Income\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 876,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 877,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 875,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"current-income-display mt-2\",\n                  children: [\"Total Monthly Income: $\", calculateTotals().income.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 880,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: isIncomeOpen,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"incomeSection\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleIncomeSubmit,\n                    className: \"transaction-form mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: incomeDescription,\n                      onChange: e => setIncomeDescription(e.target.value),\n                      placeholder: \"Income Source\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 889,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: incomeAmount,\n                      onChange: e => setIncomeAmount(e.target.value),\n                      placeholder: \"Amount\",\n                      step: \"0.01\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 897,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-success\",\n                      children: \"Add Income\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 906,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 888,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-hover\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Description\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 914,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Amount\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 915,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 916,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Actions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 917,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 913,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 912,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: filterTransactions('income').map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              value: editingValues.description || '',\n                              onChange: e => setEditingValues({\n                                ...editingValues,\n                                description: e.target.value\n                              }),\n                              className: \"form-control form-control-sm\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 925,\n                              columnNumber: 37\n                            }, this) : transaction.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 923,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"number\",\n                              value: editingValues.amount || '',\n                              onChange: e => setEditingValues({\n                                ...editingValues,\n                                amount: parseFloat(e.target.value)\n                              }),\n                              className: \"form-control form-control-sm\",\n                              step: \"0.01\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 940,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-success\",\n                              children: [\"$\", transaction.amount.toFixed(2)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 951,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 938,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"expense-checkbox\",\n                              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"checkbox\",\n                                checked: transaction.paid,\n                                onChange: () => togglePaid(transaction.id),\n                                id: `paid-income-${transaction.id}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 956,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"checkmark\",\n                                htmlFor: `paid-income-${transaction.id}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 962,\n                                columnNumber: 37\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 955,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 954,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => saveEdit(transaction.id),\n                                className: \"btn-icon\",\n                                title: \"Save changes\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-save\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 973,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Save\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 974,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 968,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: cancelEdit,\n                                className: \"btn-icon delete\",\n                                title: \"Cancel editing\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-times\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 981,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Cancel\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 982,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 976,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"expense-actions\",\n                              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => startEditing(transaction),\n                                className: \"btn-icon\",\n                                title: \"Edit this entry\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-edit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 992,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Edit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 993,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 987,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => deleteTransaction(transaction.id, currentMonth),\n                                className: \"btn-icon delete\",\n                                title: \"Delete this entry\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-trash\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1000,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Delete\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1001,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 995,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 986,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 965,\n                            columnNumber: 33\n                          }, this)]\n                        }, transaction.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 922,\n                          columnNumber: 31\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 920,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 911,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 910,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-danger text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-0\",\n                children: \"Expenses List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"expense-list\",\n                  children: filterTransactions('expense').map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `expense-item ${transaction.paid ? 'paid' : ''}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"expense-main\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"expense-checkbox\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          checked: transaction.paid,\n                          onChange: () => togglePaid(transaction.id),\n                          id: `paid-${transaction.id}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1033,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"checkmark\",\n                          htmlFor: `paid-${transaction.id}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1039,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1032,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"expense-content\",\n                        children: editingId === transaction.id ?\n                        /*#__PURE__*/\n                        // Edit mode\n                        _jsxDEV(\"div\", {\n                          className: \"expense-edit-form\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            value: editingValues.description || '',\n                            onChange: e => setEditingValues({\n                              ...editingValues,\n                              description: e.target.value\n                            }),\n                            className: \"form-control form-control-sm mb-2\",\n                            placeholder: \"Description\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1045,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"number\",\n                            value: editingValues.amount || '',\n                            onChange: e => setEditingValues({\n                              ...editingValues,\n                              amount: parseFloat(e.target.value)\n                            }),\n                            className: \"form-control form-control-sm mb-2\",\n                            step: \"0.01\",\n                            placeholder: \"Amount\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1055,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                            value: editingValues.category || '',\n                            onChange: e => setEditingValues({\n                              ...editingValues,\n                              category: e.target.value\n                            }),\n                            className: \"form-select form-select-sm mb-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"Bills\",\n                              children: \"Bills\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1074,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"Savings\",\n                              children: \"Savings\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1075,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"Personal\",\n                              children: \"Personal\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1076,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"Other\",\n                              children: \"Other\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1077,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1066,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"date\",\n                            value: editingValues.dueDate || '',\n                            onChange: e => setEditingValues({\n                              ...editingValues,\n                              dueDate: e.target.value\n                            }),\n                            className: \"form-control form-control-sm mb-2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1079,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"edit-actions\",\n                            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => saveEdit(transaction.id),\n                              className: \"btn btn-success btn-sm me-2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fas fa-save\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1093,\n                                columnNumber: 39\n                              }, this), \" Save\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1089,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: cancelEdit,\n                              className: \"btn btn-secondary btn-sm\",\n                              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fas fa-times\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1099,\n                                columnNumber: 39\n                              }, this), \" Cancel\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1095,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1088,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1044,\n                          columnNumber: 33\n                        }, this) :\n                        /*#__PURE__*/\n                        // Display mode\n                        _jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"expense-primary\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-title\",\n                              children: transaction.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1107,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-amount\",\n                              children: [\"$\", transaction.amount.toFixed(2)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1108,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1106,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"expense-secondary\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-tag\",\n                              children: transaction.category\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1111,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-date\",\n                              children: getDayWithSuffix(transaction.dueDate)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1112,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-frequency\",\n                              children: transaction.frequency\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1113,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1110,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1041,\n                        columnNumber: 29\n                      }, this), !editingId && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"expense-actions\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => startEditing(transaction),\n                          className: \"btn-icon\",\n                          title: \"Edit\",\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-edit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1125,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Edit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1126,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1120,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => deleteTransaction(transaction.id, currentMonth),\n                          className: \"btn-icon delete\",\n                          title: \"Delete\",\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-trash\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1133,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Delete\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1134,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1128,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1119,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1031,\n                      columnNumber: 27\n                    }, this)\n                  }, transaction.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1030,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1028,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MonthPage, {\n        month: currentMonth,\n        year: currentYear,\n        transactions: allMonthsTransactions[`${currentYear}-${currentMonth}`] || [],\n        onUpdateTransaction: addTransaction,\n        onDeleteTransaction: deleteTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(CreditCardTracker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 650,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"H21qWxAkPHb4BNtrplWIjpPoF0A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Chart","ChartDataLabels","Collapse","Button","Card","Nav","Line","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","MonthPage","CreditCardTracker","jsxDEV","_jsxDEV","Fragment","_Fragment","register","ThemeContext","useTheme","_s","App","_s2","transactions","setTransactions","incomeDescription","setIncomeDescription","incomeAmount","setIncomeAmount","expenseDescription","setExpenseDescription","expenseAmount","setExpenseAmount","category","setCategory","dueDate","setDueDate","Date","toISOString","split","frequency","setFrequency","currentMonth","setCurrentMonth","getMonth","chart","setChart","isIncomeOpen","setIsIncomeOpen","isIncomeListOpen","setIsIncomeListOpen","isExpenseOpen","setIsExpenseOpen","editingId","setEditingId","editingValues","setEditingValues","isDarkMode","setIsDarkMode","currentYear","setCurrentYear","getFullYear","allMonthsTransactions","setAllMonthsTransactions","activeTab","setActiveTab","months","savedTransactions","localStorage","getItem","JSON","parse","setItem","stringify","destroy","savedMonthsTransactions","ctx","document","getElementById","monthKey","monthTransactions","regularTransactions","filter","t","tDate","date","allTransactions","type","skipped","categoryTotals","reduce","acc","transaction","parseFloat","amount","categoryColors","Bills","Savings","Personal","Other","categoryBorders","Object","keys","length","newChart","data","labels","datasets","values","backgroundColor","map","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","datalabels","formatter","value","toFixed","color","font","weight","size","textAlign","legend","position","generateLabels","label","i","text","fillStyle","strokeStyle","lineWidth","hidden","index","tooltip","callbacks","context","raw","handleIncomeSubmit","e","preventDefault","alert","newIncome","id","now","description","addTransaction","handleExpenseSubmit","newExpense","paid","togglePaid","monthTransaction","find","prev","toggleSkipped","deleteTransaction","transactionId","fromMonth","window","confirm","originalTransactionId","deleteAll","updatedMonthsTransactions","forEach","year","month","Number","filterTransactions","transactionDate","recurringTransactions","combined","self","findIndex","calculateTotals","income","sum","expenses","saveEdit","_allMonthsTransaction","isMonthTransaction","some","editFuture","key","startEditing","toString","cancelEdit","getDayWithSuffix","day","getDate","getMonthlyTrends","last6Months","Array","from","_","d","setMonth","reverse","generateRecurringDates","startDate","endDate","dates","currentDate","end","setHours","console","log","push","originalDay","setDate","endOfYear","isRecurring","recurringDates","transactionsByMonth","recurringTransaction","Math","random","updated","entries","calculateSummary","paidIncome","balance","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","variant","Item","Link","active","onChange","target","Header","in","Body","onSubmit","placeholder","required","step","checked","htmlFor","onUpdateTransaction","onDeleteTransaction","_c","$RefreshReg$"],"sources":["/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n} from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\n// Create theme context\nconst ThemeContext = createContext();\n\n// Add this before the App component.\nexport const useTheme = () => useContext(ThemeContext);\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    const savedTransactions = localStorage.getItem('transactions');\n    if (savedTransactions) {\n      setTransactions(JSON.parse(savedTransactions));\n    }\n  }, []);\n\n  // Save transactions to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n  }, [transactions]);\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [chart]);\n\n  // Add this new useEffect to handle localStorage for allMonthsTransactions\n  useEffect(() => {\n    const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n    if (savedMonthsTransactions) {\n      setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n    }\n  }, []);\n\n  // Add this useEffect to save allMonthsTransactions when it changes\n  useEffect(() => {\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(allMonthsTransactions));\n  }, [allMonthsTransactions]);\n\n  // Update the chart update useEffect\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) return;\n\n    // Destroy existing chart\n    if (chart) {\n      chart.destroy();\n    }\n\n    // Get transactions for current month from both sources\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && \n             tDate.getFullYear() === currentYear;\n    });\n\n    // Combine transactions and filter out skipped ones\n    const allTransactions = [...regularTransactions, ...monthTransactions]\n      .filter(t => t.type === 'expense' && !t.skipped);\n\n    // Calculate totals by category\n    const categoryTotals = allTransactions.reduce((acc, transaction) => {\n      if (!acc[transaction.category]) {\n        acc[transaction.category] = 0;\n      }\n      acc[transaction.category] += parseFloat(transaction.amount);\n      return acc;\n    }, {});\n\n    // Define consistent colors for categories\n    const categoryColors = {\n      Bills: 'rgba(255, 99, 132, 0.8)',\n      Savings: 'rgba(54, 162, 235, 0.8)',\n      Personal: 'rgba(255, 206, 86, 0.8)',\n      Other: 'rgba(75, 192, 192, 0.8)'\n    };\n\n    const categoryBorders = {\n      Bills: 'rgba(255, 99, 132, 1)',\n      Savings: 'rgba(54, 162, 235, 1)',\n      Personal: 'rgba(255, 206, 86, 1)',\n      Other: 'rgba(75, 192, 192, 1)'\n    };\n\n    // Only create chart if there's data\n    if (Object.keys(categoryTotals).length > 0) {\n      const newChart = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: Object.keys(categoryTotals),\n          datasets: [{\n            data: Object.values(categoryTotals),\n            backgroundColor: Object.keys(categoryTotals).map(category => \n              categoryColors[category] || 'rgba(128, 128, 128, 0.8)'\n            ),\n            borderColor: Object.keys(categoryTotals).map(category => \n              categoryBorders[category] || 'rgba(128, 128, 128, 1)'\n            ),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            datalabels: {\n              formatter: (value) => `$${value.toFixed(2)}`,\n              color: '#fff',\n              font: {\n                weight: 'bold',\n                size: 14\n              },\n              textAlign: 'center'\n            },\n            legend: {\n              position: 'right',\n              labels: {\n                color: isDarkMode ? '#ffffff' : '#666666',\n                font: {\n                  size: 12\n                },\n                generateLabels: (chart) => {\n                  const data = chart.data;\n                  if (data.labels.length && data.datasets.length) {\n                    return data.labels.map((label, i) => {\n                      const value = data.datasets[0].data[i];\n                      return {\n                        text: `${label}: $${value.toFixed(2)}`,\n                        fillStyle: data.datasets[0].backgroundColor[i],\n                        strokeStyle: data.datasets[0].borderColor[i],\n                        lineWidth: 1,\n                        hidden: false,\n                        index: i\n                      };\n                    });\n                  }\n                  return [];\n                }\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: (context) => {\n                  const value = context.raw;\n                  return ` $${value.toFixed(2)}`;\n                }\n              }\n            }\n          }\n        },\n        plugins: [ChartDataLabels]\n      });\n\n      setChart(newChart);\n    }\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode, chart]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = (e) => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly', // Add default frequency for income\n      dueDate: new Date().toISOString().split('T')[0] // Add current date as due date\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n    \n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    alert('Income added successfully!');\n  };\n\n  const handleExpenseSubmit = (e) => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newExpense, 'expense');\n    \n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    alert('Expense added successfully!');\n  };\n\n  const togglePaid = (id) => {\n    // Check if the transaction is in allMonthsTransactions\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n\n    if (monthTransaction) {\n      // Update in allMonthsTransactions\n      setAllMonthsTransactions(prev => ({\n        ...prev,\n        [monthKey]: prev[monthKey].map(t =>\n          t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n        )\n      }));\n    } else {\n      // Update in regular transactions\n      setTransactions(transactions.map(t =>\n        t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n      ));\n    }\n  };\n\n  const toggleSkipped = (id) => {\n    setTransactions(transactions.map(t => \n      t.id === id ? { ...t, skipped: !t.skipped, paid: false } : t\n    ));\n  };\n\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      \n      if (!transaction) {\n        // Check in allMonthsTransactions if not found in transactions\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        \n        if (monthTransaction?.originalTransactionId) {\n          // If it's a recurring transaction, ask if they want to delete all future occurrences\n          const deleteAll = window.confirm(\n            'Delete all future occurrences of this recurring transaction?'\n          );\n          \n          if (deleteAll) {\n            // Delete from current month forward\n            const updatedMonthsTransactions = { ...allMonthsTransactions };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || (year === currentYear && month >= fromMonth)) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey]\n                  .filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n          } else {\n            // Delete only this occurrence\n            setAllMonthsTransactions(prev => ({\n              ...prev,\n              [monthKey]: prev[monthKey].filter(t => t.id !== transactionId)\n            }));\n          }\n        } else {\n          // Handle one-time transaction deletion\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].filter(t => t.id !== transactionId)\n          }));\n        }\n      } else {\n        // Handle deletion from regular transactions array\n        setTransactions(transactions.filter(t => t.id !== transactionId));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = (type) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && \n             transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n    \n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) =>\n      index === self.findIndex(t => t.id === transaction.id)\n    );\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n\n    return {\n      income: allTransactions\n        .filter(t => t.type === 'income')\n        .reduce((sum, t) => sum + t.amount, 0),\n      expenses: allTransactions\n        .filter(t => t.type === 'expense' && !t.skipped)\n        .reduce((sum, t) => sum + t.amount, 0),\n      paid: allTransactions\n        .filter(t => t.paid)\n        .reduce((sum, t) => sum + t.amount, 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = allMonthsTransactions[monthKey]?.some(t => t.id === id);\n    \n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm(\n          'Do you want to apply these changes to all future occurrences?'\n        );\n        \n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = { ...allMonthsTransactions };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || (year === currentYear && month >= currentMonth)) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t =>\n                t.originalTransactionId === editingValues.originalTransactionId\n                  ? { ...t, ...editingValues }\n                  : t\n              );\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, ...editingValues } : t\n            )\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t =>\n            t.id === id ? { ...t, ...editingValues } : t\n          )\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => \n        t.id === id ? { ...t, ...editingValues } : t\n      ));\n    }\n    \n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = (transaction) => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = (date) => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1: return day + \"st\";\n      case 2: return day + \"nd\";\n      case 3: return day + \"rd\";\n      default: return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({ length: 6 }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'expense' && \n                   tDate.getMonth() === date.getMonth() &&\n                   !t.skipped;\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'income' && \n                   tDate.getMonth() === date.getMonth();\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n      \n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n      \n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n    \n    console.log('Adding transaction:', {\n      transaction,\n      type,\n      isRecurring,\n      startDate,\n      endOfYear\n    });\n\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(\n        startDate,\n        transaction.frequency,\n        endOfYear\n      );\n\n      console.log('Generated recurring dates:', recurringDates.length);\n\n      // Group transactions by month\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n\n        const recurringTransaction = {\n          ...transaction,\n          id: Date.now() + Math.random(), // Ensure unique IDs\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: false // Reset paid status for each occurrence\n        };\n\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n\n      console.log('Transactions grouped by month:', transactionsByMonth);\n\n      // Update allMonthsTransactions\n      setAllMonthsTransactions(prev => {\n        const updated = { ...prev };\n        Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n          if (!updated[monthKey]) {\n            updated[monthKey] = [];\n          }\n          updated[monthKey] = [...updated[monthKey], ...transactions];\n        });\n        return updated;\n      });\n\n    } else {\n      // Handle one-time transactions\n      const transactionDate = new Date(transaction.dueDate);\n      const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n      \n      setAllMonthsTransactions(prev => ({\n        ...prev,\n        [monthKey]: [...(prev[monthKey] || []), { ...transaction, paid: false }]\n      }));\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = (transactions) => {\n    const income = transactions\n      .filter(t => t.type === 'income')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const paidIncome = transactions\n      .filter(t => t.type === 'income' && t.paid)\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const expenses = transactions\n      .filter(t => t.type === 'expense')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const balance = paidIncome - expenses;\n\n    return { income, paidIncome, expenses, balance };\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      <header className=\"finance-header\">\n        <div className=\"theme-toggle\">\n          <button \n            onClick={() => setIsDarkMode(!isDarkMode)}\n            className=\"theme-toggle-btn\"\n            title={isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n          >\n            <i className={`fas fa-${isDarkMode ? 'sun' : 'moon'}`}></i>\n          </button>\n        </div>\n        <h1 className=\"gradient-text\">Finance Tracker</h1>\n        \n        {/* Update the navigation section */}\n        <div className=\"app-navigation\">\n          {/* Main Tabs */}\n          <Nav variant=\"tabs\" className=\"main-nav\">\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'budget'}\n                onClick={() => setActiveTab('budget')}\n              >\n                <i className=\"fas fa-wallet me-2\"></i>\n                Budget Tracker\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'credit'}\n                onClick={() => setActiveTab('credit')}\n              >\n                <i className=\"fas fa-credit-card me-2\"></i>\n                Credit Cards\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n\n          {/* Month Navigation - Only show for budget tab */}\n          {activeTab === 'budget' && (\n            <div className=\"month-navigation\">\n              <button \n                className=\"nav-btn prev\"\n                onClick={() => {\n                  if (currentMonth === 0) {\n                    setCurrentYear(prev => prev - 1);\n                    setCurrentMonth(11);\n                  } else {\n                    setCurrentMonth(prev => prev - 1);\n                  }\n                }}\n                aria-label=\"Previous month\"\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n              \n              <div className=\"month-select\">\n                <select \n                  value={currentMonth}\n                  onChange={(e) => setCurrentMonth(Number(e.target.value))}\n                  className=\"month-dropdown\"\n                  aria-label=\"Select month\"\n                >\n                  {months.map((month, index) => (\n                    <option key={index} value={index}>{month}</option>\n                  ))}\n                </select>\n                <select \n                  value={currentYear}\n                  onChange={(e) => setCurrentYear(Number(e.target.value))}\n                  className=\"year-dropdown\"\n                  aria-label=\"Select year\"\n                >\n                  {Array.from({ length: 5 }, (_, i) => (\n                    <option key={i} value={currentYear - 2 + i}>\n                      {currentYear - 2 + i}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <button \n                className=\"nav-btn next\"\n                onClick={() => {\n                  if (currentMonth === 11) {\n                    setCurrentYear(prev => prev + 1);\n                    setCurrentMonth(0);\n                  } else {\n                    setCurrentMonth(prev => prev + 1);\n                  }\n                }}\n                aria-label=\"Next month\"\n              >\n                <i className=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </header>\n\n      {/* Conditional Rendering based on active tab */}\n      {activeTab === 'budget' ? (\n        <>\n          {/* Updated Summary Card */}\n          <div className=\"row mb-4\">\n            {/* Summary Stats - Simplified */}\n            <div className=\"mobile-summary\">\n              <div className=\"stat-card\">\n                <div className=\"stat-row income\">\n                  <div className=\"stat-label\">Income</div>\n                  <div className=\"stat-value\">${calculateTotals().income.toFixed(2)}</div>\n                </div>\n                <div className=\"stat-row expenses\">\n                  <div className=\"stat-label\">Expenses</div>\n                  <div className=\"stat-value\">${calculateTotals().expenses.toFixed(2)}</div>\n                </div>\n                <div className=\"stat-row balance\">\n                  <div className=\"stat-label\">Balance</div>\n                  <div className=\"stat-value\">${(calculateTotals().income - calculateTotals().expenses).toFixed(2)}</div>\n                </div>\n              </div>\n              \n              {/* Single Chart - Most Important View */}\n              <div className=\"chart-section\">\n                <h3>Expense Breakdown</h3>\n                <div className=\"chart-container\">\n                  <canvas id=\"expenseChart\"></canvas>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Forms Section - Side by Side */}\n          <div className=\"row\">\n            {/* Expense Form */}\n            <div className=\"col-md-8 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-danger text-white\">\n                  <Button\n                    onClick={() => setIsExpenseOpen(!isExpenseOpen)}\n                    aria-controls=\"expenseForm\"\n                    aria-expanded={isExpenseOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Expenses</h3>\n                        <i className={`fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                <Collapse in={isExpenseOpen}>\n                  <div id=\"expenseForm\">\n                    <Card.Body>\n                      <form onSubmit={handleExpenseSubmit} className=\"transaction-form\">\n                        <input\n                          type=\"text\"\n                          value={expenseDescription}\n                          onChange={(e) => setExpenseDescription(e.target.value)}\n                          placeholder=\"Expense Item\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={expenseAmount}\n                          onChange={(e) => setExpenseAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={category} \n                          onChange={(e) => setCategory(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Category</option>\n                          <option value=\"Bills\">Bills</option>\n                          <option value=\"Savings\">Savings</option>\n                          <option value=\"Personal\">Personal</option>\n                          <option value=\"Other\">Other</option>\n                        </select>\n                        <input\n                          type=\"date\"\n                          value={dueDate}\n                          onChange={(e) => setDueDate(e.target.value)}\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={frequency} \n                          onChange={(e) => setFrequency(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Frequency</option>\n                          <option value=\"Monthly\">Monthly</option>\n                          <option value=\"Bi-Weekly\">Bi-Weekly</option>\n                          <option value=\"Weekly\">Weekly</option>\n                        </select>\n                        <button type=\"submit\" className=\"btn btn-danger\">\n                          Add Expense\n                        </button>\n                      </form>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n\n            {/* Income Form */}\n            <div className=\"col-md-4 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-success text-white\">\n                  <Button\n                    onClick={() => setIsIncomeOpen(!isIncomeOpen)}\n                    aria-controls=\"incomeSection\"\n                    aria-expanded={isIncomeOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Income</h3>\n                        <i className={`fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                    <div className=\"current-income-display mt-2\">\n                      Total Monthly Income: ${calculateTotals().income.toFixed(2)}\n                    </div>\n                  </Button>\n                </Card.Header>\n                <Collapse in={isIncomeOpen}>\n                  <div id=\"incomeSection\">\n                    <Card.Body>\n                      <form onSubmit={handleIncomeSubmit} className=\"transaction-form mb-4\">\n                        <input\n                          type=\"text\"\n                          value={incomeDescription}\n                          onChange={(e) => setIncomeDescription(e.target.value)}\n                          placeholder=\"Income Source\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={incomeAmount}\n                          onChange={(e) => setIncomeAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <button type=\"submit\" className=\"btn btn-success\">\n                          Add Income\n                        </button>\n                      </form>\n                      <div className=\"table-responsive\">\n                        <table className=\"table table-hover\">\n                          <thead>\n                            <tr>\n                              <th>Description</th>\n                              <th>Amount</th>\n                              <th>Paid</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {filterTransactions('income').map(transaction => (\n                              <tr key={transaction.id}>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"text\"\n                                      value={editingValues.description || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        description: e.target.value\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                    />\n                                  ) : (\n                                    transaction.description\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"number\"\n                                      value={editingValues.amount || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        amount: parseFloat(e.target.value)\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                      step=\"0.01\"\n                                    />\n                                  ) : (\n                                    <span className=\"text-success\">${transaction.amount.toFixed(2)}</span>\n                                  )}\n                                </td>\n                                <td>\n                                  <div className=\"expense-checkbox\">\n                                    <input\n                                      type=\"checkbox\"\n                                      checked={transaction.paid}\n                                      onChange={() => togglePaid(transaction.id)}\n                                      id={`paid-income-${transaction.id}`}\n                                    />\n                                    <label className=\"checkmark\" htmlFor={`paid-income-${transaction.id}`}></label>\n                                  </div>\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <>\n                                      <button\n                                        onClick={() => saveEdit(transaction.id)}\n                                        className=\"btn-icon\"\n                                        title=\"Save changes\"\n                                      >\n                                        <i className=\"fas fa-save\"></i>\n                                        <span>Save</span>\n                                      </button>\n                                      <button\n                                        onClick={cancelEdit}\n                                        className=\"btn-icon delete\"\n                                        title=\"Cancel editing\"\n                                      >\n                                        <i className=\"fas fa-times\"></i>\n                                        <span>Cancel</span>\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <div className=\"expense-actions\">\n                                      <button\n                                        onClick={() => startEditing(transaction)}\n                                        className=\"btn-icon\"\n                                        title=\"Edit this entry\"\n                                      >\n                                        <i className=\"fas fa-edit\"></i>\n                                        <span>Edit</span>\n                                      </button>\n                                      <button\n                                        onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                        className=\"btn-icon delete\"\n                                        title=\"Delete this entry\"\n                                      >\n                                        <i className=\"fas fa-trash\"></i>\n                                        <span>Delete</span>\n                                      </button>\n                                    </div>\n                                  )}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n          </div>\n\n          {/* Full Width Expenses List */}\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header bg-danger text-white\">\n                  <h3 className=\"mb-0\">Expenses List</h3>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"table-responsive\">\n                    {/* Mobile-Friendly Expense List */}\n                    <div className=\"expense-list\">\n                      {filterTransactions('expense').map(transaction => (\n                        <div key={transaction.id} className={`expense-item ${transaction.paid ? 'paid' : ''}`}>\n                          <div className=\"expense-main\">\n                            <div className=\"expense-checkbox\">\n                              <input\n                                type=\"checkbox\"\n                                checked={transaction.paid}\n                                onChange={() => togglePaid(transaction.id)}\n                                id={`paid-${transaction.id}`}\n                              />\n                              <label className=\"checkmark\" htmlFor={`paid-${transaction.id}`}></label>\n                            </div>\n                            <div className=\"expense-content\">\n                              {editingId === transaction.id ? (\n                                // Edit mode\n                                <div className=\"expense-edit-form\">\n                                  <input\n                                    type=\"text\"\n                                    value={editingValues.description || ''}\n                                    onChange={(e) => setEditingValues({\n                                      ...editingValues,\n                                      description: e.target.value\n                                    })}\n                                    className=\"form-control form-control-sm mb-2\"\n                                    placeholder=\"Description\"\n                                  />\n                                  <input\n                                    type=\"number\"\n                                    value={editingValues.amount || ''}\n                                    onChange={(e) => setEditingValues({\n                                      ...editingValues,\n                                      amount: parseFloat(e.target.value)\n                                    })}\n                                    className=\"form-control form-control-sm mb-2\"\n                                    step=\"0.01\"\n                                    placeholder=\"Amount\"\n                                  />\n                                  <select\n                                    value={editingValues.category || ''}\n                                    onChange={(e) => setEditingValues({\n                                      ...editingValues,\n                                      category: e.target.value\n                                    })}\n                                    className=\"form-select form-select-sm mb-2\"\n                                  >\n                                    <option value=\"Bills\">Bills</option>\n                                    <option value=\"Savings\">Savings</option>\n                                    <option value=\"Personal\">Personal</option>\n                                    <option value=\"Other\">Other</option>\n                                  </select>\n                                  <input\n                                    type=\"date\"\n                                    value={editingValues.dueDate || ''}\n                                    onChange={(e) => setEditingValues({\n                                      ...editingValues,\n                                      dueDate: e.target.value\n                                    })}\n                                    className=\"form-control form-control-sm mb-2\"\n                                  />\n                                  <div className=\"edit-actions\">\n                                    <button\n                                      onClick={() => saveEdit(transaction.id)}\n                                      className=\"btn btn-success btn-sm me-2\"\n                                    >\n                                      <i className=\"fas fa-save\"></i> Save\n                                    </button>\n                                    <button\n                                      onClick={cancelEdit}\n                                      className=\"btn btn-secondary btn-sm\"\n                                    >\n                                      <i className=\"fas fa-times\"></i> Cancel\n                                    </button>\n                                  </div>\n                                </div>\n                              ) : (\n                                // Display mode\n                                <>\n                                  <div className=\"expense-primary\">\n                                    <span className=\"expense-title\">{transaction.description}</span>\n                                    <span className=\"expense-amount\">${transaction.amount.toFixed(2)}</span>\n                                  </div>\n                                  <div className=\"expense-secondary\">\n                                    <span className=\"expense-tag\">{transaction.category}</span>\n                                    <span className=\"expense-date\">{getDayWithSuffix(transaction.dueDate)}</span>\n                                    <span className=\"expense-frequency\">{transaction.frequency}</span>\n                                  </div>\n                                </>\n                              )}\n                            </div>\n                            {!editingId && (\n                              <div className=\"expense-actions\">\n                                <button\n                                  onClick={() => startEditing(transaction)}\n                                  className=\"btn-icon\"\n                                  title=\"Edit\"\n                                >\n                                  <i className=\"fas fa-edit\"></i>\n                                  <span>Edit</span>\n                                </button>\n                                <button\n                                  onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                  className=\"btn-icon delete\"\n                                  title=\"Delete\"\n                                >\n                                  <i className=\"fas fa-trash\"></i>\n                                  <span>Delete</span>\n                                </button>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Render current month's page */}\n          <MonthPage\n            month={currentMonth}\n            year={currentYear}\n            transactions={allMonthsTransactions[`${currentYear}-${currentMonth}`] || []}\n            onUpdateTransaction={addTransaction}\n            onDeleteTransaction={deleteTransaction}\n          />\n        </>\n      ) : (\n        <CreditCardTracker />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}