{"ast":null,"code":"import _objectSpread from\"/Users/machome/Documents/GitHub/Finance_Tracker-/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/* eslint-disable no-unused-vars */// src/App.js\nimport React,{useState,useEffect,createContext,useContext}from'react';import'./App.css';import Chart from'chart.js/auto';import ChartDataLabels from'chartjs-plugin-datalabels';import{Collapse,Button,Card,Nav}from'react-bootstrap';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,ArcElement}from'chart.js';import MonthPage from'./components/MonthPage';import CreditCardTracker from'./components/CreditCardTracker';// Register ChartJS components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,ArcElement,ChartDataLabels);// Create theme context\nconst ThemeContext=/*#__PURE__*/createContext();// Add this before the App component.\nexport const useTheme=()=>useContext(ThemeContext);function App(){const[transactions,setTransactions]=useState([]);const[incomeDescription,setIncomeDescription]=useState('');const[incomeAmount,setIncomeAmount]=useState('');const[expenseDescription,setExpenseDescription]=useState('');const[expenseAmount,setExpenseAmount]=useState('');const[category,setCategory]=useState('Bills');const[dueDate,setDueDate]=useState(new Date().toISOString().split('T')[0]);const[frequency,setFrequency]=useState('Monthly');const[currentMonth,setCurrentMonth]=useState(new Date().getMonth());const[chart,setChart]=useState(null);const[isIncomeOpen,setIsIncomeOpen]=useState(false);const[isIncomeListOpen,setIsIncomeListOpen]=useState(true);const[isExpenseOpen,setIsExpenseOpen]=useState(false);const[editingId,setEditingId]=useState(null);const[editingValues,setEditingValues]=useState({});const[isDarkMode,setIsDarkMode]=useState(false);const[currentYear,setCurrentYear]=useState(new Date().getFullYear());const[allMonthsTransactions,setAllMonthsTransactions]=useState({});const[activeTab,setActiveTab]=useState('budget');const[creditCards,setCreditCards]=useState([]);const[customCategory,setCustomCategory]=useState('');const[isExpenseListOpen,setIsExpenseListOpen]=useState(false);const[sortConfig,setSortConfig]=useState({key:'dueDate',direction:'asc'});const[filterConfig,setFilterConfig]=useState({category:'all',status:'all',search:''});const[activeForm,setActiveForm]=useState(null);const months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];// Load transactions from localStorage on component mount\nuseEffect(()=>{// Load all data on mount\nconst loadData=()=>{try{const savedTransactions=localStorage.getItem('transactions');const savedMonthsTransactions=localStorage.getItem('allMonthsTransactions');const savedCreditCards=localStorage.getItem('creditCards');if(savedTransactions){setTransactions(JSON.parse(savedTransactions));}if(savedMonthsTransactions){setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));}if(savedCreditCards){setCreditCards(JSON.parse(savedCreditCards));}}catch(error){console.error('Error loading data:',error);}};loadData();},[]);// Only run on mount\n// Clean up chart on component unmount\nuseEffect(()=>{return()=>{if(chart){chart.destroy();setChart(null);}};},[chart]);// Add this helper function at the top of your App component\nconst generateColor=index=>{// Predefined colors for known categories\nconst categoryColors={'Bills':{bg:'rgba(255, 99, 132, 0.8)',border:'rgba(255, 99, 132, 1)'},'Savings':{bg:'rgba(54, 162, 235, 0.8)',border:'rgba(54, 162, 235, 1)'},'Personal':{bg:'rgba(255, 206, 86, 0.8)',border:'rgba(255, 206, 86, 1)'}};// Color palette for additional categories\nconst colorPalette=[{bg:'rgba(75, 192, 192, 0.8)',border:'rgba(75, 192, 192, 1)'},{bg:'rgba(153, 102, 255, 0.8)',border:'rgba(153, 102, 255, 1)'},{bg:'rgba(255, 159, 64, 0.8)',border:'rgba(255, 159, 64, 1)'},{bg:'rgba(231, 233, 237, 0.8)',border:'rgba(231, 233, 237, 1)'},{bg:'rgba(102, 204, 153, 0.8)',border:'rgba(102, 204, 153, 1)'},{bg:'rgba(255, 99, 255, 0.8)',border:'rgba(255, 99, 255, 1)'}];return colorPalette[index%colorPalette.length];};// Update the chart useEffect with debug logs\nuseEffect(()=>{const ctx=document.getElementById('expenseChart');if(!ctx){console.log('Canvas context not found');return;}console.log('Starting chart creation...');// Destroy existing chart if it exists\nif(chart){chart.destroy();setChart(null);}try{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const tDate=new Date(t.date);return tDate.getMonth()===currentMonth&&tDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions].filter(t=>t.type==='expense'&&!t.skipped);console.log('Filtered transactions:',allTransactions);const categoryTotals=allTransactions.reduce((acc,transaction)=>{if(!acc[transaction.category]){acc[transaction.category]=0;}acc[transaction.category]+=parseFloat(transaction.amount);return acc;},{});console.log('Category totals:',categoryTotals);if(Object.keys(categoryTotals).length>0){const categories=Object.keys(categoryTotals);const colors=categories.map((category,index)=>{const categoryColors={'Bills':{bg:'rgba(255, 99, 132, 0.8)',border:'rgba(255, 99, 132, 1)'},'Savings':{bg:'rgba(54, 162, 235, 0.8)',border:'rgba(54, 162, 235, 1)'},'Personal':{bg:'rgba(255, 206, 86, 0.8)',border:'rgba(255, 206, 86, 1)'}};return categoryColors[category]||generateColor(index);});console.log('Creating new chart with data:',{categories,data:Object.values(categoryTotals),colors});const newChart=new Chart(ctx,{type:'pie',data:{labels:categories,datasets:[{data:Object.values(categoryTotals),backgroundColor:colors.map(c=>c.bg),borderColor:colors.map(c=>c.border),borderWidth:1}]},options:{responsive:true,maintainAspectRatio:false,plugins:{datalabels:{formatter:value=>\"$\".concat(value.toFixed(2)),color:'#fff',font:{weight:'bold',size:14}},legend:{position:'right',labels:{color:isDarkMode?'#ffffff':'#666666',font:{size:12},generateLabels:chart=>{const data=chart.data;if(data.labels.length&&data.datasets.length){return data.labels.map((label,i)=>{const value=data.datasets[0].data[i];return{text:\"\".concat(label,\": $\").concat(value.toFixed(2)),fillStyle:data.datasets[0].backgroundColor[i],strokeStyle:data.datasets[0].borderColor[i],lineWidth:1,hidden:false,index:i};});}return[];}}}}}});console.log('Chart created successfully');setChart(newChart);}else{console.log('No data available for chart');}}catch(error){console.error('Error creating chart:',error);}},[currentMonth,currentYear,transactions,allMonthsTransactions,isDarkMode]);// Separate submit handlers for income and expenses\nconst handleIncomeSubmit=e=>{e.preventDefault();if(!incomeDescription||!incomeAmount){return;// Just return if validation fails\n}const newIncome={id:Date.now(),description:incomeDescription,amount:parseFloat(incomeAmount),type:'income',date:new Date().toISOString(),frequency:'Monthly',dueDate:new Date().toISOString().split('T')[0]};// Use addTransaction instead of directly updating transactions\naddTransaction(newIncome,'income');// Clear form\nsetIncomeDescription('');setIncomeAmount('');setIsIncomeOpen(false);// Automatically close the form after submission\n};const handleExpenseSubmit=e=>{e.preventDefault();if(!expenseDescription||!expenseAmount||!dueDate||!category){return;}// Use custom category if \"Other\" is selected\nconst finalCategory=category==='Other'?customCategory:category;const newExpense={id:Date.now(),description:expenseDescription,amount:parseFloat(expenseAmount),type:'expense',category:finalCategory,dueDate,frequency,paid:false,skipped:false,date:new Date().toISOString()};addTransaction(newExpense,'expense');// Clear form\nsetExpenseDescription('');setExpenseAmount('');setCategory('Bills');// Reset to default category\nsetCustomCategory('');// Clear custom category\nsetIsExpenseOpen(false);};const togglePaid=id=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const monthTransaction=monthTransactions.find(t=>t.id===id);try{if(monthTransaction){setAllMonthsTransactions(prev=>{const updated=_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{paid:!t.paid,skipped:false}):t)});localStorage.setItem('allMonthsTransactions',JSON.stringify(updated));return updated;});}else{setTransactions(prev=>{const updated=prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{paid:!t.paid,skipped:false}):t);localStorage.setItem('transactions',JSON.stringify(updated));return updated;});}// If chart exists, update it safely\nif(chart){requestAnimationFrame(()=>{try{chart.update('none');}catch(error){console.error('Error updating chart in togglePaid:',error);}});}}catch(error){console.error('Error in togglePaid:',error);}};const toggleSkipped=id=>{setTransactions(prev=>{const updated=prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{skipped:!t.skipped,paid:false}):t);localStorage.setItem('transactions',JSON.stringify(updated));return updated;});};const deleteTransaction=(transactionId,fromMonth)=>{if(window.confirm('Delete this transaction?')){const transaction=transactions.find(t=>t.id===transactionId);if(!transaction){const monthKey=\"\".concat(currentYear,\"-\").concat(fromMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const monthTransaction=monthTransactions.find(t=>t.id===transactionId);if(monthTransaction!==null&&monthTransaction!==void 0&&monthTransaction.originalTransactionId){const deleteAll=window.confirm('Delete all future occurrences of this recurring transaction?');if(deleteAll){const updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.keys(updatedMonthsTransactions).forEach(monthKey=>{const[year,month]=monthKey.split('-').map(Number);if(year>currentYear||year===currentYear&&month>=fromMonth){updatedMonthsTransactions[monthKey]=updatedMonthsTransactions[monthKey].filter(t=>t.originalTransactionId!==monthTransaction.originalTransactionId);}});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{const updatedMonthsTransactions=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:allMonthsTransactions[monthKey].filter(t=>t.id!==transactionId)});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}}else{const updatedMonthsTransactions=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:allMonthsTransactions[monthKey].filter(t=>t.id!==transactionId)});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}}else{const updatedTransactions=transactions.filter(t=>t.id!==transactionId);setTransactions(updatedTransactions);localStorage.setItem('transactions',JSON.stringify(updatedTransactions));}}};// Update the filterTransactions function to properly combine both sources\nconst filterTransactions=type=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];// Get transactions from both sources\nconst regularTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return t.type===type&&transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const recurringTransactions=monthTransactions.filter(t=>t.type===type);// Combine and remove duplicates\nconst combined=[...regularTransactions,...recurringTransactions];return combined.filter((transaction,index,self)=>index===self.findIndex(t=>t.id===transaction.id));};// Update calculateTotals to include both regular and recurring transactions\nconst calculateTotals=()=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions];return{income:allTransactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+t.amount,0),expenses:allTransactions.filter(t=>t.type==='expense'&&!t.skipped).reduce((sum,t)=>sum+t.amount,0),paid:allTransactions.filter(t=>t.paid).reduce((sum,t)=>sum+t.amount,0)};};// Update the saveEdit function\nconst saveEdit=id=>{var _allMonthsTransaction;const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const isMonthTransaction=(_allMonthsTransaction=allMonthsTransactions[monthKey])===null||_allMonthsTransaction===void 0?void 0:_allMonthsTransaction.some(t=>t.id===id);if(isMonthTransaction){// Handle editing recurring transactions\nif(editingValues.originalTransactionId){const editFuture=window.confirm('Do you want to apply these changes to all future occurrences?');if(editFuture){// Update all future occurrences\nconst updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.keys(updatedMonthsTransactions).forEach(key=>{const[year,month]=key.split('-').map(Number);if(year>currentYear||year===currentYear&&month>=currentMonth){updatedMonthsTransactions[key]=updatedMonthsTransactions[key].map(t=>t.originalTransactionId===editingValues.originalTransactionId?_objectSpread(_objectSpread({},t),editingValues):t);}});setAllMonthsTransactions(updatedMonthsTransactions);}else{// Update only this occurrence\nsetAllMonthsTransactions(prev=>_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t)}));}}else{// Update one-time transaction\nsetAllMonthsTransactions(prev=>_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t)}));}}else{// Handle regular transactions\nsetTransactions(transactions.map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t));}setEditingId(null);setEditingValues({});};// Update the startEditing function\nconst startEditing=transaction=>{setEditingId(transaction.id);setEditingValues(_objectSpread(_objectSpread({},transaction),{},{amount:transaction.amount.toString()}));};// Add this function to cancel editing\nconst cancelEdit=()=>{setEditingId(null);setEditingValues({});};// Add this helper function at the top of your App component\nconst getDayWithSuffix=date=>{const day=new Date(date).getDate();if(day>3&&day<21)return day+'th';switch(day%10){case 1:return day+\"st\";case 2:return day+\"nd\";case 3:return day+\"rd\";default:return day+\"th\";}};// Add this function in your App component\nconst getMonthlyTrends=()=>{const last6Months=Array.from({length:6},(_,i)=>{const d=new Date();d.setMonth(d.getMonth()-i);return d;}).reverse();return{labels:last6Months.map(date=>months[date.getMonth()]),expenses:last6Months.map(date=>{return transactions.filter(t=>{const tDate=new Date(t.date);return t.type==='expense'&&tDate.getMonth()===date.getMonth()&&!t.skipped;}).reduce((sum,t)=>sum+t.amount,0);}),income:last6Months.map(date=>{return transactions.filter(t=>{const tDate=new Date(t.date);return t.type==='income'&&tDate.getMonth()===date.getMonth();}).reduce((sum,t)=>sum+t.amount,0);})};};// Update the generateRecurringDates function\nconst generateRecurringDates=(startDate,frequency,endDate)=>{const dates=[];let currentDate=new Date(startDate);const end=new Date(endDate);// Set both dates to start of day for accurate comparison\ncurrentDate.setHours(0,0,0,0);end.setHours(0,0,0,0);console.log('Generating recurring dates:',{startDate:currentDate,endDate:end,frequency});while(currentDate<=end){dates.push(new Date(currentDate));// Store the original day of month\nconst originalDay=currentDate.getDate();// Calculate next date based on frequency\nswitch(frequency){case'Weekly':currentDate.setDate(currentDate.getDate()+7);break;case'Bi-Weekly':currentDate.setDate(currentDate.getDate()+14);break;case'Monthly':currentDate.setMonth(currentDate.getMonth()+1);// Check if we've rolled over to the next month\nif(currentDate.getDate()!==originalDay){// We've hit the end of the month, go back to last day of previous month\ncurrentDate.setDate(0);}break;default:return dates;}console.log(\"Added \".concat(frequency,\" date:\"),new Date(currentDate));}console.log('Generated dates:',dates);return dates;};// Add these wrapper functions\nconst updateTransactions=newTransactions=>{setTransactions(newTransactions);localStorage.setItem('transactions',JSON.stringify(newTransactions));};const updateMonthlyTransactions=newMonthlyTransactions=>{setAllMonthsTransactions(newMonthlyTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(newMonthlyTransactions));};// Update the addTransaction function\nconst addTransaction=(transaction,type)=>{const endOfYear=new Date(currentYear,11,31);const isRecurring=transaction.frequency!=='One-time';const startDate=new Date(transaction.dueDate);// Ensure paid property is set for expenses\nconst transactionWithPaid=_objectSpread(_objectSpread({},transaction),{},{paid:type==='expense'?false:undefined});if(isRecurring){const recurringDates=generateRecurringDates(startDate,transaction.frequency,endOfYear);const transactionsByMonth={};recurringDates.forEach(date=>{const monthKey=\"\".concat(date.getFullYear(),\"-\").concat(date.getMonth());if(!transactionsByMonth[monthKey]){transactionsByMonth[monthKey]=[];}const recurringTransaction=_objectSpread(_objectSpread({},transactionWithPaid),{},{id:Date.now()+Math.random(),dueDate:date.toISOString().split('T')[0],originalTransactionId:transaction.id,paid:type==='expense'?false:undefined});transactionsByMonth[monthKey].push(recurringTransaction);});// Update allMonthsTransactions\nconst updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.entries(transactionsByMonth).forEach(_ref=>{let[monthKey,transactions]=_ref;if(!updatedMonthsTransactions[monthKey]){updatedMonthsTransactions[monthKey]=[];}updatedMonthsTransactions[monthKey]=[...updatedMonthsTransactions[monthKey],...transactions];});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{if(type==='income'){updateTransactions([...transactions,transactionWithPaid]);}else{// Handle one-time expenses\nconst transactionDate=new Date(transaction.dueDate);const monthKey=\"\".concat(transactionDate.getFullYear(),\"-\").concat(transactionDate.getMonth());const updatedMonthly=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:[...(allMonthsTransactions[monthKey]||[]),_objectSpread(_objectSpread({},transactionWithPaid),{},{paid:false})]});updateMonthlyTransactions(updatedMonthly);}}};// In App.js, update the summary calculation\nconst calculateSummary=transactions=>{const income=transactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+parseFloat(t.amount),0);const paidIncome=transactions.filter(t=>t.type==='income'&&t.paid).reduce((sum,t)=>sum+parseFloat(t.amount),0);const expenses=transactions.filter(t=>t.type==='expense').reduce((sum,t)=>sum+parseFloat(t.amount),0);const balance=paidIncome-expenses;return{income,paidIncome,expenses,balance};};// Add this function near the top of App component\nconst updateCreditCards=newCards=>{setCreditCards(newCards);localStorage.setItem('creditCards',JSON.stringify(newCards));};// Add function to calculate payment summary\nconst calculatePaymentSummary=()=>{const expenses=filterTransactions('expense');const total=expenses.reduce((sum,t)=>sum+t.amount,0);const paid=expenses.reduce((sum,t)=>t.paid?sum+t.amount:sum,0);const remaining=total-paid;return{total:total.toFixed(2),paid:paid.toFixed(2),remaining:remaining.toFixed(2),progress:total>0?(paid/total*100).toFixed(1):0};};// Add this sorting function\nconst sortTransactions=transactions=>{return[...transactions].sort((a,b)=>{if(sortConfig.key==='amount'){return sortConfig.direction==='asc'?a.amount-b.amount:b.amount-a.amount;}if(sortConfig.key==='dueDate'){return sortConfig.direction==='asc'?new Date(a.dueDate)-new Date(b.dueDate):new Date(b.dueDate)-new Date(a.dueDate);}if(sortConfig.key==='description'){return sortConfig.direction==='asc'?a.description.localeCompare(b.description):b.description.localeCompare(a.description);}return 0;});};// Rename this function to applyFilters\nconst applyFilters=transactions=>{return transactions.filter(transaction=>{const matchesCategory=filterConfig.category==='all'||transaction.category===filterConfig.category;const matchesStatus=filterConfig.status==='all'||filterConfig.status==='paid'&&transaction.paid||filterConfig.status==='unpaid'&&!transaction.paid;const matchesSearch=transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());return matchesCategory&&matchesStatus&&matchesSearch;});};// Add this function to handle form toggling\nconst toggleForm=formName=>{if(activeForm===formName){setActiveForm(null);setIsIncomeOpen(false);setIsExpenseOpen(false);}else{setActiveForm(formName);if(formName==='income'){setIsIncomeOpen(true);setIsExpenseOpen(false);}else{setIsExpenseOpen(true);setIsIncomeOpen(false);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(isDarkMode?'dark-mode':''),children:[/*#__PURE__*/_jsxs(\"header\",{className:\"finance-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"theme-toggle\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsDarkMode(!isDarkMode),className:\"theme-toggle-btn\",title:isDarkMode?\"Switch to Light Mode\":\"Switch to Dark Mode\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-\".concat(isDarkMode?'sun':'moon')})})}),/*#__PURE__*/_jsx(\"h1\",{className:\"gradient-text\",children:\"Finance Tracker\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-navigation\",children:[/*#__PURE__*/_jsxs(Nav,{variant:\"tabs\",className:\"main-nav\",children:[/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{active:activeTab==='budget',onClick:()=>setActiveTab('budget'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wallet me-2\"}),\"Budget Tracker\"]})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{active:activeTab==='credit',onClick:()=>setActiveTab('credit'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-credit-card me-2\"}),\"Credit Cards\"]})})]}),activeTab==='budget'&&/*#__PURE__*/_jsxs(\"div\",{className:\"month-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn prev\",onClick:()=>{if(currentMonth===0){setCurrentYear(prev=>prev-1);setCurrentMonth(11);}else{setCurrentMonth(prev=>prev-1);}},\"aria-label\":\"Previous month\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-left\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"month-select\",children:[/*#__PURE__*/_jsx(\"select\",{value:currentMonth,onChange:e=>setCurrentMonth(Number(e.target.value)),className:\"month-dropdown\",\"aria-label\":\"Select month\",children:months.map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index,children:month},index))}),/*#__PURE__*/_jsx(\"select\",{value:currentYear,onChange:e=>setCurrentYear(Number(e.target.value)),className:\"year-dropdown\",\"aria-label\":\"Select year\",children:Array.from({length:5},(_,i)=>/*#__PURE__*/_jsx(\"option\",{value:currentYear-2+i,children:currentYear-2+i},i))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn next\",onClick:()=>{if(currentMonth===11){setCurrentYear(prev=>prev+1);setCurrentMonth(0);}else{setCurrentMonth(prev=>prev+1);}},\"aria-label\":\"Next month\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-right\"})})]})]})]}),activeTab==='budget'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 mb-4\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-danger text-white\",children:/*#__PURE__*/_jsx(Button,{onClick:()=>toggleForm('expense'),\"aria-controls\":\"expenseForm\",\"aria-expanded\":isExpenseOpen,variant:\"link\",className:\"text-white w-100 text-start p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Expenses\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-caret-\".concat(isExpenseOpen?'down':'right',\" ms-2 fa-lg\")})]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-form-backdrop \".concat(isExpenseOpen?'show':''),onClick:()=>toggleForm('expense')}),/*#__PURE__*/_jsx(Collapse,{in:isExpenseOpen,children:/*#__PURE__*/_jsx(\"div\",{id:\"expenseForm\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleExpenseSubmit,className:\"transaction-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:expenseDescription,onChange:e=>setExpenseDescription(e.target.value),placeholder:\"Expense Item\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:expenseAmount,onChange:e=>setExpenseAmount(e.target.value),placeholder:\"Amount\",step:\"0.01\",className:\"form-control\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:category,onChange:e=>setCategory(e.target.value),className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Category\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other...\"})]}),category==='Other'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:customCategory,onChange:e=>setCustomCategory(e.target.value),placeholder:\"Enter custom category\",className:\"form-control mt-2\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dueDate,onChange:e=>setDueDate(e.target.value),className:\"form-control\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:frequency,onChange:e=>setFrequency(e.target.value),className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Frequency\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bi-Weekly\",children:\"Bi-Weekly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Weekly\",children:\"Weekly\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-danger\",children:\"Add Expense\"})]})})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 mb-4\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-success text-white\",children:/*#__PURE__*/_jsx(Button,{onClick:()=>toggleForm('income'),\"aria-controls\":\"incomeSection\",\"aria-expanded\":isIncomeOpen,variant:\"link\",className:\"text-white w-100 text-start p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Income\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-caret-\".concat(isIncomeOpen?'down':'right',\" ms-2 fa-lg\")})]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-form-backdrop \".concat(isIncomeOpen?'show':''),onClick:()=>toggleForm('income')}),/*#__PURE__*/_jsx(Collapse,{in:isIncomeOpen,children:/*#__PURE__*/_jsx(\"div\",{id:\"incomeSection\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleIncomeSubmit,className:\"transaction-form mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:incomeDescription,onChange:e=>setIncomeDescription(e.target.value),placeholder:\"Income Source\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:incomeAmount,onChange:e=>setIncomeAmount(e.target.value),placeholder:\"Amount\",step:\"0.01\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-success\",children:\"Add Income\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortTransactions(applyFilters(filterTransactions('income'))).map(transaction=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingValues.description||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{description:e.target.value})),className:\"form-control form-control-sm\"}):transaction.description}),/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editingValues.amount||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{amount:parseFloat(e.target.value)})),className:\"form-control form-control-sm\",step:\"0.01\"}):/*#__PURE__*/_jsxs(\"span\",{className:\"text-success\",children:[\"$\",transaction.amount.toFixed(2)]})}),/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>saveEdit(transaction.id),className:\"btn-icon\",title:\"Save changes\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Save\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:cancelEdit,className:\"btn-icon delete\",title:\"Cancel editing\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Cancel\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"expense-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startEditing(transaction),className:\"btn-icon\",title:\"Edit this entry\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>deleteTransaction(transaction.id,currentMonth),className:\"btn-icon delete\",title:\"Delete this entry\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Delete\"})]})]})})]},transaction.id))})]})})]})})})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Expense Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(\"canvas\",{id:\"expenseChart\"})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header bg-danger text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Budget & Expenses\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-link text-white\",onClick:()=>setIsExpenseListOpen(!isExpenseListOpen),children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-\".concat(isExpenseListOpen?'up':'down')})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"budget-summary mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wallet me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Monthly Income:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-success\",children:[\"$\",calculateTotals().income.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-shopping-cart me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Total Expenses:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-danger\",children:[\"$\",calculateTotals().expenses.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-piggy-bank me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Remaining:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\",children:[\"$\",(calculateTotals().income-calculateTotals().expenses).toFixed(2)]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-summary mt-3\",children:(()=>{const summary=calculatePaymentSummary();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress mb-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar bg-success\",role:\"progressbar\",style:{width:\"\".concat(summary.progress,\"%\")},\"aria-valuenow\":summary.progress,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",children:[summary.progress,\"%\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Paid:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-success\",children:[\"$\",summary.paid]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Remaining:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-danger\",children:[\"$\",summary.remaining]})]})]})]});})()})]}),/*#__PURE__*/_jsx(Collapse,{in:isExpenseListOpen,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"filters-section mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Search expenses...\",value:filterConfig.search,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{search:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:filterConfig.category,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{category:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Categories\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:filterConfig.status,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{status:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"paid\",children:\"Paid\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unpaid\",children:\"Unpaid\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:\"\".concat(sortConfig.key,\"-\").concat(sortConfig.direction),onChange:e=>{const[key,direction]=e.target.value.split('-');setSortConfig({key,direction});},children:[/*#__PURE__*/_jsx(\"option\",{value:\"dueDate-asc\",children:\"Date (Earliest First)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dueDate-desc\",children:\"Date (Latest First)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amount-asc\",children:\"Amount (Low to High)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amount-desc\",children:\"Amount (High to Low)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"description-asc\",children:\"Name (A to Z)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"description-desc\",children:\"Name (Z to A)\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsx(\"div\",{className:\"expense-list\",children:sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction=>/*#__PURE__*/_jsx(\"div\",{className:\"expense-item \".concat(transaction.paid?'paid':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"expense-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:transaction.paid||false,onChange:()=>togglePaid(transaction.id),id:\"paid-\".concat(transaction.id)}),/*#__PURE__*/_jsx(\"label\",{className:\"checkmark\",htmlFor:\"paid-\".concat(transaction.id)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"expense-content\",children:editingId===transaction.id?/*#__PURE__*/// Edit mode\n_jsxs(\"div\",{className:\"expense-edit-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingValues.description||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{description:e.target.value})),className:\"form-control form-control-sm mb-2\",placeholder:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editingValues.amount||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{amount:parseFloat(e.target.value)})),className:\"form-control form-control-sm mb-2\",step:\"0.01\",placeholder:\"Amount\"}),/*#__PURE__*/_jsxs(\"select\",{value:editingValues.category||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{category:e.target.value})),className:\"form-select form-select-sm mb-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:editingValues.dueDate||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{dueDate:e.target.value})),className:\"form-control form-control-sm mb-2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>saveEdit(transaction.id),className:\"btn btn-success btn-sm me-2\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),\" Save\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:cancelEdit,className:\"btn btn-secondary btn-sm\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),\" Cancel\"]})]})]}):/*#__PURE__*/// Display mode\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-primary\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"expense-title\",children:transaction.description}),/*#__PURE__*/_jsxs(\"span\",{className:\"expense-amount\",children:[\"$\",transaction.amount.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"expense-secondary\",children:[transaction.type==='expense'&&/*#__PURE__*/_jsx(\"span\",{className:\"expense-tag\",children:transaction.category}),/*#__PURE__*/_jsx(\"span\",{className:\"expense-date\",children:getDayWithSuffix(transaction.dueDate)}),/*#__PURE__*/_jsx(\"span\",{className:\"expense-frequency\",children:transaction.frequency})]})]})}),!editingId&&/*#__PURE__*/_jsxs(\"div\",{className:\"expense-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startEditing(transaction),className:\"btn-icon\",title:\"Edit\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>deleteTransaction(transaction.id,currentMonth),className:\"btn-icon delete\",title:\"Delete\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Delete\"})]})]})]})},transaction.id))})})]})})]})]})})}),/*#__PURE__*/_jsx(MonthPage,{month:currentMonth,year:currentYear,transactions:allMonthsTransactions[\"\".concat(currentYear,\"-\").concat(currentMonth)]||[],onUpdateTransaction:addTransaction,onDeleteTransaction:deleteTransaction})]}):/*#__PURE__*/_jsx(CreditCardTracker,{creditCards:creditCards,setCreditCards:updateCreditCards})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Chart","ChartDataLabels","Collapse","Button","Card","Nav","Line","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","MonthPage","CreditCardTracker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","ThemeContext","useTheme","App","transactions","setTransactions","incomeDescription","setIncomeDescription","incomeAmount","setIncomeAmount","expenseDescription","setExpenseDescription","expenseAmount","setExpenseAmount","category","setCategory","dueDate","setDueDate","Date","toISOString","split","frequency","setFrequency","currentMonth","setCurrentMonth","getMonth","chart","setChart","isIncomeOpen","setIsIncomeOpen","isIncomeListOpen","setIsIncomeListOpen","isExpenseOpen","setIsExpenseOpen","editingId","setEditingId","editingValues","setEditingValues","isDarkMode","setIsDarkMode","currentYear","setCurrentYear","getFullYear","allMonthsTransactions","setAllMonthsTransactions","activeTab","setActiveTab","creditCards","setCreditCards","customCategory","setCustomCategory","isExpenseListOpen","setIsExpenseListOpen","sortConfig","setSortConfig","key","direction","filterConfig","setFilterConfig","status","search","activeForm","setActiveForm","months","loadData","savedTransactions","localStorage","getItem","savedMonthsTransactions","savedCreditCards","JSON","parse","error","console","destroy","generateColor","index","categoryColors","bg","border","colorPalette","length","ctx","document","getElementById","log","monthKey","concat","monthTransactions","regularTransactions","filter","t","tDate","date","allTransactions","type","skipped","categoryTotals","reduce","acc","transaction","parseFloat","amount","Object","keys","categories","colors","map","data","values","newChart","labels","datasets","backgroundColor","c","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","datalabels","formatter","value","toFixed","color","font","weight","size","legend","position","generateLabels","label","i","text","fillStyle","strokeStyle","lineWidth","hidden","handleIncomeSubmit","e","preventDefault","newIncome","id","now","description","addTransaction","handleExpenseSubmit","finalCategory","newExpense","paid","togglePaid","monthTransaction","find","prev","updated","_objectSpread","setItem","stringify","requestAnimationFrame","update","toggleSkipped","deleteTransaction","transactionId","fromMonth","window","confirm","originalTransactionId","deleteAll","updatedMonthsTransactions","forEach","year","month","Number","updatedTransactions","filterTransactions","transactionDate","recurringTransactions","combined","self","findIndex","calculateTotals","income","sum","expenses","saveEdit","_allMonthsTransaction","isMonthTransaction","some","editFuture","startEditing","toString","cancelEdit","getDayWithSuffix","day","getDate","getMonthlyTrends","last6Months","Array","from","_","d","setMonth","reverse","generateRecurringDates","startDate","endDate","dates","currentDate","end","setHours","push","originalDay","setDate","updateTransactions","newTransactions","updateMonthlyTransactions","newMonthlyTransactions","endOfYear","isRecurring","transactionWithPaid","undefined","recurringDates","transactionsByMonth","recurringTransaction","Math","random","entries","_ref","updatedMonthly","calculateSummary","paidIncome","balance","updateCreditCards","newCards","calculatePaymentSummary","total","remaining","progress","sortTransactions","sort","a","b","localeCompare","applyFilters","matchesCategory","matchesStatus","matchesSearch","toLowerCase","includes","toggleForm","formName","className","children","onClick","title","variant","Item","Link","active","onChange","target","Header","in","Body","onSubmit","placeholder","required","step","summary","role","style","width","checked","htmlFor","onUpdateTransaction","onDeleteTransaction"],"sources":["/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n} from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  ChartDataLabels\n);\n\n// Create theme context\nconst ThemeContext = createContext();\n\n// Add this before the App component.\nexport const useTheme = () => useContext(ThemeContext);\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n  const [creditCards, setCreditCards] = useState([]);\n  const [customCategory, setCustomCategory] = useState('');\n  const [isExpenseListOpen, setIsExpenseListOpen] = useState(false);\n  const [sortConfig, setSortConfig] = useState({ key: 'dueDate', direction: 'asc' });\n  const [filterConfig, setFilterConfig] = useState({\n    category: 'all',\n    status: 'all',\n    search: ''\n  });\n  const [activeForm, setActiveForm] = useState(null);\n\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    // Load all data on mount\n    const loadData = () => {\n      try {\n        const savedTransactions = localStorage.getItem('transactions');\n        const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n        const savedCreditCards = localStorage.getItem('creditCards');\n\n        if (savedTransactions) {\n          setTransactions(JSON.parse(savedTransactions));\n        }\n        if (savedMonthsTransactions) {\n          setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n        }\n        if (savedCreditCards) {\n          setCreditCards(JSON.parse(savedCreditCards));\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n\n    loadData();\n  }, []); // Only run on mount\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n        setChart(null);\n      }\n    };\n  }, [chart]);\n\n  // Add this helper function at the top of your App component\n  const generateColor = (index) => {\n    // Predefined colors for known categories\n    const categoryColors = {\n      'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n      'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n      'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n    };\n\n    // Color palette for additional categories\n    const colorPalette = [\n      { bg: 'rgba(75, 192, 192, 0.8)', border: 'rgba(75, 192, 192, 1)' },\n      { bg: 'rgba(153, 102, 255, 0.8)', border: 'rgba(153, 102, 255, 1)' },\n      { bg: 'rgba(255, 159, 64, 0.8)', border: 'rgba(255, 159, 64, 1)' },\n      { bg: 'rgba(231, 233, 237, 0.8)', border: 'rgba(231, 233, 237, 1)' },\n      { bg: 'rgba(102, 204, 153, 0.8)', border: 'rgba(102, 204, 153, 1)' },\n      { bg: 'rgba(255, 99, 255, 0.8)', border: 'rgba(255, 99, 255, 1)' }\n    ];\n\n    return colorPalette[index % colorPalette.length];\n  };\n\n  // Update the chart useEffect with debug logs\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) {\n      console.log('Canvas context not found');\n      return;\n    }\n\n    console.log('Starting chart creation...');\n\n    // Destroy existing chart if it exists\n    if (chart) {\n      chart.destroy();\n      setChart(null);\n    }\n\n    try {\n      const monthKey = `${currentYear}-${currentMonth}`;\n      const monthTransactions = allMonthsTransactions[monthKey] || [];\n      const regularTransactions = transactions.filter(t => {\n        const tDate = new Date(t.date);\n        return tDate.getMonth() === currentMonth && \n               tDate.getFullYear() === currentYear;\n      });\n\n      const allTransactions = [...regularTransactions, ...monthTransactions]\n        .filter(t => t.type === 'expense' && !t.skipped);\n\n      console.log('Filtered transactions:', allTransactions);\n\n      const categoryTotals = allTransactions.reduce((acc, transaction) => {\n        if (!acc[transaction.category]) {\n          acc[transaction.category] = 0;\n        }\n        acc[transaction.category] += parseFloat(transaction.amount);\n        return acc;\n      }, {});\n\n      console.log('Category totals:', categoryTotals);\n\n      if (Object.keys(categoryTotals).length > 0) {\n        const categories = Object.keys(categoryTotals);\n        const colors = categories.map((category, index) => {\n          const categoryColors = {\n            'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n            'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n            'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n          };\n\n          return categoryColors[category] || generateColor(index);\n        });\n\n        console.log('Creating new chart with data:', {\n          categories,\n          data: Object.values(categoryTotals),\n          colors\n        });\n\n        const newChart = new Chart(ctx, {\n          type: 'pie',\n          data: {\n            labels: categories,\n            datasets: [{\n              data: Object.values(categoryTotals),\n              backgroundColor: colors.map(c => c.bg),\n              borderColor: colors.map(c => c.border),\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              datalabels: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n                color: '#fff',\n                font: {\n                  weight: 'bold',\n                  size: 14\n                }\n              },\n              legend: {\n                position: 'right',\n                labels: {\n                  color: isDarkMode ? '#ffffff' : '#666666',\n                  font: {\n                    size: 12\n                  },\n                  generateLabels: (chart) => {\n                    const data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                      return data.labels.map((label, i) => {\n                        const value = data.datasets[0].data[i];\n                        return {\n                          text: `${label}: $${value.toFixed(2)}`,\n                          fillStyle: data.datasets[0].backgroundColor[i],\n                          strokeStyle: data.datasets[0].borderColor[i],\n                          lineWidth: 1,\n                          hidden: false,\n                          index: i\n                        };\n                      });\n                    }\n                    return [];\n                  }\n                }\n              }\n            }\n          }\n        });\n\n        console.log('Chart created successfully');\n        setChart(newChart);\n      } else {\n        console.log('No data available for chart');\n      }\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = (e) => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      return; // Just return if validation fails\n    }\n\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly',\n      dueDate: new Date().toISOString().split('T')[0]\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n    \n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    setIsIncomeOpen(false); // Automatically close the form after submission\n  };\n\n  const handleExpenseSubmit = (e) => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      return;\n    }\n\n    // Use custom category if \"Other\" is selected\n    const finalCategory = category === 'Other' ? customCategory : category;\n\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category: finalCategory,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    addTransaction(newExpense, 'expense');\n    \n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    setCategory('Bills'); // Reset to default category\n    setCustomCategory(''); // Clear custom category\n    setIsExpenseOpen(false);\n  };\n\n  const togglePaid = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n\n    try {\n      if (monthTransaction) {\n        setAllMonthsTransactions(prev => {\n          const updated = {\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n            )\n          };\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updated));\n          return updated;\n        });\n      } else {\n        setTransactions(prev => {\n          const updated = prev.map(t =>\n            t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n          );\n          localStorage.setItem('transactions', JSON.stringify(updated));\n          return updated;\n        });\n      }\n\n      // If chart exists, update it safely\n      if (chart) {\n        requestAnimationFrame(() => {\n          try {\n            chart.update('none');\n          } catch (error) {\n            console.error('Error updating chart in togglePaid:', error);\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in togglePaid:', error);\n    }\n  };\n\n  const toggleSkipped = (id) => {\n    setTransactions(prev => {\n      const updated = prev.map(t => \n        t.id === id ? { ...t, skipped: !t.skipped, paid: false } : t\n      );\n      localStorage.setItem('transactions', JSON.stringify(updated));\n      return updated;\n    });\n  };\n\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      \n      if (!transaction) {\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        \n        if (monthTransaction?.originalTransactionId) {\n          const deleteAll = window.confirm(\n            'Delete all future occurrences of this recurring transaction?'\n          );\n          \n          if (deleteAll) {\n            const updatedMonthsTransactions = { ...allMonthsTransactions };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || (year === currentYear && month >= fromMonth)) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey]\n                  .filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          } else {\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions,\n              [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n            };\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          }\n        } else {\n          const updatedMonthsTransactions = {\n            ...allMonthsTransactions,\n            [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n          };\n          setAllMonthsTransactions(updatedMonthsTransactions);\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n        }\n      } else {\n        const updatedTransactions = transactions.filter(t => t.id !== transactionId);\n        setTransactions(updatedTransactions);\n        localStorage.setItem('transactions', JSON.stringify(updatedTransactions));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = (type) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && \n             transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n    \n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) =>\n      index === self.findIndex(t => t.id === transaction.id)\n    );\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n\n    return {\n      income: allTransactions\n        .filter(t => t.type === 'income')\n        .reduce((sum, t) => sum + t.amount, 0),\n      expenses: allTransactions\n        .filter(t => t.type === 'expense' && !t.skipped)\n        .reduce((sum, t) => sum + t.amount, 0),\n      paid: allTransactions\n        .filter(t => t.paid)\n        .reduce((sum, t) => sum + t.amount, 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = allMonthsTransactions[monthKey]?.some(t => t.id === id);\n    \n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm(\n          'Do you want to apply these changes to all future occurrences?'\n        );\n        \n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = { ...allMonthsTransactions };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || (year === currentYear && month >= currentMonth)) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t =>\n                t.originalTransactionId === editingValues.originalTransactionId\n                  ? { ...t, ...editingValues }\n                  : t\n              );\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, ...editingValues } : t\n            )\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t =>\n            t.id === id ? { ...t, ...editingValues } : t\n          )\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => \n        t.id === id ? { ...t, ...editingValues } : t\n      ));\n    }\n    \n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = (transaction) => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = (date) => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1: return day + \"st\";\n      case 2: return day + \"nd\";\n      case 3: return day + \"rd\";\n      default: return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({ length: 6 }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'expense' && \n                   tDate.getMonth() === date.getMonth() &&\n                   !t.skipped;\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'income' && \n                   tDate.getMonth() === date.getMonth();\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n      \n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n      \n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Add these wrapper functions\n  const updateTransactions = (newTransactions) => {\n    setTransactions(newTransactions);\n    localStorage.setItem('transactions', JSON.stringify(newTransactions));\n  };\n\n  const updateMonthlyTransactions = (newMonthlyTransactions) => {\n    setAllMonthsTransactions(newMonthlyTransactions);\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(newMonthlyTransactions));\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n\n    // Ensure paid property is set for expenses\n    const transactionWithPaid = {\n      ...transaction,\n      paid: type === 'expense' ? false : undefined\n    };\n\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(\n        startDate,\n        transaction.frequency,\n        endOfYear\n      );\n\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n\n        const recurringTransaction = {\n          ...transactionWithPaid,\n          id: Date.now() + Math.random(),\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: type === 'expense' ? false : undefined\n        };\n\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n\n      // Update allMonthsTransactions\n      const updatedMonthsTransactions = { ...allMonthsTransactions };\n      Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n        if (!updatedMonthsTransactions[monthKey]) {\n          updatedMonthsTransactions[monthKey] = [];\n        }\n        updatedMonthsTransactions[monthKey] = [\n          ...updatedMonthsTransactions[monthKey],\n          ...transactions\n        ];\n      });\n\n      setAllMonthsTransactions(updatedMonthsTransactions);\n      localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n\n    } else {\n      if (type === 'income') {\n        updateTransactions([...transactions, transactionWithPaid]);\n      } else {\n        // Handle one-time expenses\n        const transactionDate = new Date(transaction.dueDate);\n        const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n        \n        const updatedMonthly = {\n          ...allMonthsTransactions,\n          [monthKey]: [\n            ...(allMonthsTransactions[monthKey] || []),\n            { ...transactionWithPaid, paid: false }\n          ]\n        };\n\n        updateMonthlyTransactions(updatedMonthly);\n      }\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = (transactions) => {\n    const income = transactions\n      .filter(t => t.type === 'income')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const paidIncome = transactions\n      .filter(t => t.type === 'income' && t.paid)\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const expenses = transactions\n      .filter(t => t.type === 'expense')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const balance = paidIncome - expenses;\n\n    return { income, paidIncome, expenses, balance };\n  };\n\n  // Add this function near the top of App component\n  const updateCreditCards = (newCards) => {\n    setCreditCards(newCards);\n    localStorage.setItem('creditCards', JSON.stringify(newCards));\n  };\n\n  // Add function to calculate payment summary\n  const calculatePaymentSummary = () => {\n    const expenses = filterTransactions('expense');\n    const total = expenses.reduce((sum, t) => sum + t.amount, 0);\n    const paid = expenses.reduce((sum, t) => t.paid ? sum + t.amount : sum, 0);\n    const remaining = total - paid;\n    \n    return {\n      total: total.toFixed(2),\n      paid: paid.toFixed(2),\n      remaining: remaining.toFixed(2),\n      progress: total > 0 ? (paid / total * 100).toFixed(1) : 0\n    };\n  };\n\n  // Add this sorting function\n  const sortTransactions = (transactions) => {\n    return [...transactions].sort((a, b) => {\n      if (sortConfig.key === 'amount') {\n        return sortConfig.direction === 'asc' \n          ? a.amount - b.amount \n          : b.amount - a.amount;\n      }\n      if (sortConfig.key === 'dueDate') {\n        return sortConfig.direction === 'asc'\n          ? new Date(a.dueDate) - new Date(b.dueDate)\n          : new Date(b.dueDate) - new Date(a.dueDate);\n      }\n      if (sortConfig.key === 'description') {\n        return sortConfig.direction === 'asc'\n          ? a.description.localeCompare(b.description)\n          : b.description.localeCompare(a.description);\n      }\n      return 0;\n    });\n  };\n\n  // Rename this function to applyFilters\n  const applyFilters = (transactions) => {\n    return transactions.filter(transaction => {\n      const matchesCategory = filterConfig.category === 'all' || transaction.category === filterConfig.category;\n      const matchesStatus = filterConfig.status === 'all' \n        || (filterConfig.status === 'paid' && transaction.paid)\n        || (filterConfig.status === 'unpaid' && !transaction.paid);\n      const matchesSearch = transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());\n      \n      return matchesCategory && matchesStatus && matchesSearch;\n    });\n  };\n\n  // Add this function to handle form toggling\n  const toggleForm = (formName) => {\n    if (activeForm === formName) {\n      setActiveForm(null);\n      setIsIncomeOpen(false);\n      setIsExpenseOpen(false);\n    } else {\n      setActiveForm(formName);\n      if (formName === 'income') {\n        setIsIncomeOpen(true);\n        setIsExpenseOpen(false);\n      } else {\n        setIsExpenseOpen(true);\n        setIsIncomeOpen(false);\n      }\n    }\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      <header className=\"finance-header\">\n        <div className=\"theme-toggle\">\n          <button \n            onClick={() => setIsDarkMode(!isDarkMode)}\n            className=\"theme-toggle-btn\"\n            title={isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n          >\n            <i className={`fas fa-${isDarkMode ? 'sun' : 'moon'}`}></i>\n          </button>\n        </div>\n        <h1 className=\"gradient-text\">Finance Tracker</h1>\n        \n        {/* Update the navigation section */}\n        <div className=\"app-navigation\">\n          {/* Main Tabs */}\n          <Nav variant=\"tabs\" className=\"main-nav\">\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'budget'}\n                onClick={() => setActiveTab('budget')}\n              >\n                <i className=\"fas fa-wallet me-2\"></i>\n                Budget Tracker\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'credit'}\n                onClick={() => setActiveTab('credit')}\n              >\n                <i className=\"fas fa-credit-card me-2\"></i>\n                Credit Cards\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n\n          {/* Month Navigation - Only show for budget tab */}\n          {activeTab === 'budget' && (\n            <div className=\"month-navigation\">\n              <button \n                className=\"nav-btn prev\"\n                onClick={() => {\n                  if (currentMonth === 0) {\n                    setCurrentYear(prev => prev - 1);\n                    setCurrentMonth(11);\n                  } else {\n                    setCurrentMonth(prev => prev - 1);\n                  }\n                }}\n                aria-label=\"Previous month\"\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n              \n              <div className=\"month-select\">\n                <select \n                  value={currentMonth}\n                  onChange={(e) => setCurrentMonth(Number(e.target.value))}\n                  className=\"month-dropdown\"\n                  aria-label=\"Select month\"\n                >\n                  {months.map((month, index) => (\n                    <option key={index} value={index}>{month}</option>\n                  ))}\n                </select>\n                <select \n                  value={currentYear}\n                  onChange={(e) => setCurrentYear(Number(e.target.value))}\n                  className=\"year-dropdown\"\n                  aria-label=\"Select year\"\n                >\n                  {Array.from({ length: 5 }, (_, i) => (\n                    <option key={i} value={currentYear - 2 + i}>\n                      {currentYear - 2 + i}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <button \n                className=\"nav-btn next\"\n                onClick={() => {\n                  if (currentMonth === 11) {\n                    setCurrentYear(prev => prev + 1);\n                    setCurrentMonth(0);\n                  } else {\n                    setCurrentMonth(prev => prev + 1);\n                  }\n                }}\n                aria-label=\"Next month\"\n              >\n                <i className=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </header>\n\n      {/* Conditional Rendering based on active tab */}\n      {activeTab === 'budget' ? (\n        <>\n          {/* Forms Section - Side by Side */}\n          <div className=\"row\">\n            {/* Expense Form */}\n            <div className=\"col-md-8 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-danger text-white\">\n                  <Button\n                    onClick={() => toggleForm('expense')}\n                    aria-controls=\"expenseForm\"\n                    aria-expanded={isExpenseOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Expenses</h3>\n                        <i className={`fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                {/* Add backdrop for mobile */}\n                <div \n                  className={`mobile-form-backdrop ${isExpenseOpen ? 'show' : ''}`}\n                  onClick={() => toggleForm('expense')}\n                />\n                <Collapse in={isExpenseOpen}>\n                  <div id=\"expenseForm\">\n                    <Card.Body>\n                      <form onSubmit={handleExpenseSubmit} className=\"transaction-form\">\n                        <input\n                          type=\"text\"\n                          value={expenseDescription}\n                          onChange={(e) => setExpenseDescription(e.target.value)}\n                          placeholder=\"Expense Item\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={expenseAmount}\n                          onChange={(e) => setExpenseAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={category} \n                          onChange={(e) => setCategory(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Category</option>\n                          <option value=\"Bills\">Bills</option>\n                          <option value=\"Savings\">Savings</option>\n                          <option value=\"Personal\">Personal</option>\n                          <option value=\"Other\">Other...</option>\n                        </select>\n                        {/* Show custom category input when \"Other\" is selected */}\n                        {category === 'Other' && (\n                          <input\n                            type=\"text\"\n                            value={customCategory}\n                            onChange={(e) => setCustomCategory(e.target.value)}\n                            placeholder=\"Enter custom category\"\n                            className=\"form-control mt-2\"\n                            required\n                          />\n                        )}\n                        <input\n                          type=\"date\"\n                          value={dueDate}\n                          onChange={(e) => setDueDate(e.target.value)}\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={frequency} \n                          onChange={(e) => setFrequency(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Frequency</option>\n                          <option value=\"Monthly\">Monthly</option>\n                          <option value=\"Bi-Weekly\">Bi-Weekly</option>\n                          <option value=\"Weekly\">Weekly</option>\n                        </select>\n                        <button type=\"submit\" className=\"btn btn-danger\">\n                          Add Expense\n                        </button>\n                      </form>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n\n            {/* Income Form */}\n            <div className=\"col-md-4 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-success text-white\">\n                  <Button\n                    onClick={() => toggleForm('income')}\n                    aria-controls=\"incomeSection\"\n                    aria-expanded={isIncomeOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Income</h3>\n                        <i className={`fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                {/* Add backdrop for mobile */}\n                <div \n                  className={`mobile-form-backdrop ${isIncomeOpen ? 'show' : ''}`}\n                  onClick={() => toggleForm('income')}\n                />\n                <Collapse in={isIncomeOpen}>\n                  <div id=\"incomeSection\">\n                    <Card.Body>\n                      <form onSubmit={handleIncomeSubmit} className=\"transaction-form mb-4\">\n                        <input\n                          type=\"text\"\n                          value={incomeDescription}\n                          onChange={(e) => setIncomeDescription(e.target.value)}\n                          placeholder=\"Income Source\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={incomeAmount}\n                          onChange={(e) => setIncomeAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <button type=\"submit\" className=\"btn btn-success\">\n                          Add Income\n                        </button>\n                      </form>\n                      <div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <thead>\n                            <tr>\n                              <th>Description</th>\n                              <th>Amount</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {sortTransactions(applyFilters(filterTransactions('income'))).map(transaction => (\n                              <tr key={transaction.id}>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"text\"\n                                      value={editingValues.description || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        description: e.target.value\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                    />\n                                  ) : (\n                                    transaction.description\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"number\"\n                                      value={editingValues.amount || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        amount: parseFloat(e.target.value)\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                      step=\"0.01\"\n                                    />\n                                  ) : (\n                                    <span className=\"text-success\">${transaction.amount.toFixed(2)}</span>\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <>\n                                      <button\n                                        onClick={() => saveEdit(transaction.id)}\n                                        className=\"btn-icon\"\n                                        title=\"Save changes\"\n                                      >\n                                        <i className=\"fas fa-save\"></i>\n                                        <span>Save</span>\n                                      </button>\n                                      <button\n                                        onClick={cancelEdit}\n                                        className=\"btn-icon delete\"\n                                        title=\"Cancel editing\"\n                                      >\n                                        <i className=\"fas fa-times\"></i>\n                                        <span>Cancel</span>\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <div className=\"expense-actions\">\n                                      <button\n                                        onClick={() => startEditing(transaction)}\n                                        className=\"btn-icon\"\n                                        title=\"Edit this entry\"\n                                      >\n                                        <i className=\"fas fa-edit\"></i>\n                                        <span>Edit</span>\n                                      </button>\n                                      <button\n                                        onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                        className=\"btn-icon delete\"\n                                        title=\"Delete this entry\"\n                                      >\n                                        <i className=\"fas fa-trash\"></i>\n                                        <span>Delete</span>\n                                      </button>\n                                    </div>\n                                  )}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n          </div>\n\n          {/* Chart Section - Moved above Budget & Expenses */}\n          <div className=\"row mb-4\">\n            <div className=\"col-12\">\n              <div className=\"chart-section\">\n                <h3>Expense Breakdown</h3>\n                <div className=\"chart-container\">\n                  <canvas id=\"expenseChart\"></canvas>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Budget & Expenses Card */}\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header bg-danger text-white\">\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <h3 className=\"mb-0\">Budget & Expenses</h3>\n                    <button \n                      className=\"btn btn-link text-white\" \n                      onClick={() => setIsExpenseListOpen(!isExpenseListOpen)}\n                    >\n                      <i className={`fas fa-chevron-${isExpenseListOpen ? 'up' : 'down'}`}></i>\n                    </button>\n                  </div>\n                </div>\n                \n                <div className=\"card-body\">\n                  {/* Budget Summary Section */}\n                  <div className=\"budget-summary mb-3\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-wallet me-2\"></i>\n                          <span className=\"label\">Monthly Income:</span>\n                          <span className=\"value text-success\">${calculateTotals().income.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-shopping-cart me-2\"></i>\n                          <span className=\"label\">Total Expenses:</span>\n                          <span className=\"value text-danger\">${calculateTotals().expenses.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-piggy-bank me-2\"></i>\n                          <span className=\"label\">Remaining:</span>\n                          <span className=\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\">\n                            ${(calculateTotals().income - calculateTotals().expenses).toFixed(2)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"payment-summary mt-3\">\n                      {(() => {\n                        const summary = calculatePaymentSummary();\n                        return (\n                          <>\n                            <div className=\"progress mb-2\">\n                              <div \n                                className=\"progress-bar bg-success\" \n                                role=\"progressbar\" \n                                style={{width: `${summary.progress}%`}}\n                                aria-valuenow={summary.progress} \n                                aria-valuemin=\"0\" \n                                aria-valuemax=\"100\"\n                              >\n                                {summary.progress}%\n                              </div>\n                            </div>\n                            <div className=\"summary-grid\">\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Paid:</span>\n                                <span className=\"value text-success\">${summary.paid}</span>\n                              </div>\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Remaining:</span>\n                                <span className=\"value text-danger\">${summary.remaining}</span>\n                              </div>\n                            </div>\n                          </>\n                        );\n                      })()}\n                    </div>\n                  </div>\n\n                  {/* Expense List Section */}\n                  <Collapse in={isExpenseListOpen}>\n                    <div>\n                      {/* Add Filter Controls */}\n                      <div className=\"filters-section mb-4\">\n                        <div className=\"row g-3\">\n                          <div className=\"col-md-3\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Search expenses...\"\n                              value={filterConfig.search}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                search: e.target.value\n                              }))}\n                            />\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.category}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                category: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Categories</option>\n                              <option value=\"Bills\">Bills</option>\n                              <option value=\"Savings\">Savings</option>\n                              <option value=\"Personal\">Personal</option>\n                              <option value=\"Other\">Other</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.status}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                status: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Status</option>\n                              <option value=\"paid\">Paid</option>\n                              <option value=\"unpaid\">Unpaid</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={`${sortConfig.key}-${sortConfig.direction}`}\n                              onChange={(e) => {\n                                const [key, direction] = e.target.value.split('-');\n                                setSortConfig({ key, direction });\n                              }}\n                            >\n                              <option value=\"dueDate-asc\">Date (Earliest First)</option>\n                              <option value=\"dueDate-desc\">Date (Latest First)</option>\n                              <option value=\"amount-asc\">Amount (Low to High)</option>\n                              <option value=\"amount-desc\">Amount (High to Low)</option>\n                              <option value=\"description-asc\">Name (A to Z)</option>\n                              <option value=\"description-desc\">Name (Z to A)</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"table-responsive\">\n                        <div className=\"expense-list\">\n                          {sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction => (\n                            <div key={transaction.id} className={`expense-item ${transaction.paid ? 'paid' : ''}`}>\n                              <div className=\"expense-main\">\n                                <div className=\"expense-checkbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    checked={transaction.paid || false}\n                                    onChange={() => togglePaid(transaction.id)}\n                                    id={`paid-${transaction.id}`}\n                                  />\n                                  <label className=\"checkmark\" htmlFor={`paid-${transaction.id}`}></label>\n                                </div>\n                                <div className=\"expense-content\">\n                                  {editingId === transaction.id ? (\n                                    // Edit mode\n                                    <div className=\"expense-edit-form\">\n                                      <input\n                                        type=\"text\"\n                                        value={editingValues.description || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          description: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        placeholder=\"Description\"\n                                      />\n                                      <input\n                                        type=\"number\"\n                                        value={editingValues.amount || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          amount: parseFloat(e.target.value)\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        step=\"0.01\"\n                                        placeholder=\"Amount\"\n                                      />\n                                      <select\n                                        value={editingValues.category || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          category: e.target.value\n                                        })}\n                                        className=\"form-select form-select-sm mb-2\"\n                                      >\n                                        <option value=\"Bills\">Bills</option>\n                                        <option value=\"Savings\">Savings</option>\n                                        <option value=\"Personal\">Personal</option>\n                                        <option value=\"Other\">Other</option>\n                                      </select>\n                                      <input\n                                        type=\"date\"\n                                        value={editingValues.dueDate || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          dueDate: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                      />\n                                      <div className=\"edit-actions\">\n                                        <button\n                                          onClick={() => saveEdit(transaction.id)}\n                                          className=\"btn btn-success btn-sm me-2\"\n                                        >\n                                          <i className=\"fas fa-save\"></i> Save\n                                        </button>\n                                        <button\n                                          onClick={cancelEdit}\n                                          className=\"btn btn-secondary btn-sm\"\n                                        >\n                                          <i className=\"fas fa-times\"></i> Cancel\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    // Display mode\n                                    <>\n                                      <div className=\"expense-primary\">\n                                        <span className=\"expense-title\">{transaction.description}</span>\n                                        <span className=\"expense-amount\">${transaction.amount.toFixed(2)}</span>\n                                      </div>\n                                      <div className=\"expense-secondary\">\n                                        {transaction.type === 'expense' && (\n                                          <span className=\"expense-tag\">{transaction.category}</span>\n                                        )}\n                                        <span className=\"expense-date\">{getDayWithSuffix(transaction.dueDate)}</span>\n                                        <span className=\"expense-frequency\">{transaction.frequency}</span>\n                                      </div>\n                                    </>\n                                  )}\n                                </div>\n                                {!editingId && (\n                                  <div className=\"expense-actions\">\n                                    <button\n                                      onClick={() => startEditing(transaction)}\n                                      className=\"btn-icon\"\n                                      title=\"Edit\"\n                                    >\n                                      <i className=\"fas fa-edit\"></i>\n                                      <span>Edit</span>\n                                    </button>\n                                    <button\n                                      onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                      className=\"btn-icon delete\"\n                                      title=\"Delete\"\n                                    >\n                                      <i className=\"fas fa-trash\"></i>\n                                      <span>Delete</span>\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </Collapse>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Render current month's page */}\n          <MonthPage\n            month={currentMonth}\n            year={currentYear}\n            transactions={allMonthsTransactions[`${currentYear}-${currentMonth}`] || []}\n            onUpdateTransaction={addTransaction}\n            onDeleteTransaction={deleteTransaction}\n          />\n        </>\n      ) : (\n        <CreditCardTracker \n          creditCards={creditCards} \n          setCreditCards={updateCreditCards}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}