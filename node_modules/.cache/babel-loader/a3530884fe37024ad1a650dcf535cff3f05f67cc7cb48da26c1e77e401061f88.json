{"ast":null,"code":"import _objectSpread from\"/Users/machome/Documents/GitHub/Finance_Tracker-/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/* eslint-disable no-unused-vars */// src/App.js\nimport React,{useState,useEffect,createContext,useContext,useRef}from'react';import'./App.css';import Chart from'chart.js/auto';import ChartDataLabels from'chartjs-plugin-datalabels';import{Collapse,Button,Card,Nav}from'react-bootstrap';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,ArcElement}from'chart.js';import MonthPage from'./components/MonthPage';import CreditCardTracker from'./components/CreditCardTracker';import'bootstrap/dist/css/bootstrap.min.css';// Register ChartJS components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,ArcElement,ChartDataLabels);// Create theme context\nconst ThemeContext=/*#__PURE__*/createContext();// Add this before the App component.\nexport const useTheme=()=>useContext(ThemeContext);// Add this helper function at the top of your App component, before the useEffect hooks\nconst generateColor=index=>{// Predefined colors for known categories\nconst categoryColors={'Bills':{bg:'rgba(255, 99, 132, 0.8)',border:'rgba(255, 99, 132, 1)'},'Savings':{bg:'rgba(54, 162, 235, 0.8)',border:'rgba(54, 162, 235, 1)'},'Personal':{bg:'rgba(255, 206, 86, 0.8)',border:'rgba(255, 206, 86, 1)'}};// Color palette for additional categories\nconst colorPalette=[{bg:'rgba(75, 192, 192, 0.8)',border:'rgba(75, 192, 192, 1)'},{bg:'rgba(153, 102, 255, 0.8)',border:'rgba(153, 102, 255, 1)'},{bg:'rgba(255, 159, 64, 0.8)',border:'rgba(255, 159, 64, 1)'},{bg:'rgba(231, 233, 237, 0.8)',border:'rgba(231, 233, 237, 1)'},{bg:'rgba(102, 204, 153, 0.8)',border:'rgba(102, 204, 153, 1)'},{bg:'rgba(255, 99, 255, 0.8)',border:'rgba(255, 99, 255, 1)'}];return colorPalette[index%colorPalette.length];};function App(){const[transactions,setTransactions]=useState([]);const[incomeDescription,setIncomeDescription]=useState('');const[incomeAmount,setIncomeAmount]=useState('');const[expenseDescription,setExpenseDescription]=useState('');const[expenseAmount,setExpenseAmount]=useState('');const[category,setCategory]=useState('Bills');const[dueDate,setDueDate]=useState(new Date().toISOString().split('T')[0]);const[frequency,setFrequency]=useState('Monthly');const[currentMonth,setCurrentMonth]=useState(new Date().getMonth());const[chart,setChart]=useState(null);const[isIncomeOpen,setIsIncomeOpen]=useState(false);const[isIncomeListOpen,setIsIncomeListOpen]=useState(true);const[isExpenseOpen,setIsExpenseOpen]=useState(false);const[editingId,setEditingId]=useState(null);const[editingValues,setEditingValues]=useState({});const[isDarkMode,setIsDarkMode]=useState(false);const[currentYear,setCurrentYear]=useState(new Date().getFullYear());const[allMonthsTransactions,setAllMonthsTransactions]=useState({});const[activeTab,setActiveTab]=useState('budget');const[creditCards,setCreditCards]=useState([]);const[customCategory,setCustomCategory]=useState('');const[isExpenseListOpen,setIsExpenseListOpen]=useState(false);const[sortConfig,setSortConfig]=useState({key:'dueDate',direction:'asc'});const[filterConfig,setFilterConfig]=useState({category:'all',status:'all',search:''});const[activeForm,setActiveForm]=useState(null);const[categoryColors,setCategoryColors]=useState({});const months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];// Add this ref to track chart instance\nconst chartRef=useRef(null);// Simplify the data loading useEffect\nuseEffect(()=>{const loadData=()=>{try{const savedTransactions=localStorage.getItem('transactions');const savedMonthsTransactions=localStorage.getItem('allMonthsTransactions');const savedCreditCards=localStorage.getItem('creditCards');if(savedTransactions){setTransactions(JSON.parse(savedTransactions));}if(savedMonthsTransactions){setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));}if(savedCreditCards){setCreditCards(JSON.parse(savedCreditCards));}}catch(error){console.error('Error loading data:',error);}};loadData();},[]);// Update the chart useEffect\nuseEffect(()=>{// Always destroy existing chart instance first\nif(chartRef.current){chartRef.current.destroy();chartRef.current=null;}const canvas=document.getElementById('expenseChart');if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const tDate=new Date(t.date);return tDate.getMonth()===currentMonth&&tDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions].filter(t=>t.type==='expense'&&!t.skipped);const categoryTotals=allTransactions.reduce((acc,transaction)=>{if(!acc[transaction.category]){acc[transaction.category]=0;}acc[transaction.category]+=parseFloat(transaction.amount)||0;return acc;},{});if(Object.keys(categoryTotals).length>0){const categories=Object.keys(categoryTotals);const colors=categories.map((category,index)=>{const categoryColors={'Bills':{bg:'rgba(255, 99, 132, 0.8)',border:'rgba(255, 99, 132, 1)'},'Savings':{bg:'rgba(54, 162, 235, 0.8)',border:'rgba(54, 162, 235, 1)'},'Personal':{bg:'rgba(255, 206, 86, 0.8)',border:'rgba(255, 206, 86, 1)'}};return categoryColors[category]||generateColor(index);});// Create new chart and store in ref\nchartRef.current=new Chart(ctx,{type:'pie',data:{labels:categories,datasets:[{data:Object.values(categoryTotals),backgroundColor:colors.map(c=>c.bg),borderColor:colors.map(c=>c.border),borderWidth:1}]},options:{responsive:true,maintainAspectRatio:false,layout:{padding:{left:100,right:30,top:20,bottom:20}},plugins:{datalabels:{formatter:(value,context)=>{const total=context.dataset.data.reduce((acc,val)=>acc+val,0);const percentage=(value/total*100).toFixed(1);if(percentage<10){return null;}if(value>=1000000){return\"$\".concat((value/1000000).toFixed(1),\"M\");}else if(value>=1000){return\"$\".concat(Math.round(value/1000),\"k\");}return\"$\".concat(value.toFixed(0));},color:'#FFFFFF',font:{weight:'bold',size:12},textAlign:'center'},legend:{position:'left',align:'center',labels:{color:isDarkMode?'#ffffff':'#666666',font:{size:11},padding:8,boxWidth:12,generateLabels:chart=>{const data=chart.data;if(data.labels.length&&data.datasets.length){return data.labels.map((label,i)=>{const value=data.datasets[0].data[i];let formattedValue;if(value>=1000000){formattedValue=\"$\".concat((value/1000000).toFixed(1),\"M\");}else if(value>=1000){formattedValue=\"$\".concat(Math.round(value/1000),\"k\");}else{formattedValue=\"$\".concat(value.toFixed(0));}return{text:\"\".concat(label,\": \").concat(formattedValue),fillStyle:data.datasets[0].backgroundColor[i],strokeStyle:data.datasets[0].borderColor[i],lineWidth:1,hidden:false,index:i};});}return[];}}}}}});}return()=>{if(chartRef.current){chartRef.current.destroy();chartRef.current=null;}};},[currentMonth,currentYear,transactions,allMonthsTransactions,isDarkMode]);// Separate submit handlers for income and expenses\nconst handleIncomeSubmit=e=>{e.preventDefault();if(!incomeDescription||!incomeAmount){return;// Just return if validation fails\n}const newIncome={id:Date.now(),description:incomeDescription,amount:parseFloat(incomeAmount),type:'income',date:new Date().toISOString(),frequency:'Monthly',dueDate:new Date().toISOString().split('T')[0]};// Use addTransaction instead of directly updating transactions\naddTransaction(newIncome,'income');// Clear form\nsetIncomeDescription('');setIncomeAmount('');setIsIncomeOpen(false);// Automatically close the form after submission\n};const handleExpenseSubmit=e=>{e.preventDefault();if(!expenseDescription||!expenseAmount||!dueDate||!category){return;}// Use custom category if \"Other\" is selected\nconst finalCategory=category==='Other'?customCategory:category;const newExpense={id:Date.now(),description:expenseDescription,amount:parseFloat(expenseAmount),type:'expense',category:finalCategory,dueDate,frequency,paid:false,skipped:false,date:new Date().toISOString()};addTransaction(newExpense,'expense');// Clear form\nsetExpenseDescription('');setExpenseAmount('');setCategory('Bills');// Reset to default category\nsetCustomCategory('');// Clear custom category\nsetIsExpenseOpen(false);};const togglePaid=id=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const monthTransaction=monthTransactions.find(t=>t.id===id);try{if(monthTransaction){setAllMonthsTransactions(prev=>{const updated=_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{paid:!t.paid,skipped:false}):t)});localStorage.setItem('allMonthsTransactions',JSON.stringify(updated));return updated;});}else{setTransactions(prev=>{const updated=prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{paid:!t.paid,skipped:false}):t);localStorage.setItem('transactions',JSON.stringify(updated));return updated;});}// If chart exists, update it safely\nif(chartRef.current){requestAnimationFrame(()=>{try{chartRef.current.update('none');}catch(error){console.error('Error updating chart in togglePaid:',error);}});}}catch(error){console.error('Error in togglePaid:',error);}};const toggleSkipped=id=>{setTransactions(prev=>{const updated=prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{skipped:!t.skipped,paid:false}):t);localStorage.setItem('transactions',JSON.stringify(updated));return updated;});};const deleteTransaction=(transactionId,fromMonth)=>{// First, blur (unfocus) any active element to dismiss the keyboard\nif(document.activeElement instanceof HTMLElement){document.activeElement.blur();}// Add a small delay to ensure keyboard is dismissed before showing confirm dialog\nsetTimeout(()=>{if(window.confirm('Delete this transaction?')){const transaction=transactions.find(t=>t.id===transactionId);if(!transaction){const monthKey=\"\".concat(currentYear,\"-\").concat(fromMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const monthTransaction=monthTransactions.find(t=>t.id===transactionId);if(monthTransaction!==null&&monthTransaction!==void 0&&monthTransaction.originalTransactionId){// Add another small delay for the second confirmation if needed\nsetTimeout(()=>{const deleteAll=window.confirm('Delete all future occurrences of this recurring transaction?');if(deleteAll){const updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.keys(updatedMonthsTransactions).forEach(monthKey=>{const[year,month]=monthKey.split('-').map(Number);if(year>currentYear||year===currentYear&&month>=fromMonth){updatedMonthsTransactions[monthKey]=updatedMonthsTransactions[monthKey].filter(t=>t.originalTransactionId!==monthTransaction.originalTransactionId);}});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{const updatedMonthsTransactions=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:allMonthsTransactions[monthKey].filter(t=>t.id!==transactionId)});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}},100);}else{const updatedMonthsTransactions=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:allMonthsTransactions[monthKey].filter(t=>t.id!==transactionId)});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}}else{const updatedTransactions=transactions.filter(t=>t.id!==transactionId);setTransactions(updatedTransactions);localStorage.setItem('transactions',JSON.stringify(updatedTransactions));}}},100);};// Update the filterTransactions function to properly combine both sources\nconst filterTransactions=type=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];// Get transactions from both sources\nconst regularTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return t.type===type&&transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const recurringTransactions=monthTransactions.filter(t=>t.type===type);// Combine and remove duplicates\nconst combined=[...regularTransactions,...recurringTransactions];return combined.filter((transaction,index,self)=>index===self.findIndex(t=>t.id===transaction.id));};// Update calculateTotals to include both regular and recurring transactions\nconst calculateTotals=()=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const tDate=new Date(t.date);return tDate.getMonth()===currentMonth&&tDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions];return{income:allTransactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+(parseFloat(t.amount)||0),0),expenses:allTransactions.filter(t=>t.type==='expense'&&!t.skipped).reduce((sum,t)=>sum+(parseFloat(t.amount)||0),0),paid:allTransactions.filter(t=>t.paid).reduce((sum,t)=>sum+(parseFloat(t.amount)||0),0)};};// Update the saveEdit function\nconst saveEdit=id=>{var _allMonthsTransaction;// First, blur any active element to dismiss keyboard\nif(document.activeElement instanceof HTMLElement){document.activeElement.blur();}// Parse amount before saving\nconst editingValuesWithParsedAmount=_objectSpread(_objectSpread({},editingValues),{},{amount:parseFloat(editingValues.amount)||0});const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const isMonthTransaction=(_allMonthsTransaction=allMonthsTransactions[monthKey])===null||_allMonthsTransaction===void 0?void 0:_allMonthsTransaction.some(t=>t.id===id);if(isMonthTransaction){// Handle editing recurring transactions\nif(editingValues.originalTransactionId){setTimeout(()=>{const editFuture=window.confirm('Do you want to apply these changes to all future occurrences?');if(editFuture){// Update all future occurrences with parsed amount\nconst updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.keys(updatedMonthsTransactions).forEach(key=>{const[year,month]=key.split('-').map(Number);if(year>currentYear||year===currentYear&&month>=currentMonth){updatedMonthsTransactions[key]=updatedMonthsTransactions[key].map(t=>t.originalTransactionId===editingValues.originalTransactionId?_objectSpread(_objectSpread({},t),editingValuesWithParsedAmount):t);}});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{// Update only this occurrence with parsed amount\nsetAllMonthsTransactions(prev=>_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValuesWithParsedAmount):t)}));}setEditingId(null);setEditingValues({});},100);}else{// Update one-time transaction with parsed amount\nsetAllMonthsTransactions(prev=>_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValuesWithParsedAmount):t)}));setEditingId(null);setEditingValues({});}}else{// Handle regular transactions with parsed amount\nsetTransactions(transactions.map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValuesWithParsedAmount):t));setEditingId(null);setEditingValues({});}};// Update the startEditing function\nconst startEditing=transaction=>{setEditingId(transaction.id);setEditingValues(_objectSpread(_objectSpread({},transaction),{},{amount:transaction.amount.toString()// Keep as string during editing\n}));};// Add this function to cancel editing\nconst cancelEdit=()=>{setEditingId(null);setEditingValues({});};// Add this helper function at the top of your App component\nconst getDayWithSuffix=date=>{const day=new Date(date).getDate();if(day>3&&day<21)return day+'th';switch(day%10){case 1:return day+\"st\";case 2:return day+\"nd\";case 3:return day+\"rd\";default:return day+\"th\";}};// Add this function in your App component\nconst getMonthlyTrends=()=>{const last6Months=Array.from({length:6},(_,i)=>{const d=new Date();d.setMonth(d.getMonth()-i);return d;}).reverse();return{labels:last6Months.map(date=>months[date.getMonth()]),expenses:last6Months.map(date=>{return transactions.filter(t=>{const tDate=new Date(t.date);return t.type==='expense'&&tDate.getMonth()===date.getMonth()&&!t.skipped;}).reduce((sum,t)=>sum+t.amount,0);}),income:last6Months.map(date=>{return transactions.filter(t=>{const tDate=new Date(t.date);return t.type==='income'&&tDate.getMonth()===date.getMonth();}).reduce((sum,t)=>sum+t.amount,0);})};};// Update the generateRecurringDates function\nconst generateRecurringDates=(startDate,frequency,endDate)=>{const dates=[];let currentDate=new Date(startDate);const end=new Date(endDate);// Set both dates to start of day for accurate comparison\ncurrentDate.setHours(0,0,0,0);end.setHours(0,0,0,0);console.log('Generating recurring dates:',{startDate:currentDate,endDate:end,frequency});while(currentDate<=end){dates.push(new Date(currentDate));// Store the original day of month\nconst originalDay=currentDate.getDate();// Calculate next date based on frequency\nswitch(frequency){case'Weekly':currentDate.setDate(currentDate.getDate()+7);break;case'Bi-Weekly':currentDate.setDate(currentDate.getDate()+14);break;case'Monthly':currentDate.setMonth(currentDate.getMonth()+1);// Check if we've rolled over to the next month\nif(currentDate.getDate()!==originalDay){// We've hit the end of the month, go back to last day of previous month\ncurrentDate.setDate(0);}break;default:return dates;}console.log(\"Added \".concat(frequency,\" date:\"),new Date(currentDate));}console.log('Generated dates:',dates);return dates;};// Add these wrapper functions\nconst updateTransactions=newTransactions=>{setTransactions(newTransactions);localStorage.setItem('transactions',JSON.stringify(newTransactions));};const updateMonthlyTransactions=newMonthlyTransactions=>{setAllMonthsTransactions(newMonthlyTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(newMonthlyTransactions));};// Update the addTransaction function\nconst addTransaction=(transaction,type)=>{const endOfYear=new Date(currentYear,11,31);const isRecurring=transaction.frequency!=='One-time';const startDate=new Date(transaction.dueDate);// Ensure paid property is set for expenses\nconst transactionWithPaid=_objectSpread(_objectSpread({},transaction),{},{paid:type==='expense'?false:undefined});if(isRecurring){const recurringDates=generateRecurringDates(startDate,transaction.frequency,endOfYear);const transactionsByMonth={};recurringDates.forEach(date=>{// Only add transactions for current and future months\nif(date>=new Date(currentYear,currentMonth,1)){const monthKey=\"\".concat(date.getFullYear(),\"-\").concat(date.getMonth());if(!transactionsByMonth[monthKey]){transactionsByMonth[monthKey]=[];}const recurringTransaction=_objectSpread(_objectSpread({},transactionWithPaid),{},{id:Date.now()+Math.random(),dueDate:date.toISOString().split('T')[0],originalTransactionId:transaction.id,paid:type==='expense'?false:undefined});transactionsByMonth[monthKey].push(recurringTransaction);}});// Update allMonthsTransactions\nconst updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.entries(transactionsByMonth).forEach(_ref=>{let[monthKey,transactions]=_ref;if(!updatedMonthsTransactions[monthKey]){updatedMonthsTransactions[monthKey]=[];}updatedMonthsTransactions[monthKey]=[...updatedMonthsTransactions[monthKey],...transactions];});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{// Handle one-time transactions\nconst transactionDate=new Date(transaction.dueDate);const monthKey=\"\".concat(transactionDate.getFullYear(),\"-\").concat(transactionDate.getMonth());const updatedMonthly=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:[...(allMonthsTransactions[monthKey]||[]),_objectSpread(_objectSpread({},transactionWithPaid),{},{paid:false})]});updateMonthlyTransactions(updatedMonthly);}};// Update the calculateSummary function\nconst calculateSummary=()=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const tDate=new Date(t.date);return tDate.getMonth()===currentMonth&&tDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions];const income=allTransactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+(parseFloat(t.amount)||0),0);const paidIncome=allTransactions.filter(t=>t.type==='income'&&t.paid).reduce((sum,t)=>sum+(parseFloat(t.amount)||0),0);const expenses=allTransactions.filter(t=>t.type==='expense').reduce((sum,t)=>sum+(parseFloat(t.amount)||0),0);const balance=paidIncome-expenses;return{income:parseFloat(income)||0,paidIncome:parseFloat(paidIncome)||0,expenses:parseFloat(expenses)||0,balance:parseFloat(balance)||0};};// Add this function near the top of App component\nconst updateCreditCards=newCards=>{setCreditCards(newCards);localStorage.setItem('creditCards',JSON.stringify(newCards));};// Add function to calculate payment summary\nconst calculatePaymentSummary=()=>{const expenses=filterTransactions('expense');const total=expenses.reduce((sum,t)=>sum+(parseFloat(t.amount)||0),0);const paid=expenses.reduce((sum,t)=>t.paid?sum+(parseFloat(t.amount)||0):sum,0);const remaining=total-paid;return{total:total.toFixed(2),paid:paid.toFixed(2),remaining:remaining.toFixed(2),progress:total>0?(paid/total*100).toFixed(1):'0'};};// Add this sorting function\nconst sortTransactions=transactions=>{return[...transactions].sort((a,b)=>{if(sortConfig.key==='amount'){return sortConfig.direction==='asc'?parseFloat(a.amount)-parseFloat(b.amount):parseFloat(b.amount)-parseFloat(a.amount);}if(sortConfig.key==='dueDate'){return sortConfig.direction==='asc'?new Date(a.dueDate)-new Date(b.dueDate):new Date(b.dueDate)-new Date(a.dueDate);}if(sortConfig.key==='description'){return sortConfig.direction==='asc'?a.description.localeCompare(b.description):b.description.localeCompare(a.description);}return 0;});};// Rename this function to applyFilters\nconst applyFilters=transactions=>{return transactions.filter(transaction=>{const matchesCategory=filterConfig.category==='all'||transaction.category===filterConfig.category;const matchesStatus=filterConfig.status==='all'||filterConfig.status==='paid'&&transaction.paid||filterConfig.status==='unpaid'&&!transaction.paid;const matchesSearch=transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());return matchesCategory&&matchesStatus&&matchesSearch;});};// Add this function to handle form toggling\nconst toggleForm=formName=>{if(activeForm===formName){setActiveForm(null);setIsIncomeOpen(false);setIsExpenseOpen(false);}else{setActiveForm(formName);if(formName==='income'){setIsIncomeOpen(true);setIsExpenseOpen(false);}else{setIsExpenseOpen(true);setIsIncomeOpen(false);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(isDarkMode?'dark-mode':''),children:[/*#__PURE__*/_jsxs(\"header\",{className:\"finance-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"theme-toggle\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsDarkMode(!isDarkMode),className:\"theme-toggle-btn\",title:isDarkMode?\"Switch to Light Mode\":\"Switch to Dark Mode\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-\".concat(isDarkMode?'sun':'moon')})})}),/*#__PURE__*/_jsx(\"h1\",{className:\"gradient-text\",children:\"Finance Tracker\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-navigation\",children:[/*#__PURE__*/_jsxs(Nav,{variant:\"tabs\",className:\"main-nav\",children:[/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{active:activeTab==='budget',onClick:()=>setActiveTab('budget'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wallet me-2\"}),\"Budget Tracker\"]})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{active:activeTab==='credit',onClick:()=>setActiveTab('credit'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-credit-card me-2\"}),\"Credit Cards\"]})})]}),activeTab==='budget'&&/*#__PURE__*/_jsxs(\"div\",{className:\"month-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn prev\",onClick:()=>{if(currentMonth===0){setCurrentYear(prev=>prev-1);setCurrentMonth(11);}else{setCurrentMonth(prev=>prev-1);}},\"aria-label\":\"Previous month\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-left\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"month-select\",children:[/*#__PURE__*/_jsx(\"select\",{value:currentMonth,onChange:e=>setCurrentMonth(Number(e.target.value)),className:\"month-dropdown\",\"aria-label\":\"Select month\",children:months.map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index,children:month},index))}),/*#__PURE__*/_jsx(\"select\",{value:currentYear,onChange:e=>setCurrentYear(Number(e.target.value)),className:\"year-dropdown\",\"aria-label\":\"Select year\",children:Array.from({length:5},(_,i)=>/*#__PURE__*/_jsx(\"option\",{value:currentYear-2+i,children:currentYear-2+i},i))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn next\",onClick:()=>{if(currentMonth===11){setCurrentYear(prev=>prev+1);setCurrentMonth(0);}else{setCurrentMonth(prev=>prev+1);}},\"aria-label\":\"Next month\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-right\"})})]})]})]}),activeTab==='budget'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 mb-4\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-danger text-white\",children:/*#__PURE__*/_jsx(Button,{onClick:()=>toggleForm('expense'),\"aria-controls\":\"expenseForm\",\"aria-expanded\":isExpenseOpen,variant:\"link\",className:\"text-white w-100 text-start p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Expenses\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-caret-\".concat(isExpenseOpen?'down':'right',\" ms-2 fa-lg\")})]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-form-backdrop \".concat(isExpenseOpen?'show':''),onClick:()=>toggleForm('expense')}),/*#__PURE__*/_jsx(Collapse,{in:isExpenseOpen,children:/*#__PURE__*/_jsx(\"div\",{id:\"expenseForm\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleExpenseSubmit,className:\"transaction-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:expenseDescription,onChange:e=>setExpenseDescription(e.target.value),placeholder:\"Expense Item\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:expenseAmount,onChange:e=>setExpenseAmount(e.target.value),placeholder:\"Amount\",step:\"0.01\",className:\"form-control\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:category,onChange:e=>setCategory(e.target.value),className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Category\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other...\"})]}),category==='Other'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:customCategory,onChange:e=>setCustomCategory(e.target.value),placeholder:\"Enter custom category\",className:\"form-control mt-2\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dueDate,onChange:e=>setDueDate(e.target.value),className:\"form-control\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:frequency,onChange:e=>setFrequency(e.target.value),className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Frequency\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bi-Weekly\",children:\"Bi-Weekly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Weekly\",children:\"Weekly\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-danger\",children:\"Add Expense\"})]})})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 mb-4\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-success text-white\",children:/*#__PURE__*/_jsx(Button,{onClick:()=>toggleForm('income'),\"aria-controls\":\"incomeSection\",\"aria-expanded\":isIncomeOpen,variant:\"link\",className:\"text-white w-100 text-start p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Income\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-caret-\".concat(isIncomeOpen?'down':'right',\" ms-2 fa-lg\")})]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-form-backdrop \".concat(isIncomeOpen?'show':''),onClick:()=>toggleForm('income')}),/*#__PURE__*/_jsx(Collapse,{in:isIncomeOpen,children:/*#__PURE__*/_jsx(\"div\",{id:\"incomeSection\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleIncomeSubmit,className:\"transaction-form mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:incomeDescription,onChange:e=>setIncomeDescription(e.target.value),placeholder:\"Income Source\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:incomeAmount,onChange:e=>setIncomeAmount(e.target.value),placeholder:\"Amount\",step:\"0.01\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-success\",children:\"Add Income\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortTransactions(applyFilters(filterTransactions('income'))).map(transaction=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingValues.description||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{description:e.target.value})),className:\"form-control form-control-sm\"}):transaction.description}),/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editingValues.amount||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{amount:e.target.value})),className:\"form-control form-control-sm\",step:\"0.01\"}):/*#__PURE__*/_jsxs(\"span\",{className:\"text-success\",children:[\"$\",parseFloat(transaction.amount).toFixed(2)]})}),/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>saveEdit(transaction.id),className:\"btn-icon\",title:\"Save changes\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Save\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:cancelEdit,className:\"btn-icon delete\",title:\"Cancel editing\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Cancel\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"expense-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startEditing(transaction),className:\"btn-icon\",title:\"Edit this entry\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>deleteTransaction(transaction.id,currentMonth),className:\"btn-icon delete\",title:\"Delete this entry\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Delete\"})]})]})})]},transaction.id))})]})})]})})})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Expense Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(\"canvas\",{id:\"expenseChart\"})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card budget-expenses\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header bg-danger text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Budget & Expenses\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-link text-white\",onClick:()=>setIsExpenseListOpen(!isExpenseListOpen),children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-\".concat(isExpenseListOpen?'up':'down')})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"budget-summary mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wallet me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Monthly Income:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-success\",children:[\"$\",calculateTotals().income.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-shopping-cart me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Total Expenses:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-danger\",children:[\"$\",calculateTotals().expenses.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-piggy-bank me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Remaining:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\",children:[\"$\",(calculateTotals().income-calculateTotals().expenses).toFixed(2)]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-summary mt-3\",children:(()=>{const summary=calculatePaymentSummary();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress mb-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar bg-success\",role:\"progressbar\",style:{width:\"\".concat(summary.progress,\"%\")},\"aria-valuenow\":summary.progress,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",children:[summary.progress,\"%\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Paid:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-success\",children:[\"$\",summary.paid]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Remaining:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-danger\",children:[\"$\",summary.remaining]})]})]})]});})()})]}),/*#__PURE__*/_jsx(Collapse,{in:isExpenseListOpen,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"filters-section mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Search expenses...\",value:filterConfig.search,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{search:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:filterConfig.category,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{category:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Categories\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:filterConfig.status,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{status:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"paid\",children:\"Paid\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unpaid\",children:\"Unpaid\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:\"\".concat(sortConfig.key,\"-\").concat(sortConfig.direction),onChange:e=>{const[key,direction]=e.target.value.split('-');setSortConfig({key,direction});},children:[/*#__PURE__*/_jsx(\"option\",{value:\"dueDate-asc\",children:\"Date (Earliest First)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dueDate-desc\",children:\"Date (Latest First)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amount-asc\",children:\"Amount (Low to High)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amount-desc\",children:\"Amount (High to Low)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"description-asc\",children:\"Name (A to Z)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"description-desc\",children:\"Name (Z to A)\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsx(\"div\",{className:\"expense-list\",children:sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction=>/*#__PURE__*/_jsx(\"div\",{className:\"expense-item \".concat(transaction.paid?'paid':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"expense-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:transaction.paid||false,onChange:()=>togglePaid(transaction.id),id:\"paid-\".concat(transaction.id)}),/*#__PURE__*/_jsx(\"label\",{className:\"checkmark\",htmlFor:\"paid-\".concat(transaction.id)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"expense-content\",children:editingId===transaction.id?/*#__PURE__*/// Edit mode\n_jsxs(\"div\",{className:\"expense-edit-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingValues.description||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{description:e.target.value})),className:\"form-control form-control-sm mb-2\",placeholder:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editingValues.amount||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{amount:e.target.value})),className:\"form-control form-control-sm mb-2\",step:\"0.01\",placeholder:\"Amount\"}),/*#__PURE__*/_jsxs(\"select\",{value:editingValues.category||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{category:e.target.value})),className:\"form-select form-select-sm mb-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:editingValues.dueDate||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{dueDate:e.target.value})),className:\"form-control form-control-sm mb-2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>saveEdit(transaction.id),className:\"btn btn-success btn-sm me-2\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),\" Save\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:cancelEdit,className:\"btn btn-secondary btn-sm\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),\" Cancel\"]})]})]}):/*#__PURE__*/// Display mode\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-primary\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"expense-title\",children:transaction.description}),/*#__PURE__*/_jsxs(\"span\",{className:\"expense-amount\",children:[\"$\",parseFloat(transaction.amount).toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"expense-secondary\",children:[transaction.type==='expense'&&/*#__PURE__*/_jsx(\"span\",{className:\"expense-tag\",children:transaction.category}),/*#__PURE__*/_jsx(\"span\",{className:\"expense-date\",children:getDayWithSuffix(transaction.dueDate)}),/*#__PURE__*/_jsx(\"span\",{className:\"expense-frequency\",children:transaction.frequency})]})]})}),!editingId&&/*#__PURE__*/_jsxs(\"div\",{className:\"expense-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startEditing(transaction),className:\"btn-icon\",title:\"Edit\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>deleteTransaction(transaction.id,currentMonth),className:\"btn-icon delete\",title:\"Delete\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Delete\"})]})]})]})},transaction.id))})})]})})]})]})})}),/*#__PURE__*/_jsx(MonthPage,{month:currentMonth,year:currentYear,transactions:allMonthsTransactions[\"\".concat(currentYear,\"-\").concat(currentMonth)]||[],onUpdateTransaction:addTransaction,onDeleteTransaction:deleteTransaction})]}):/*#__PURE__*/_jsx(CreditCardTracker,{creditCards:creditCards,setCreditCards:updateCreditCards})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","useRef","Chart","ChartDataLabels","Collapse","Button","Card","Nav","Line","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","MonthPage","CreditCardTracker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","ThemeContext","useTheme","generateColor","index","categoryColors","bg","border","colorPalette","length","App","transactions","setTransactions","incomeDescription","setIncomeDescription","incomeAmount","setIncomeAmount","expenseDescription","setExpenseDescription","expenseAmount","setExpenseAmount","category","setCategory","dueDate","setDueDate","Date","toISOString","split","frequency","setFrequency","currentMonth","setCurrentMonth","getMonth","chart","setChart","isIncomeOpen","setIsIncomeOpen","isIncomeListOpen","setIsIncomeListOpen","isExpenseOpen","setIsExpenseOpen","editingId","setEditingId","editingValues","setEditingValues","isDarkMode","setIsDarkMode","currentYear","setCurrentYear","getFullYear","allMonthsTransactions","setAllMonthsTransactions","activeTab","setActiveTab","creditCards","setCreditCards","customCategory","setCustomCategory","isExpenseListOpen","setIsExpenseListOpen","sortConfig","setSortConfig","key","direction","filterConfig","setFilterConfig","status","search","activeForm","setActiveForm","setCategoryColors","months","chartRef","loadData","savedTransactions","localStorage","getItem","savedMonthsTransactions","savedCreditCards","JSON","parse","error","console","current","destroy","canvas","document","getElementById","ctx","getContext","monthKey","concat","monthTransactions","regularTransactions","filter","t","tDate","date","allTransactions","type","skipped","categoryTotals","reduce","acc","transaction","parseFloat","amount","Object","keys","categories","colors","map","data","labels","datasets","values","backgroundColor","c","borderColor","borderWidth","options","responsive","maintainAspectRatio","layout","padding","left","right","top","bottom","plugins","datalabels","formatter","value","context","total","dataset","val","percentage","toFixed","Math","round","color","font","weight","size","textAlign","legend","position","align","boxWidth","generateLabels","label","i","formattedValue","text","fillStyle","strokeStyle","lineWidth","hidden","handleIncomeSubmit","e","preventDefault","newIncome","id","now","description","addTransaction","handleExpenseSubmit","finalCategory","newExpense","paid","togglePaid","monthTransaction","find","prev","updated","_objectSpread","setItem","stringify","requestAnimationFrame","update","toggleSkipped","deleteTransaction","transactionId","fromMonth","activeElement","HTMLElement","blur","setTimeout","window","confirm","originalTransactionId","deleteAll","updatedMonthsTransactions","forEach","year","month","Number","updatedTransactions","filterTransactions","transactionDate","recurringTransactions","combined","self","findIndex","calculateTotals","income","sum","expenses","saveEdit","_allMonthsTransaction","editingValuesWithParsedAmount","isMonthTransaction","some","editFuture","startEditing","toString","cancelEdit","getDayWithSuffix","day","getDate","getMonthlyTrends","last6Months","Array","from","_","d","setMonth","reverse","generateRecurringDates","startDate","endDate","dates","currentDate","end","setHours","log","push","originalDay","setDate","updateTransactions","newTransactions","updateMonthlyTransactions","newMonthlyTransactions","endOfYear","isRecurring","transactionWithPaid","undefined","recurringDates","transactionsByMonth","recurringTransaction","random","entries","_ref","updatedMonthly","calculateSummary","paidIncome","balance","updateCreditCards","newCards","calculatePaymentSummary","remaining","progress","sortTransactions","sort","a","b","localeCompare","applyFilters","matchesCategory","matchesStatus","matchesSearch","toLowerCase","includes","toggleForm","formName","className","children","onClick","title","variant","Item","Link","active","onChange","target","Header","in","Body","onSubmit","placeholder","required","step","summary","role","style","width","checked","htmlFor","onUpdateTransaction","onDeleteTransaction"],"sources":["/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext, useRef } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n} from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  ChartDataLabels\n);\n\n// Create theme context\nconst ThemeContext = createContext();\n\n// Add this before the App component.\nexport const useTheme = () => useContext(ThemeContext);\n\n// Add this helper function at the top of your App component, before the useEffect hooks\nconst generateColor = (index) => {\n  // Predefined colors for known categories\n  const categoryColors = {\n    'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n    'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n    'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n  };\n\n  // Color palette for additional categories\n  const colorPalette = [\n    { bg: 'rgba(75, 192, 192, 0.8)', border: 'rgba(75, 192, 192, 1)' },\n    { bg: 'rgba(153, 102, 255, 0.8)', border: 'rgba(153, 102, 255, 1)' },\n    { bg: 'rgba(255, 159, 64, 0.8)', border: 'rgba(255, 159, 64, 1)' },\n    { bg: 'rgba(231, 233, 237, 0.8)', border: 'rgba(231, 233, 237, 1)' },\n    { bg: 'rgba(102, 204, 153, 0.8)', border: 'rgba(102, 204, 153, 1)' },\n    { bg: 'rgba(255, 99, 255, 0.8)', border: 'rgba(255, 99, 255, 1)' }\n  ];\n\n  return colorPalette[index % colorPalette.length];\n};\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n  const [creditCards, setCreditCards] = useState([]);\n  const [customCategory, setCustomCategory] = useState('');\n  const [isExpenseListOpen, setIsExpenseListOpen] = useState(false);\n  const [sortConfig, setSortConfig] = useState({ key: 'dueDate', direction: 'asc' });\n  const [filterConfig, setFilterConfig] = useState({\n    category: 'all',\n    status: 'all',\n    search: ''\n  });\n  const [activeForm, setActiveForm] = useState(null);\n  const [categoryColors, setCategoryColors] = useState({});\n\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Add this ref to track chart instance\n  const chartRef = useRef(null);\n\n  // Simplify the data loading useEffect\n  useEffect(() => {\n    const loadData = () => {\n      try {\n        const savedTransactions = localStorage.getItem('transactions');\n        const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n        const savedCreditCards = localStorage.getItem('creditCards');\n\n        if (savedTransactions) {\n          setTransactions(JSON.parse(savedTransactions));\n        }\n        if (savedMonthsTransactions) {\n          setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n        }\n        if (savedCreditCards) {\n          setCreditCards(JSON.parse(savedCreditCards));\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Update the chart useEffect\n  useEffect(() => {\n    // Always destroy existing chart instance first\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n\n    const canvas = document.getElementById('expenseChart');\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && \n             tDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions]\n      .filter(t => t.type === 'expense' && !t.skipped);\n\n    const categoryTotals = allTransactions.reduce((acc, transaction) => {\n      if (!acc[transaction.category]) {\n        acc[transaction.category] = 0;\n      }\n      acc[transaction.category] += parseFloat(transaction.amount) || 0;\n      return acc;\n    }, {});\n\n    if (Object.keys(categoryTotals).length > 0) {\n      const categories = Object.keys(categoryTotals);\n      const colors = categories.map((category, index) => {\n        const categoryColors = {\n          'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n          'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n          'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n        };\n\n        return categoryColors[category] || generateColor(index);\n      });\n\n      // Create new chart and store in ref\n      chartRef.current = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: categories,\n          datasets: [{\n            data: Object.values(categoryTotals),\n            backgroundColor: colors.map(c => c.bg),\n            borderColor: colors.map(c => c.border),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 100,\n              right: 30,\n              top: 20,\n              bottom: 20\n            }\n          },\n          plugins: {\n            datalabels: {\n              formatter: (value, context) => {\n                const total = context.dataset.data.reduce((acc, val) => acc + val, 0);\n                const percentage = ((value / total) * 100).toFixed(1);\n                \n                if (percentage < 10) {\n                  return null;\n                }\n                \n                if (value >= 1000000) {\n                  return `$${(value / 1000000).toFixed(1)}M`;\n                } else if (value >= 1000) {\n                  return `$${Math.round(value / 1000)}k`;\n                }\n                return `$${value.toFixed(0)}`;\n              },\n              color: '#FFFFFF',\n              font: {\n                weight: 'bold',\n                size: 12\n              },\n              textAlign: 'center',\n            },\n            legend: {\n              position: 'left',\n              align: 'center',\n              labels: {\n                color: isDarkMode ? '#ffffff' : '#666666',\n                font: {\n                  size: 11\n                },\n                padding: 8,\n                boxWidth: 12,\n                generateLabels: (chart) => {\n                  const data = chart.data;\n                  if (data.labels.length && data.datasets.length) {\n                    return data.labels.map((label, i) => {\n                      const value = data.datasets[0].data[i];\n                      let formattedValue;\n                      if (value >= 1000000) {\n                        formattedValue = `$${(value / 1000000).toFixed(1)}M`;\n                      } else if (value >= 1000) {\n                        formattedValue = `$${Math.round(value / 1000)}k`;\n                      } else {\n                        formattedValue = `$${value.toFixed(0)}`;\n                      }\n                      return {\n                        text: `${label}: ${formattedValue}`,\n                        fillStyle: data.datasets[0].backgroundColor[i],\n                        strokeStyle: data.datasets[0].borderColor[i],\n                        lineWidth: 1,\n                        hidden: false,\n                        index: i\n                      };\n                    });\n                  }\n                  return [];\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n        chartRef.current = null;\n      }\n    };\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = (e) => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      return; // Just return if validation fails\n    }\n\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly',\n      dueDate: new Date().toISOString().split('T')[0]\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n    \n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    setIsIncomeOpen(false); // Automatically close the form after submission\n  };\n\n  const handleExpenseSubmit = (e) => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      return;\n    }\n\n    // Use custom category if \"Other\" is selected\n    const finalCategory = category === 'Other' ? customCategory : category;\n\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category: finalCategory,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    addTransaction(newExpense, 'expense');\n    \n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    setCategory('Bills'); // Reset to default category\n    setCustomCategory(''); // Clear custom category\n    setIsExpenseOpen(false);\n  };\n\n  const togglePaid = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n\n    try {\n      if (monthTransaction) {\n        setAllMonthsTransactions(prev => {\n          const updated = {\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n            )\n          };\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updated));\n          return updated;\n        });\n      } else {\n        setTransactions(prev => {\n          const updated = prev.map(t =>\n            t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n          );\n          localStorage.setItem('transactions', JSON.stringify(updated));\n          return updated;\n        });\n      }\n\n      // If chart exists, update it safely\n      if (chartRef.current) {\n        requestAnimationFrame(() => {\n          try {\n            chartRef.current.update('none');\n          } catch (error) {\n            console.error('Error updating chart in togglePaid:', error);\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in togglePaid:', error);\n    }\n  };\n\n  const toggleSkipped = (id) => {\n    setTransactions(prev => {\n      const updated = prev.map(t => \n        t.id === id ? { ...t, skipped: !t.skipped, paid: false } : t\n      );\n      localStorage.setItem('transactions', JSON.stringify(updated));\n      return updated;\n    });\n  };\n\n  const deleteTransaction = (transactionId, fromMonth) => {\n    // First, blur (unfocus) any active element to dismiss the keyboard\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n\n    // Add a small delay to ensure keyboard is dismissed before showing confirm dialog\n    setTimeout(() => {\n      if (window.confirm('Delete this transaction?')) {\n        const transaction = transactions.find(t => t.id === transactionId);\n        \n        if (!transaction) {\n          const monthKey = `${currentYear}-${fromMonth}`;\n          const monthTransactions = allMonthsTransactions[monthKey] || [];\n          const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n          \n          if (monthTransaction?.originalTransactionId) {\n            // Add another small delay for the second confirmation if needed\n            setTimeout(() => {\n              const deleteAll = window.confirm(\n                'Delete all future occurrences of this recurring transaction?'\n              );\n              \n              if (deleteAll) {\n                const updatedMonthsTransactions = { ...allMonthsTransactions };\n                Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n                  const [year, month] = monthKey.split('-').map(Number);\n                  if (year > currentYear || (year === currentYear && month >= fromMonth)) {\n                    updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey]\n                      .filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n                  }\n                });\n                setAllMonthsTransactions(updatedMonthsTransactions);\n                localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n              } else {\n                const updatedMonthsTransactions = {\n                  ...allMonthsTransactions,\n                  [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n                };\n                setAllMonthsTransactions(updatedMonthsTransactions);\n                localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n              }\n            }, 100);\n          } else {\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions,\n              [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n            };\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          }\n        } else {\n          const updatedTransactions = transactions.filter(t => t.id !== transactionId);\n          setTransactions(updatedTransactions);\n          localStorage.setItem('transactions', JSON.stringify(updatedTransactions));\n        }\n      }\n    }, 100);\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = (type) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && \n             transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n    \n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) =>\n      index === self.findIndex(t => t.id === transaction.id)\n    );\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && \n             tDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n\n    return {\n      income: allTransactions\n        .filter(t => t.type === 'income')\n        .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0),\n      expenses: allTransactions\n        .filter(t => t.type === 'expense' && !t.skipped)\n        .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0),\n      paid: allTransactions\n        .filter(t => t.paid)\n        .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = (id) => {\n    // First, blur any active element to dismiss keyboard\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n\n    // Parse amount before saving\n    const editingValuesWithParsedAmount = {\n      ...editingValues,\n      amount: parseFloat(editingValues.amount) || 0\n    };\n\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = allMonthsTransactions[monthKey]?.some(t => t.id === id);\n    \n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        setTimeout(() => {\n          const editFuture = window.confirm(\n            'Do you want to apply these changes to all future occurrences?'\n          );\n          \n          if (editFuture) {\n            // Update all future occurrences with parsed amount\n            const updatedMonthsTransactions = { ...allMonthsTransactions };\n            Object.keys(updatedMonthsTransactions).forEach(key => {\n              const [year, month] = key.split('-').map(Number);\n              if (year > currentYear || (year === currentYear && month >= currentMonth)) {\n                updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t =>\n                  t.originalTransactionId === editingValues.originalTransactionId\n                    ? { ...t, ...editingValuesWithParsedAmount }\n                    : t\n                );\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          } else {\n            // Update only this occurrence with parsed amount\n            setAllMonthsTransactions(prev => ({\n              ...prev,\n              [monthKey]: prev[monthKey].map(t =>\n                t.id === id ? { ...t, ...editingValuesWithParsedAmount } : t\n              )\n            }));\n          }\n          setEditingId(null);\n          setEditingValues({});\n        }, 100);\n      } else {\n        // Update one-time transaction with parsed amount\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t =>\n            t.id === id ? { ...t, ...editingValuesWithParsedAmount } : t\n          )\n        }));\n        setEditingId(null);\n        setEditingValues({});\n      }\n    } else {\n      // Handle regular transactions with parsed amount\n      setTransactions(transactions.map(t => \n        t.id === id ? { ...t, ...editingValuesWithParsedAmount } : t\n      ));\n      setEditingId(null);\n      setEditingValues({});\n    }\n  };\n\n  // Update the startEditing function\n  const startEditing = (transaction) => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString() // Keep as string during editing\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = (date) => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1: return day + \"st\";\n      case 2: return day + \"nd\";\n      case 3: return day + \"rd\";\n      default: return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({ length: 6 }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'expense' && \n                   tDate.getMonth() === date.getMonth() &&\n                   !t.skipped;\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'income' && \n                   tDate.getMonth() === date.getMonth();\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n      \n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n      \n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Add these wrapper functions\n  const updateTransactions = (newTransactions) => {\n    setTransactions(newTransactions);\n    localStorage.setItem('transactions', JSON.stringify(newTransactions));\n  };\n\n  const updateMonthlyTransactions = (newMonthlyTransactions) => {\n    setAllMonthsTransactions(newMonthlyTransactions);\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(newMonthlyTransactions));\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n\n    // Ensure paid property is set for expenses\n    const transactionWithPaid = {\n      ...transaction,\n      paid: type === 'expense' ? false : undefined\n    };\n\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(\n        startDate,\n        transaction.frequency,\n        endOfYear\n      );\n\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        // Only add transactions for current and future months\n        if (date >= new Date(currentYear, currentMonth, 1)) {\n          const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n          if (!transactionsByMonth[monthKey]) {\n            transactionsByMonth[monthKey] = [];\n          }\n\n          const recurringTransaction = {\n            ...transactionWithPaid,\n            id: Date.now() + Math.random(),\n            dueDate: date.toISOString().split('T')[0],\n            originalTransactionId: transaction.id,\n            paid: type === 'expense' ? false : undefined\n          };\n\n          transactionsByMonth[monthKey].push(recurringTransaction);\n        }\n      });\n\n      // Update allMonthsTransactions\n      const updatedMonthsTransactions = { ...allMonthsTransactions };\n      Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n        if (!updatedMonthsTransactions[monthKey]) {\n          updatedMonthsTransactions[monthKey] = [];\n        }\n        updatedMonthsTransactions[monthKey] = [\n          ...updatedMonthsTransactions[monthKey],\n          ...transactions\n        ];\n      });\n\n      setAllMonthsTransactions(updatedMonthsTransactions);\n      localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n\n    } else {\n      // Handle one-time transactions\n      const transactionDate = new Date(transaction.dueDate);\n      const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n      \n      const updatedMonthly = {\n        ...allMonthsTransactions,\n        [monthKey]: [\n          ...(allMonthsTransactions[monthKey] || []),\n          { ...transactionWithPaid, paid: false }\n        ]\n      };\n\n      updateMonthlyTransactions(updatedMonthly);\n    }\n  };\n\n  // Update the calculateSummary function\n  const calculateSummary = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && \n             tDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n\n    const income = allTransactions\n      .filter(t => t.type === 'income')\n      .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0);\n\n    const paidIncome = allTransactions\n      .filter(t => t.type === 'income' && t.paid)\n      .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0);\n\n    const expenses = allTransactions\n      .filter(t => t.type === 'expense')\n      .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0);\n\n    const balance = paidIncome - expenses;\n\n    return {\n      income: parseFloat(income) || 0,\n      paidIncome: parseFloat(paidIncome) || 0,\n      expenses: parseFloat(expenses) || 0,\n      balance: parseFloat(balance) || 0\n    };\n  };\n\n  // Add this function near the top of App component\n  const updateCreditCards = (newCards) => {\n    setCreditCards(newCards);\n    localStorage.setItem('creditCards', JSON.stringify(newCards));\n  };\n\n  // Add function to calculate payment summary\n  const calculatePaymentSummary = () => {\n    const expenses = filterTransactions('expense');\n    const total = expenses.reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0);\n    const paid = expenses.reduce((sum, t) => t.paid ? sum + (parseFloat(t.amount) || 0) : sum, 0);\n    const remaining = total - paid;\n    \n    return {\n      total: total.toFixed(2),\n      paid: paid.toFixed(2),\n      remaining: remaining.toFixed(2),\n      progress: total > 0 ? (paid / total * 100).toFixed(1) : '0'\n    };\n  };\n\n  // Add this sorting function\n  const sortTransactions = (transactions) => {\n    return [...transactions].sort((a, b) => {\n      if (sortConfig.key === 'amount') {\n        return sortConfig.direction === 'asc' \n          ? parseFloat(a.amount) - parseFloat(b.amount) \n          : parseFloat(b.amount) - parseFloat(a.amount);\n      }\n      if (sortConfig.key === 'dueDate') {\n        return sortConfig.direction === 'asc'\n          ? new Date(a.dueDate) - new Date(b.dueDate)\n          : new Date(b.dueDate) - new Date(a.dueDate);\n      }\n      if (sortConfig.key === 'description') {\n        return sortConfig.direction === 'asc'\n          ? a.description.localeCompare(b.description)\n          : b.description.localeCompare(a.description);\n      }\n      return 0;\n    });\n  };\n\n  // Rename this function to applyFilters\n  const applyFilters = (transactions) => {\n    return transactions.filter(transaction => {\n      const matchesCategory = filterConfig.category === 'all' || transaction.category === filterConfig.category;\n      const matchesStatus = filterConfig.status === 'all' \n        || (filterConfig.status === 'paid' && transaction.paid)\n        || (filterConfig.status === 'unpaid' && !transaction.paid);\n      const matchesSearch = transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());\n      \n      return matchesCategory && matchesStatus && matchesSearch;\n    });\n  };\n\n  // Add this function to handle form toggling\n  const toggleForm = (formName) => {\n    if (activeForm === formName) {\n      setActiveForm(null);\n      setIsIncomeOpen(false);\n      setIsExpenseOpen(false);\n    } else {\n      setActiveForm(formName);\n      if (formName === 'income') {\n        setIsIncomeOpen(true);\n        setIsExpenseOpen(false);\n      } else {\n        setIsExpenseOpen(true);\n        setIsIncomeOpen(false);\n      }\n    }\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      <header className=\"finance-header\">\n        <div className=\"theme-toggle\">\n          <button \n            onClick={() => setIsDarkMode(!isDarkMode)}\n            className=\"theme-toggle-btn\"\n            title={isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n          >\n            <i className={`fas fa-${isDarkMode ? 'sun' : 'moon'}`}></i>\n          </button>\n        </div>\n        <h1 className=\"gradient-text\">Finance Tracker</h1>\n        \n        {/* Update the navigation section */}\n        <div className=\"app-navigation\">\n          {/* Main Tabs */}\n          <Nav variant=\"tabs\" className=\"main-nav\">\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'budget'}\n                onClick={() => setActiveTab('budget')}\n              >\n                <i className=\"fas fa-wallet me-2\"></i>\n                Budget Tracker\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'credit'}\n                onClick={() => setActiveTab('credit')}\n              >\n                <i className=\"fas fa-credit-card me-2\"></i>\n                Credit Cards\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n\n          {/* Month Navigation - Only show for budget tab */}\n          {activeTab === 'budget' && (\n            <div className=\"month-navigation\">\n              <button \n                className=\"nav-btn prev\"\n                onClick={() => {\n                  if (currentMonth === 0) {\n                    setCurrentYear(prev => prev - 1);\n                    setCurrentMonth(11);\n                  } else {\n                    setCurrentMonth(prev => prev - 1);\n                  }\n                }}\n                aria-label=\"Previous month\"\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n              \n              <div className=\"month-select\">\n                <select \n                  value={currentMonth}\n                  onChange={(e) => setCurrentMonth(Number(e.target.value))}\n                  className=\"month-dropdown\"\n                  aria-label=\"Select month\"\n                >\n                  {months.map((month, index) => (\n                    <option key={index} value={index}>{month}</option>\n                  ))}\n                </select>\n                <select \n                  value={currentYear}\n                  onChange={(e) => setCurrentYear(Number(e.target.value))}\n                  className=\"year-dropdown\"\n                  aria-label=\"Select year\"\n                >\n                  {Array.from({ length: 5 }, (_, i) => (\n                    <option key={i} value={currentYear - 2 + i}>\n                      {currentYear - 2 + i}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <button \n                className=\"nav-btn next\"\n                onClick={() => {\n                  if (currentMonth === 11) {\n                    setCurrentYear(prev => prev + 1);\n                    setCurrentMonth(0);\n                  } else {\n                    setCurrentMonth(prev => prev + 1);\n                  }\n                }}\n                aria-label=\"Next month\"\n              >\n                <i className=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </header>\n\n      {/* Conditional Rendering based on active tab */}\n      {activeTab === 'budget' ? (\n        <>\n          {/* Forms Section - Side by Side */}\n          <div className=\"row\">\n            {/* Expense Form */}\n            <div className=\"col-md-8 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-danger text-white\">\n                  <Button\n                    onClick={() => toggleForm('expense')}\n                    aria-controls=\"expenseForm\"\n                    aria-expanded={isExpenseOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Expenses</h3>\n                        <i className={`fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                {/* Add backdrop for mobile */}\n                <div \n                  className={`mobile-form-backdrop ${isExpenseOpen ? 'show' : ''}`}\n                  onClick={() => toggleForm('expense')}\n                />\n                <Collapse in={isExpenseOpen}>\n                  <div id=\"expenseForm\">\n                    <Card.Body>\n                      <form onSubmit={handleExpenseSubmit} className=\"transaction-form\">\n                        <input\n                          type=\"text\"\n                          value={expenseDescription}\n                          onChange={(e) => setExpenseDescription(e.target.value)}\n                          placeholder=\"Expense Item\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={expenseAmount}\n                          onChange={(e) => setExpenseAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={category} \n                          onChange={(e) => setCategory(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Category</option>\n                          <option value=\"Bills\">Bills</option>\n                          <option value=\"Savings\">Savings</option>\n                          <option value=\"Personal\">Personal</option>\n                          <option value=\"Other\">Other...</option>\n                        </select>\n                        {/* Show custom category input when \"Other\" is selected */}\n                        {category === 'Other' && (\n                          <input\n                            type=\"text\"\n                            value={customCategory}\n                            onChange={(e) => setCustomCategory(e.target.value)}\n                            placeholder=\"Enter custom category\"\n                            className=\"form-control mt-2\"\n                            required\n                          />\n                        )}\n                        <input\n                          type=\"date\"\n                          value={dueDate}\n                          onChange={(e) => setDueDate(e.target.value)}\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={frequency} \n                          onChange={(e) => setFrequency(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Frequency</option>\n                          <option value=\"Monthly\">Monthly</option>\n                          <option value=\"Bi-Weekly\">Bi-Weekly</option>\n                          <option value=\"Weekly\">Weekly</option>\n                        </select>\n                        <button type=\"submit\" className=\"btn btn-danger\">\n                          Add Expense\n                        </button>\n                      </form>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n\n            {/* Income Form */}\n            <div className=\"col-md-4 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-success text-white\">\n                  <Button\n                    onClick={() => toggleForm('income')}\n                    aria-controls=\"incomeSection\"\n                    aria-expanded={isIncomeOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Income</h3>\n                        <i className={`fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                {/* Add backdrop for mobile */}\n                <div \n                  className={`mobile-form-backdrop ${isIncomeOpen ? 'show' : ''}`}\n                  onClick={() => toggleForm('income')}\n                />\n                <Collapse in={isIncomeOpen}>\n                  <div id=\"incomeSection\">\n                    <Card.Body>\n                      <form onSubmit={handleIncomeSubmit} className=\"transaction-form mb-4\">\n                        <input\n                          type=\"text\"\n                          value={incomeDescription}\n                          onChange={(e) => setIncomeDescription(e.target.value)}\n                          placeholder=\"Income Source\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={incomeAmount}\n                          onChange={(e) => setIncomeAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <button type=\"submit\" className=\"btn btn-success\">\n                          Add Income\n                        </button>\n                      </form>\n                      <div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <thead>\n                            <tr>\n                              <th>Description</th>\n                              <th>Amount</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {sortTransactions(applyFilters(filterTransactions('income'))).map(transaction => (\n                              <tr key={transaction.id}>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"text\"\n                                      value={editingValues.description || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        description: e.target.value\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                    />\n                                  ) : (\n                                    transaction.description\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"number\"\n                                      value={editingValues.amount || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        amount: e.target.value\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                      step=\"0.01\"\n                                    />\n                                  ) : (\n                                    <span className=\"text-success\">${parseFloat(transaction.amount).toFixed(2)}</span>\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <>\n                                      <button\n                                        onClick={() => saveEdit(transaction.id)}\n                                        className=\"btn-icon\"\n                                        title=\"Save changes\"\n                                      >\n                                        <i className=\"fas fa-save\"></i>\n                                        <span>Save</span>\n                                      </button>\n                                      <button\n                                        onClick={cancelEdit}\n                                        className=\"btn-icon delete\"\n                                        title=\"Cancel editing\"\n                                      >\n                                        <i className=\"fas fa-times\"></i>\n                                        <span>Cancel</span>\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <div className=\"expense-actions\">\n                                      <button\n                                        onClick={() => startEditing(transaction)}\n                                        className=\"btn-icon\"\n                                        title=\"Edit this entry\"\n                                      >\n                                        <i className=\"fas fa-edit\"></i>\n                                        <span>Edit</span>\n                                      </button>\n                                      <button\n                                        onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                        className=\"btn-icon delete\"\n                                        title=\"Delete this entry\"\n                                      >\n                                        <i className=\"fas fa-trash\"></i>\n                                        <span>Delete</span>\n                                      </button>\n                                    </div>\n                                  )}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n          </div>\n\n          {/* Chart Section - Moved above Budget & Expenses */}\n          <div className=\"row mb-4\">\n            <div className=\"col-12\">\n              <div className=\"chart-section\">\n                <h3>Expense Breakdown</h3>\n                <div className=\"chart-container\">\n                  <canvas id=\"expenseChart\"></canvas>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Budget & Expenses Card */}\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card budget-expenses\">\n                <div className=\"card-header bg-danger text-white\">\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <h3 className=\"mb-0\">Budget & Expenses</h3>\n                    <button \n                      className=\"btn btn-link text-white\" \n                      onClick={() => setIsExpenseListOpen(!isExpenseListOpen)}\n                    >\n                      <i className={`fas fa-chevron-${isExpenseListOpen ? 'up' : 'down'}`}></i>\n                    </button>\n                  </div>\n                </div>\n                \n                <div className=\"card-body\">\n                  {/* Budget Summary Section */}\n                  <div className=\"budget-summary mb-3\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-wallet me-2\"></i>\n                          <span className=\"label\">Monthly Income:</span>\n                          <span className=\"value text-success\">${calculateTotals().income.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-shopping-cart me-2\"></i>\n                          <span className=\"label\">Total Expenses:</span>\n                          <span className=\"value text-danger\">${calculateTotals().expenses.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-piggy-bank me-2\"></i>\n                          <span className=\"label\">Remaining:</span>\n                          <span className=\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\">\n                            ${(calculateTotals().income - calculateTotals().expenses).toFixed(2)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"payment-summary mt-3\">\n                      {(() => {\n                        const summary = calculatePaymentSummary();\n                        return (\n                          <>\n                            <div className=\"progress mb-2\">\n                              <div \n                                className=\"progress-bar bg-success\" \n                                role=\"progressbar\" \n                                style={{width: `${summary.progress}%`}}\n                                aria-valuenow={summary.progress} \n                                aria-valuemin=\"0\" \n                                aria-valuemax=\"100\"\n                              >\n                                {summary.progress}%\n                              </div>\n                            </div>\n                            <div className=\"summary-grid\">\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Paid:</span>\n                                <span className=\"value text-success\">${summary.paid}</span>\n                              </div>\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Remaining:</span>\n                                <span className=\"value text-danger\">${summary.remaining}</span>\n                              </div>\n                            </div>\n                          </>\n                        );\n                      })()}\n                    </div>\n                  </div>\n\n                  {/* Expense List Section */}\n                  <Collapse in={isExpenseListOpen}>\n                    <div>\n                      {/* Add Filter Controls */}\n                      <div className=\"filters-section mb-4\">\n                        <div className=\"row g-3\">\n                          <div className=\"col-md-3\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Search expenses...\"\n                              value={filterConfig.search}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                search: e.target.value\n                              }))}\n                            />\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.category}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                category: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Categories</option>\n                              <option value=\"Bills\">Bills</option>\n                              <option value=\"Savings\">Savings</option>\n                              <option value=\"Personal\">Personal</option>\n                              <option value=\"Other\">Other</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.status}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                status: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Status</option>\n                              <option value=\"paid\">Paid</option>\n                              <option value=\"unpaid\">Unpaid</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={`${sortConfig.key}-${sortConfig.direction}`}\n                              onChange={(e) => {\n                                const [key, direction] = e.target.value.split('-');\n                                setSortConfig({ key, direction });\n                              }}\n                            >\n                              <option value=\"dueDate-asc\">Date (Earliest First)</option>\n                              <option value=\"dueDate-desc\">Date (Latest First)</option>\n                              <option value=\"amount-asc\">Amount (Low to High)</option>\n                              <option value=\"amount-desc\">Amount (High to Low)</option>\n                              <option value=\"description-asc\">Name (A to Z)</option>\n                              <option value=\"description-desc\">Name (Z to A)</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"table-responsive\">\n                        <div className=\"expense-list\">\n                          {sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction => (\n                            <div key={transaction.id} className={`expense-item ${transaction.paid ? 'paid' : ''}`}>\n                              <div className=\"expense-main\">\n                                <div className=\"expense-checkbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    checked={transaction.paid || false}\n                                    onChange={() => togglePaid(transaction.id)}\n                                    id={`paid-${transaction.id}`}\n                                  />\n                                  <label className=\"checkmark\" htmlFor={`paid-${transaction.id}`}></label>\n                                </div>\n                                <div className=\"expense-content\">\n                                  {editingId === transaction.id ? (\n                                    // Edit mode\n                                    <div className=\"expense-edit-form\">\n                                      <input\n                                        type=\"text\"\n                                        value={editingValues.description || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          description: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        placeholder=\"Description\"\n                                      />\n                                      <input\n                                        type=\"number\"\n                                        value={editingValues.amount || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          amount: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        step=\"0.01\"\n                                        placeholder=\"Amount\"\n                                      />\n                                      <select\n                                        value={editingValues.category || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          category: e.target.value\n                                        })}\n                                        className=\"form-select form-select-sm mb-2\"\n                                      >\n                                        <option value=\"Bills\">Bills</option>\n                                        <option value=\"Savings\">Savings</option>\n                                        <option value=\"Personal\">Personal</option>\n                                        <option value=\"Other\">Other</option>\n                                      </select>\n                                      <input\n                                        type=\"date\"\n                                        value={editingValues.dueDate || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          dueDate: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                      />\n                                      <div className=\"edit-actions\">\n                                        <button\n                                          onClick={() => saveEdit(transaction.id)}\n                                          className=\"btn btn-success btn-sm me-2\"\n                                        >\n                                          <i className=\"fas fa-save\"></i> Save\n                                        </button>\n                                        <button\n                                          onClick={cancelEdit}\n                                          className=\"btn btn-secondary btn-sm\"\n                                        >\n                                          <i className=\"fas fa-times\"></i> Cancel\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    // Display mode\n                                    <>\n                                      <div className=\"expense-primary\">\n                                        <span className=\"expense-title\">{transaction.description}</span>\n                                        <span className=\"expense-amount\">${parseFloat(transaction.amount).toFixed(2)}</span>\n                                      </div>\n                                      <div className=\"expense-secondary\">\n                                        {transaction.type === 'expense' && (\n                                          <span className=\"expense-tag\">{transaction.category}</span>\n                                        )}\n                                        <span className=\"expense-date\">{getDayWithSuffix(transaction.dueDate)}</span>\n                                        <span className=\"expense-frequency\">{transaction.frequency}</span>\n                                      </div>\n                                    </>\n                                  )}\n                                </div>\n                                {!editingId && (\n                                  <div className=\"expense-actions\">\n                                    <button\n                                      onClick={() => startEditing(transaction)}\n                                      className=\"btn-icon\"\n                                      title=\"Edit\"\n                                    >\n                                      <i className=\"fas fa-edit\"></i>\n                                      <span>Edit</span>\n                                    </button>\n                                    <button\n                                      onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                      className=\"btn-icon delete\"\n                                      title=\"Delete\"\n                                    >\n                                      <i className=\"fas fa-trash\"></i>\n                                      <span>Delete</span>\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </Collapse>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Render current month's page */}\n          <MonthPage\n            month={currentMonth}\n            year={currentYear}\n            transactions={allMonthsTransactions[`${currentYear}-${currentMonth}`] || []}\n            onUpdateTransaction={addTransaction}\n            onDeleteTransaction={deleteTransaction}\n          />\n        </>\n      ) : (\n        <CreditCardTracker \n          creditCards={creditCards} \n          setCreditCards={updateCreditCards}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}