{"ast":null,"code":"import _objectSpread from\"/Users/machome/Documents/GitHub/Finance_Tracker-/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/* eslint-disable no-unused-vars */// src/App.js\nimport React,{useState,useEffect,createContext,useContext}from'react';import'./App.css';import Chart from'chart.js/auto';import ChartDataLabels from'chartjs-plugin-datalabels';import{Collapse,Button,Card,Nav}from'react-bootstrap';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,ArcElement}from'chart.js';import MonthPage from'./components/MonthPage';import CreditCardTracker from'./components/CreditCardTracker';// Register ChartJS components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend,ArcElement,ChartDataLabels);// Create theme context\nconst ThemeContext=/*#__PURE__*/createContext();// Add this before the App component.\nexport const useTheme=()=>useContext(ThemeContext);function App(){const[transactions,setTransactions]=useState([]);const[incomeDescription,setIncomeDescription]=useState('');const[incomeAmount,setIncomeAmount]=useState('');const[expenseDescription,setExpenseDescription]=useState('');const[expenseAmount,setExpenseAmount]=useState('');const[category,setCategory]=useState('Bills');const[dueDate,setDueDate]=useState(new Date().toISOString().split('T')[0]);const[frequency,setFrequency]=useState('Monthly');const[currentMonth,setCurrentMonth]=useState(new Date().getMonth());const[chart,setChart]=useState(null);const[isIncomeOpen,setIsIncomeOpen]=useState(false);const[isIncomeListOpen,setIsIncomeListOpen]=useState(true);const[isExpenseOpen,setIsExpenseOpen]=useState(false);const[editingId,setEditingId]=useState(null);const[editingValues,setEditingValues]=useState({});const[isDarkMode,setIsDarkMode]=useState(false);const[currentYear,setCurrentYear]=useState(new Date().getFullYear());const[allMonthsTransactions,setAllMonthsTransactions]=useState({});const[activeTab,setActiveTab]=useState('budget');const[creditCards,setCreditCards]=useState([]);const[customCategory,setCustomCategory]=useState('');const[isExpenseListOpen,setIsExpenseListOpen]=useState(false);const[sortConfig,setSortConfig]=useState({key:'dueDate',direction:'asc'});const[filterConfig,setFilterConfig]=useState({category:'all',status:'all',search:''});const[activeForm,setActiveForm]=useState(null);const[categoryColors,setCategoryColors]=useState({});const months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];// Load transactions from localStorage on component mount\nuseEffect(()=>{// Load all data on mount\nconst loadData=()=>{try{const savedTransactions=localStorage.getItem('transactions');const savedMonthsTransactions=localStorage.getItem('allMonthsTransactions');const savedCreditCards=localStorage.getItem('creditCards');if(savedTransactions){setTransactions(JSON.parse(savedTransactions));}if(savedMonthsTransactions){setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));}if(savedCreditCards){setCreditCards(JSON.parse(savedCreditCards));}}catch(error){console.error('Error loading data:',error);}};loadData();},[]);// Only run on mount\n// Clean up chart on component unmount\nuseEffect(()=>{return()=>{if(chart){chart.destroy();setChart(null);}};},[chart]);// Update the generateColor function to use cached colors\nconst generateColor=(category,index)=>{if(categoryColors[category]){return categoryColors[category];}// Predefined colors for known categories\nconst defaultColors={'Bills':{bg:'rgba(255, 99, 132, 0.8)',border:'rgba(255, 99, 132, 1)'},'Savings':{bg:'rgba(54, 162, 235, 0.8)',border:'rgba(54, 162, 235, 1)'},'Personal':{bg:'rgba(255, 206, 86, 0.8)',border:'rgba(255, 206, 86, 1)'}};if(defaultColors[category]){setCategoryColors(prev=>_objectSpread(_objectSpread({},prev),{},{[category]:defaultColors[category]}));return defaultColors[category];}// Fixed color palette for additional categories\nconst colorPalette=[{bg:'rgba(75, 192, 192, 0.8)',border:'rgba(75, 192, 192, 1)'},{bg:'rgba(153, 102, 255, 0.8)',border:'rgba(153, 102, 255, 1)'},{bg:'rgba(255, 159, 64, 0.8)',border:'rgba(255, 159, 64, 1)'},{bg:'rgba(231, 233, 237, 0.8)',border:'rgba(231, 233, 237, 1)'},{bg:'rgba(102, 204, 153, 0.8)',border:'rgba(102, 204, 153, 1)'}];const newColor=colorPalette[index%colorPalette.length];setCategoryColors(prev=>_objectSpread(_objectSpread({},prev),{},{[category]:newColor}));return newColor;};// Update the chart useEffect\nuseEffect(()=>{const ctx=document.getElementById('expenseChart');if(!ctx)return;// Destroy existing chart if it exists\nif(chart){chart.destroy();}const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const tDate=new Date(t.date);return tDate.getMonth()===currentMonth&&tDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions].filter(t=>t.type==='expense'&&!t.skipped);const categoryTotals=allTransactions.reduce((acc,transaction)=>{const category=transaction.category||'Other';if(!acc[category]){acc[category]=0;}acc[category]+=parseFloat(transaction.amount);return acc;},{});if(Object.keys(categoryTotals).length>0){const categories=Object.keys(categoryTotals);const colors=categories.map((category,index)=>generateColor(category,index));const newChart=new Chart(ctx,{type:'pie',data:{labels:categories,datasets:[{data:Object.values(categoryTotals),backgroundColor:colors.map(c=>c.bg),borderColor:colors.map(c=>c.border),borderWidth:1}]},options:{responsive:true,maintainAspectRatio:false,animation:{duration:300},plugins:{datalabels:{color:'#ffffff',font:{weight:'bold',size:window.innerWidth<768?9:14,family:'-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial'},formatter:(value,context)=>{const total=context.dataset.data.reduce((acc,val)=>acc+val,0);const percentage=(value/total*100).toFixed(1);if(percentage<3)return'';return\"$\".concat(value.toFixed(0));},anchor:'center',align:'center',offset:0},legend:{position:window.innerWidth<768?'bottom':'right',align:'start',maxWidth:window.innerWidth<768?'100%':200,maxHeight:window.innerWidth<768?150:undefined,labels:{color:'#ffffff',boxWidth:window.innerWidth<768?12:20,padding:window.innerWidth<768?8:15,font:{size:window.innerWidth<768?10:13,family:'-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial'},generateLabels:chart=>{const data=chart.data;if(data.labels.length&&data.datasets.length){return data.labels.map((label,i)=>{const value=data.datasets[0].data[i];const total=data.datasets[0].data.reduce((acc,val)=>acc+val,0);const percentage=(value/total*100).toFixed(1);const text=window.innerWidth<768?\"\".concat(label,\": $\").concat(value.toFixed(0)):\"\".concat(label,\": $\").concat(value.toFixed(2),\" (\").concat(percentage,\"%)\");return{text,fillStyle:data.datasets[0].backgroundColor[i],strokeStyle:data.datasets[0].borderColor[i],lineWidth:1,hidden:false,color:'#ffffff'};});}return[];}},overflow:'scroll'}}},plugins:[ChartDataLabels]});setChart(newChart);}},[currentMonth,currentYear,transactions,allMonthsTransactions,isDarkMode]);// Separate submit handlers for income and expenses\nconst handleIncomeSubmit=e=>{e.preventDefault();if(!incomeDescription||!incomeAmount){return;// Just return if validation fails\n}const newIncome={id:Date.now(),description:incomeDescription,amount:parseFloat(incomeAmount),type:'income',date:new Date().toISOString(),frequency:'Monthly',dueDate:new Date().toISOString().split('T')[0]};// Use addTransaction instead of directly updating transactions\naddTransaction(newIncome,'income');// Clear form\nsetIncomeDescription('');setIncomeAmount('');setIsIncomeOpen(false);// Automatically close the form after submission\n};const handleExpenseSubmit=e=>{e.preventDefault();if(!expenseDescription||!expenseAmount||!dueDate||!category){return;}// Use custom category if \"Other\" is selected\nconst finalCategory=category==='Other'?customCategory:category;const newExpense={id:Date.now(),description:expenseDescription,amount:parseFloat(expenseAmount),type:'expense',category:finalCategory,dueDate,frequency,paid:false,skipped:false,date:new Date().toISOString()};addTransaction(newExpense,'expense');// Clear form\nsetExpenseDescription('');setExpenseAmount('');setCategory('Bills');// Reset to default category\nsetCustomCategory('');// Clear custom category\nsetIsExpenseOpen(false);};const togglePaid=id=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const monthTransaction=monthTransactions.find(t=>t.id===id);try{if(monthTransaction){setAllMonthsTransactions(prev=>{const updated=_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{paid:!t.paid,skipped:false}):t)});localStorage.setItem('allMonthsTransactions',JSON.stringify(updated));return updated;});}else{setTransactions(prev=>{const updated=prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{paid:!t.paid,skipped:false}):t);localStorage.setItem('transactions',JSON.stringify(updated));return updated;});}// If chart exists, update it safely\nif(chart){requestAnimationFrame(()=>{try{chart.update('none');}catch(error){console.error('Error updating chart in togglePaid:',error);}});}}catch(error){console.error('Error in togglePaid:',error);}};const toggleSkipped=id=>{setTransactions(prev=>{const updated=prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{skipped:!t.skipped,paid:false}):t);localStorage.setItem('transactions',JSON.stringify(updated));return updated;});};const deleteTransaction=(transactionId,fromMonth)=>{if(window.confirm('Delete this transaction?')){const transaction=transactions.find(t=>t.id===transactionId);if(!transaction){const monthKey=\"\".concat(currentYear,\"-\").concat(fromMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const monthTransaction=monthTransactions.find(t=>t.id===transactionId);if(monthTransaction!==null&&monthTransaction!==void 0&&monthTransaction.originalTransactionId){const deleteAll=window.confirm('Delete all future occurrences of this recurring transaction?');if(deleteAll){const updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.keys(updatedMonthsTransactions).forEach(monthKey=>{const[year,month]=monthKey.split('-').map(Number);if(year>currentYear||year===currentYear&&month>=fromMonth){updatedMonthsTransactions[monthKey]=updatedMonthsTransactions[monthKey].filter(t=>t.originalTransactionId!==monthTransaction.originalTransactionId);}});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{const updatedMonthsTransactions=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:allMonthsTransactions[monthKey].filter(t=>t.id!==transactionId)});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}}else{const updatedMonthsTransactions=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:allMonthsTransactions[monthKey].filter(t=>t.id!==transactionId)});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}}else{const updatedTransactions=transactions.filter(t=>t.id!==transactionId);setTransactions(updatedTransactions);localStorage.setItem('transactions',JSON.stringify(updatedTransactions));}}};// Update the filterTransactions function to properly combine both sources\nconst filterTransactions=type=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];// Get transactions from both sources\nconst regularTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return t.type===type&&transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const recurringTransactions=monthTransactions.filter(t=>t.type===type);// Combine and remove duplicates\nconst combined=[...regularTransactions,...recurringTransactions];return combined.filter((transaction,index,self)=>index===self.findIndex(t=>t.id===transaction.id));};// Update calculateTotals to include both regular and recurring transactions\nconst calculateTotals=()=>{const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const monthTransactions=allMonthsTransactions[monthKey]||[];const regularTransactions=transactions.filter(t=>{const transactionDate=new Date(t.date);return transactionDate.getMonth()===currentMonth&&transactionDate.getFullYear()===currentYear;});const allTransactions=[...regularTransactions,...monthTransactions];return{income:allTransactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+t.amount,0),expenses:allTransactions.filter(t=>t.type==='expense'&&!t.skipped).reduce((sum,t)=>sum+t.amount,0),paid:allTransactions.filter(t=>t.paid).reduce((sum,t)=>sum+t.amount,0)};};// Update the saveEdit function\nconst saveEdit=id=>{var _allMonthsTransaction;const monthKey=\"\".concat(currentYear,\"-\").concat(currentMonth);const isMonthTransaction=(_allMonthsTransaction=allMonthsTransactions[monthKey])===null||_allMonthsTransaction===void 0?void 0:_allMonthsTransaction.some(t=>t.id===id);if(isMonthTransaction){// Handle editing recurring transactions\nif(editingValues.originalTransactionId){const editFuture=window.confirm('Do you want to apply these changes to all future occurrences?');if(editFuture){// Update all future occurrences\nconst updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.keys(updatedMonthsTransactions).forEach(key=>{const[year,month]=key.split('-').map(Number);if(year>currentYear||year===currentYear&&month>=currentMonth){updatedMonthsTransactions[key]=updatedMonthsTransactions[key].map(t=>t.originalTransactionId===editingValues.originalTransactionId?_objectSpread(_objectSpread({},t),editingValues):t);}});setAllMonthsTransactions(updatedMonthsTransactions);}else{// Update only this occurrence\nsetAllMonthsTransactions(prev=>_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t)}));}}else{// Update one-time transaction\nsetAllMonthsTransactions(prev=>_objectSpread(_objectSpread({},prev),{},{[monthKey]:prev[monthKey].map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t)}));}}else{// Handle regular transactions\nsetTransactions(transactions.map(t=>t.id===id?_objectSpread(_objectSpread({},t),editingValues):t));}setEditingId(null);setEditingValues({});};// Update the startEditing function\nconst startEditing=transaction=>{setEditingId(transaction.id);setEditingValues(_objectSpread(_objectSpread({},transaction),{},{amount:transaction.amount.toString()}));};// Add this function to cancel editing\nconst cancelEdit=()=>{setEditingId(null);setEditingValues({});};// Add this helper function at the top of your App component\nconst getDayWithSuffix=date=>{const day=new Date(date).getDate();if(day>3&&day<21)return day+'th';switch(day%10){case 1:return day+\"st\";case 2:return day+\"nd\";case 3:return day+\"rd\";default:return day+\"th\";}};// Add this function in your App component\nconst getMonthlyTrends=()=>{const last6Months=Array.from({length:6},(_,i)=>{const d=new Date();d.setMonth(d.getMonth()-i);return d;}).reverse();return{labels:last6Months.map(date=>months[date.getMonth()]),expenses:last6Months.map(date=>{return transactions.filter(t=>{const tDate=new Date(t.date);return t.type==='expense'&&tDate.getMonth()===date.getMonth()&&!t.skipped;}).reduce((sum,t)=>sum+t.amount,0);}),income:last6Months.map(date=>{return transactions.filter(t=>{const tDate=new Date(t.date);return t.type==='income'&&tDate.getMonth()===date.getMonth();}).reduce((sum,t)=>sum+t.amount,0);})};};// Update the generateRecurringDates function\nconst generateRecurringDates=(startDate,frequency,endDate)=>{const dates=[];let currentDate=new Date(startDate);const end=new Date(endDate);// Set both dates to start of day for accurate comparison\ncurrentDate.setHours(0,0,0,0);end.setHours(0,0,0,0);console.log('Generating recurring dates:',{startDate:currentDate,endDate:end,frequency});while(currentDate<=end){dates.push(new Date(currentDate));// Store the original day of month\nconst originalDay=currentDate.getDate();// Calculate next date based on frequency\nswitch(frequency){case'Weekly':currentDate.setDate(currentDate.getDate()+7);break;case'Bi-Weekly':currentDate.setDate(currentDate.getDate()+14);break;case'Monthly':currentDate.setMonth(currentDate.getMonth()+1);// Check if we've rolled over to the next month\nif(currentDate.getDate()!==originalDay){// We've hit the end of the month, go back to last day of previous month\ncurrentDate.setDate(0);}break;default:return dates;}console.log(\"Added \".concat(frequency,\" date:\"),new Date(currentDate));}console.log('Generated dates:',dates);return dates;};// Add these wrapper functions\nconst updateTransactions=newTransactions=>{setTransactions(newTransactions);localStorage.setItem('transactions',JSON.stringify(newTransactions));};const updateMonthlyTransactions=newMonthlyTransactions=>{setAllMonthsTransactions(newMonthlyTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(newMonthlyTransactions));};// Update the addTransaction function\nconst addTransaction=(transaction,type)=>{const endOfYear=new Date(currentYear,11,31);const isRecurring=transaction.frequency!=='One-time';const startDate=new Date(transaction.dueDate);// Ensure paid property is set for expenses\nconst transactionWithPaid=_objectSpread(_objectSpread({},transaction),{},{paid:type==='expense'?false:undefined});if(isRecurring){const recurringDates=generateRecurringDates(startDate,transaction.frequency,endOfYear);const transactionsByMonth={};recurringDates.forEach(date=>{const monthKey=\"\".concat(date.getFullYear(),\"-\").concat(date.getMonth());if(!transactionsByMonth[monthKey]){transactionsByMonth[monthKey]=[];}const recurringTransaction=_objectSpread(_objectSpread({},transactionWithPaid),{},{id:Date.now()+Math.random(),dueDate:date.toISOString().split('T')[0],originalTransactionId:transaction.id,paid:type==='expense'?false:undefined});transactionsByMonth[monthKey].push(recurringTransaction);});// Update allMonthsTransactions\nconst updatedMonthsTransactions=_objectSpread({},allMonthsTransactions);Object.entries(transactionsByMonth).forEach(_ref=>{let[monthKey,transactions]=_ref;if(!updatedMonthsTransactions[monthKey]){updatedMonthsTransactions[monthKey]=[];}updatedMonthsTransactions[monthKey]=[...updatedMonthsTransactions[monthKey],...transactions];});setAllMonthsTransactions(updatedMonthsTransactions);localStorage.setItem('allMonthsTransactions',JSON.stringify(updatedMonthsTransactions));}else{if(type==='income'){updateTransactions([...transactions,transactionWithPaid]);}else{// Handle one-time expenses\nconst transactionDate=new Date(transaction.dueDate);const monthKey=\"\".concat(transactionDate.getFullYear(),\"-\").concat(transactionDate.getMonth());const updatedMonthly=_objectSpread(_objectSpread({},allMonthsTransactions),{},{[monthKey]:[...(allMonthsTransactions[monthKey]||[]),_objectSpread(_objectSpread({},transactionWithPaid),{},{paid:false})]});updateMonthlyTransactions(updatedMonthly);}}};// In App.js, update the summary calculation\nconst calculateSummary=transactions=>{const income=transactions.filter(t=>t.type==='income').reduce((sum,t)=>sum+parseFloat(t.amount),0);const paidIncome=transactions.filter(t=>t.type==='income'&&t.paid).reduce((sum,t)=>sum+parseFloat(t.amount),0);const expenses=transactions.filter(t=>t.type==='expense').reduce((sum,t)=>sum+parseFloat(t.amount),0);const balance=paidIncome-expenses;return{income,paidIncome,expenses,balance};};// Add this function near the top of App component\nconst updateCreditCards=newCards=>{setCreditCards(newCards);localStorage.setItem('creditCards',JSON.stringify(newCards));};// Add function to calculate payment summary\nconst calculatePaymentSummary=()=>{const expenses=filterTransactions('expense');const total=expenses.reduce((sum,t)=>sum+t.amount,0);const paid=expenses.reduce((sum,t)=>t.paid?sum+t.amount:sum,0);const remaining=total-paid;return{total:total.toFixed(2),paid:paid.toFixed(2),remaining:remaining.toFixed(2),progress:total>0?(paid/total*100).toFixed(1):0};};// Add this sorting function\nconst sortTransactions=transactions=>{return[...transactions].sort((a,b)=>{if(sortConfig.key==='amount'){return sortConfig.direction==='asc'?a.amount-b.amount:b.amount-a.amount;}if(sortConfig.key==='dueDate'){return sortConfig.direction==='asc'?new Date(a.dueDate)-new Date(b.dueDate):new Date(b.dueDate)-new Date(a.dueDate);}if(sortConfig.key==='description'){return sortConfig.direction==='asc'?a.description.localeCompare(b.description):b.description.localeCompare(a.description);}return 0;});};// Rename this function to applyFilters\nconst applyFilters=transactions=>{return transactions.filter(transaction=>{const matchesCategory=filterConfig.category==='all'||transaction.category===filterConfig.category;const matchesStatus=filterConfig.status==='all'||filterConfig.status==='paid'&&transaction.paid||filterConfig.status==='unpaid'&&!transaction.paid;const matchesSearch=transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());return matchesCategory&&matchesStatus&&matchesSearch;});};// Add this function to handle form toggling\nconst toggleForm=formName=>{if(activeForm===formName){setActiveForm(null);setIsIncomeOpen(false);setIsExpenseOpen(false);}else{setActiveForm(formName);if(formName==='income'){setIsIncomeOpen(true);setIsExpenseOpen(false);}else{setIsExpenseOpen(true);setIsIncomeOpen(false);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(isDarkMode?'dark-mode':''),children:[/*#__PURE__*/_jsxs(\"header\",{className:\"finance-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"theme-toggle\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsDarkMode(!isDarkMode),className:\"theme-toggle-btn\",title:isDarkMode?\"Switch to Light Mode\":\"Switch to Dark Mode\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-\".concat(isDarkMode?'sun':'moon')})})}),/*#__PURE__*/_jsx(\"h1\",{className:\"gradient-text\",children:\"Finance Tracker\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-navigation\",children:[/*#__PURE__*/_jsxs(Nav,{variant:\"tabs\",className:\"main-nav\",children:[/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{active:activeTab==='budget',onClick:()=>setActiveTab('budget'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wallet me-2\"}),\"Budget Tracker\"]})}),/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsxs(Nav.Link,{active:activeTab==='credit',onClick:()=>setActiveTab('credit'),children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-credit-card me-2\"}),\"Credit Cards\"]})})]}),activeTab==='budget'&&/*#__PURE__*/_jsxs(\"div\",{className:\"month-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn prev\",onClick:()=>{if(currentMonth===0){setCurrentYear(prev=>prev-1);setCurrentMonth(11);}else{setCurrentMonth(prev=>prev-1);}},\"aria-label\":\"Previous month\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-left\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"month-select\",children:[/*#__PURE__*/_jsx(\"select\",{value:currentMonth,onChange:e=>setCurrentMonth(Number(e.target.value)),className:\"month-dropdown\",\"aria-label\":\"Select month\",children:months.map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index,children:month},index))}),/*#__PURE__*/_jsx(\"select\",{value:currentYear,onChange:e=>setCurrentYear(Number(e.target.value)),className:\"year-dropdown\",\"aria-label\":\"Select year\",children:Array.from({length:5},(_,i)=>/*#__PURE__*/_jsx(\"option\",{value:currentYear-2+i,children:currentYear-2+i},i))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"nav-btn next\",onClick:()=>{if(currentMonth===11){setCurrentYear(prev=>prev+1);setCurrentMonth(0);}else{setCurrentMonth(prev=>prev+1);}},\"aria-label\":\"Next month\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-right\"})})]})]})]}),activeTab==='budget'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8 mb-4\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-danger text-white\",children:/*#__PURE__*/_jsx(Button,{onClick:()=>toggleForm('expense'),\"aria-controls\":\"expenseForm\",\"aria-expanded\":isExpenseOpen,variant:\"link\",className:\"text-white w-100 text-start p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Expenses\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-caret-\".concat(isExpenseOpen?'down':'right',\" ms-2 fa-lg\")})]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-form-backdrop \".concat(isExpenseOpen?'show':''),onClick:()=>toggleForm('expense')}),/*#__PURE__*/_jsx(Collapse,{in:isExpenseOpen,children:/*#__PURE__*/_jsx(\"div\",{id:\"expenseForm\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleExpenseSubmit,className:\"transaction-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:expenseDescription,onChange:e=>setExpenseDescription(e.target.value),placeholder:\"Expense Item\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:expenseAmount,onChange:e=>setExpenseAmount(e.target.value),placeholder:\"Amount\",step:\"0.01\",className:\"form-control\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:category,onChange:e=>setCategory(e.target.value),className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Category\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other...\"})]}),category==='Other'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:customCategory,onChange:e=>setCustomCategory(e.target.value),placeholder:\"Enter custom category\",className:\"form-control mt-2\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dueDate,onChange:e=>setDueDate(e.target.value),className:\"form-control\",required:true}),/*#__PURE__*/_jsxs(\"select\",{value:frequency,onChange:e=>setFrequency(e.target.value),className:\"form-select\",required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Frequency\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bi-Weekly\",children:\"Bi-Weekly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Weekly\",children:\"Weekly\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-danger\",children:\"Add Expense\"})]})})})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 mb-4\",children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{className:\"bg-success text-white\",children:/*#__PURE__*/_jsx(Button,{onClick:()=>toggleForm('income'),\"aria-controls\":\"incomeSection\",\"aria-expanded\":isIncomeOpen,variant:\"link\",className:\"text-white w-100 text-start p-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Income\"}),/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-caret-\".concat(isIncomeOpen?'down':'right',\" ms-2 fa-lg\")})]})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"mobile-form-backdrop \".concat(isIncomeOpen?'show':''),onClick:()=>toggleForm('income')}),/*#__PURE__*/_jsx(Collapse,{in:isIncomeOpen,children:/*#__PURE__*/_jsx(\"div\",{id:\"incomeSection\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleIncomeSubmit,className:\"transaction-form mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:incomeDescription,onChange:e=>setIncomeDescription(e.target.value),placeholder:\"Income Source\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:incomeAmount,onChange:e=>setIncomeAmount(e.target.value),placeholder:\"Amount\",step:\"0.01\",className:\"form-control\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-success\",children:\"Add Income\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortTransactions(applyFilters(filterTransactions('income'))).map(transaction=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingValues.description||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{description:e.target.value})),className:\"form-control form-control-sm\"}):transaction.description}),/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editingValues.amount||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{amount:parseFloat(e.target.value)})),className:\"form-control form-control-sm\",step:\"0.01\"}):/*#__PURE__*/_jsxs(\"span\",{className:\"text-success\",children:[\"$\",transaction.amount.toFixed(2)]})}),/*#__PURE__*/_jsx(\"td\",{children:editingId===transaction.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>saveEdit(transaction.id),className:\"btn-icon\",title:\"Save changes\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Save\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:cancelEdit,className:\"btn-icon delete\",title:\"Cancel editing\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Cancel\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"expense-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startEditing(transaction),className:\"btn-icon\",title:\"Edit this entry\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>deleteTransaction(transaction.id,currentMonth),className:\"btn-icon delete\",title:\"Delete this entry\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Delete\"})]})]})})]},transaction.id))})]})})]})})})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chart-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Expense Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(\"canvas\",{id:\"expenseChart\"})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card budget-expenses\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header bg-danger text-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Budget & Expenses\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-link text-white\",onClick:()=>setIsExpenseListOpen(!isExpenseListOpen),children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-chevron-\".concat(isExpenseListOpen?'up':'down')})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"budget-summary mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wallet me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Monthly Income:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-success\",children:[\"$\",calculateTotals().income.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-shopping-cart me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Total Expenses:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-danger\",children:[\"$\",calculateTotals().expenses.toFixed(2)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"budget-stat\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-piggy-bank me-2\"}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Remaining:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\",children:[\"$\",(calculateTotals().income-calculateTotals().expenses).toFixed(2)]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"payment-summary mt-3\",children:(()=>{const summary=calculatePaymentSummary();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress mb-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar bg-success\",role:\"progressbar\",style:{width:\"\".concat(summary.progress,\"%\")},\"aria-valuenow\":summary.progress,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",children:[summary.progress,\"%\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Paid:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-success\",children:[\"$\",summary.paid]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Remaining:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"value text-danger\",children:[\"$\",summary.remaining]})]})]})]});})()})]}),/*#__PURE__*/_jsx(Collapse,{in:isExpenseListOpen,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"filters-section mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Search expenses...\",value:filterConfig.search,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{search:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:filterConfig.category,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{category:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Categories\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:filterConfig.status,onChange:e=>setFilterConfig(prev=>_objectSpread(_objectSpread({},prev),{},{status:e.target.value})),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"paid\",children:\"Paid\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unpaid\",children:\"Unpaid\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:\"\".concat(sortConfig.key,\"-\").concat(sortConfig.direction),onChange:e=>{const[key,direction]=e.target.value.split('-');setSortConfig({key,direction});},children:[/*#__PURE__*/_jsx(\"option\",{value:\"dueDate-asc\",children:\"Date (Earliest First)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"dueDate-desc\",children:\"Date (Latest First)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amount-asc\",children:\"Amount (Low to High)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"amount-desc\",children:\"Amount (High to Low)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"description-asc\",children:\"Name (A to Z)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"description-desc\",children:\"Name (Z to A)\"})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsx(\"div\",{className:\"expense-list\",children:sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction=>/*#__PURE__*/_jsx(\"div\",{className:\"expense-item \".concat(transaction.paid?'paid':''),children:/*#__PURE__*/_jsxs(\"div\",{className:\"expense-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:transaction.paid||false,onChange:()=>togglePaid(transaction.id),id:\"paid-\".concat(transaction.id)}),/*#__PURE__*/_jsx(\"label\",{className:\"checkmark\",htmlFor:\"paid-\".concat(transaction.id)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"expense-content\",children:editingId===transaction.id?/*#__PURE__*/// Edit mode\n_jsxs(\"div\",{className:\"expense-edit-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editingValues.description||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{description:e.target.value})),className:\"form-control form-control-sm mb-2\",placeholder:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:editingValues.amount||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{amount:parseFloat(e.target.value)})),className:\"form-control form-control-sm mb-2\",step:\"0.01\",placeholder:\"Amount\"}),/*#__PURE__*/_jsxs(\"select\",{value:editingValues.category||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{category:e.target.value})),className:\"form-select form-select-sm mb-2\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Bills\",children:\"Bills\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Savings\",children:\"Savings\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Personal\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Other\",children:\"Other\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:editingValues.dueDate||'',onChange:e=>setEditingValues(_objectSpread(_objectSpread({},editingValues),{},{dueDate:e.target.value})),className:\"form-control form-control-sm mb-2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"edit-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>saveEdit(transaction.id),className:\"btn btn-success btn-sm me-2\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-save\"}),\" Save\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:cancelEdit,className:\"btn btn-secondary btn-sm\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"}),\" Cancel\"]})]})]}):/*#__PURE__*/// Display mode\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"expense-primary\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"expense-title\",children:transaction.description}),/*#__PURE__*/_jsxs(\"span\",{className:\"expense-amount\",children:[\"$\",transaction.amount.toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"expense-secondary\",children:[transaction.type==='expense'&&/*#__PURE__*/_jsx(\"span\",{className:\"expense-tag\",children:transaction.category}),/*#__PURE__*/_jsx(\"span\",{className:\"expense-date\",children:getDayWithSuffix(transaction.dueDate)}),/*#__PURE__*/_jsx(\"span\",{className:\"expense-frequency\",children:transaction.frequency})]})]})}),!editingId&&/*#__PURE__*/_jsxs(\"div\",{className:\"expense-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>startEditing(transaction),className:\"btn-icon\",title:\"Edit\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-edit\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>deleteTransaction(transaction.id,currentMonth),className:\"btn-icon delete\",title:\"Delete\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-trash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Delete\"})]})]})]})},transaction.id))})})]})})]})]})})}),/*#__PURE__*/_jsx(MonthPage,{month:currentMonth,year:currentYear,transactions:allMonthsTransactions[\"\".concat(currentYear,\"-\").concat(currentMonth)]||[],onUpdateTransaction:addTransaction,onDeleteTransaction:deleteTransaction})]}):/*#__PURE__*/_jsx(CreditCardTracker,{creditCards:creditCards,setCreditCards:updateCreditCards})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Chart","ChartDataLabels","Collapse","Button","Card","Nav","Line","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","MonthPage","CreditCardTracker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","register","ThemeContext","useTheme","App","transactions","setTransactions","incomeDescription","setIncomeDescription","incomeAmount","setIncomeAmount","expenseDescription","setExpenseDescription","expenseAmount","setExpenseAmount","category","setCategory","dueDate","setDueDate","Date","toISOString","split","frequency","setFrequency","currentMonth","setCurrentMonth","getMonth","chart","setChart","isIncomeOpen","setIsIncomeOpen","isIncomeListOpen","setIsIncomeListOpen","isExpenseOpen","setIsExpenseOpen","editingId","setEditingId","editingValues","setEditingValues","isDarkMode","setIsDarkMode","currentYear","setCurrentYear","getFullYear","allMonthsTransactions","setAllMonthsTransactions","activeTab","setActiveTab","creditCards","setCreditCards","customCategory","setCustomCategory","isExpenseListOpen","setIsExpenseListOpen","sortConfig","setSortConfig","key","direction","filterConfig","setFilterConfig","status","search","activeForm","setActiveForm","categoryColors","setCategoryColors","months","loadData","savedTransactions","localStorage","getItem","savedMonthsTransactions","savedCreditCards","JSON","parse","error","console","destroy","generateColor","index","defaultColors","bg","border","prev","_objectSpread","colorPalette","newColor","length","ctx","document","getElementById","monthKey","concat","monthTransactions","regularTransactions","filter","t","tDate","date","allTransactions","type","skipped","categoryTotals","reduce","acc","transaction","parseFloat","amount","Object","keys","categories","colors","map","newChart","data","labels","datasets","values","backgroundColor","c","borderColor","borderWidth","options","responsive","maintainAspectRatio","animation","duration","plugins","datalabels","color","font","weight","size","window","innerWidth","family","formatter","value","context","total","dataset","val","percentage","toFixed","anchor","align","offset","legend","position","maxWidth","maxHeight","undefined","boxWidth","padding","generateLabels","label","i","text","fillStyle","strokeStyle","lineWidth","hidden","overflow","handleIncomeSubmit","e","preventDefault","newIncome","id","now","description","addTransaction","handleExpenseSubmit","finalCategory","newExpense","paid","togglePaid","monthTransaction","find","updated","setItem","stringify","requestAnimationFrame","update","toggleSkipped","deleteTransaction","transactionId","fromMonth","confirm","originalTransactionId","deleteAll","updatedMonthsTransactions","forEach","year","month","Number","updatedTransactions","filterTransactions","transactionDate","recurringTransactions","combined","self","findIndex","calculateTotals","income","sum","expenses","saveEdit","_allMonthsTransaction","isMonthTransaction","some","editFuture","startEditing","toString","cancelEdit","getDayWithSuffix","day","getDate","getMonthlyTrends","last6Months","Array","from","_","d","setMonth","reverse","generateRecurringDates","startDate","endDate","dates","currentDate","end","setHours","log","push","originalDay","setDate","updateTransactions","newTransactions","updateMonthlyTransactions","newMonthlyTransactions","endOfYear","isRecurring","transactionWithPaid","recurringDates","transactionsByMonth","recurringTransaction","Math","random","entries","_ref","updatedMonthly","calculateSummary","paidIncome","balance","updateCreditCards","newCards","calculatePaymentSummary","remaining","progress","sortTransactions","sort","a","b","localeCompare","applyFilters","matchesCategory","matchesStatus","matchesSearch","toLowerCase","includes","toggleForm","formName","className","children","onClick","title","variant","Item","Link","active","onChange","target","Header","in","Body","onSubmit","placeholder","required","step","summary","role","style","width","checked","htmlFor","onUpdateTransaction","onDeleteTransaction"],"sources":["/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n} from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  ChartDataLabels\n);\n\n// Create theme context\nconst ThemeContext = createContext();\n\n// Add this before the App component.\nexport const useTheme = () => useContext(ThemeContext);\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n  const [creditCards, setCreditCards] = useState([]);\n  const [customCategory, setCustomCategory] = useState('');\n  const [isExpenseListOpen, setIsExpenseListOpen] = useState(false);\n  const [sortConfig, setSortConfig] = useState({ key: 'dueDate', direction: 'asc' });\n  const [filterConfig, setFilterConfig] = useState({\n    category: 'all',\n    status: 'all',\n    search: ''\n  });\n  const [activeForm, setActiveForm] = useState(null);\n  const [categoryColors, setCategoryColors] = useState({});\n\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    // Load all data on mount\n    const loadData = () => {\n      try {\n        const savedTransactions = localStorage.getItem('transactions');\n        const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n        const savedCreditCards = localStorage.getItem('creditCards');\n\n        if (savedTransactions) {\n          setTransactions(JSON.parse(savedTransactions));\n        }\n        if (savedMonthsTransactions) {\n          setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n        }\n        if (savedCreditCards) {\n          setCreditCards(JSON.parse(savedCreditCards));\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n\n    loadData();\n  }, []); // Only run on mount\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n        setChart(null);\n      }\n    };\n  }, [chart]);\n\n  // Update the generateColor function to use cached colors\n  const generateColor = (category, index) => {\n    if (categoryColors[category]) {\n      return categoryColors[category];\n    }\n\n    // Predefined colors for known categories\n    const defaultColors = {\n      'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n      'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n      'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n    };\n\n    if (defaultColors[category]) {\n      setCategoryColors(prev => ({ ...prev, [category]: defaultColors[category] }));\n      return defaultColors[category];\n    }\n\n    // Fixed color palette for additional categories\n    const colorPalette = [\n      { bg: 'rgba(75, 192, 192, 0.8)', border: 'rgba(75, 192, 192, 1)' },\n      { bg: 'rgba(153, 102, 255, 0.8)', border: 'rgba(153, 102, 255, 1)' },\n      { bg: 'rgba(255, 159, 64, 0.8)', border: 'rgba(255, 159, 64, 1)' },\n      { bg: 'rgba(231, 233, 237, 0.8)', border: 'rgba(231, 233, 237, 1)' },\n      { bg: 'rgba(102, 204, 153, 0.8)', border: 'rgba(102, 204, 153, 1)' }\n    ];\n\n    const newColor = colorPalette[index % colorPalette.length];\n    setCategoryColors(prev => ({ ...prev, [category]: newColor }));\n    return newColor;\n  };\n\n  // Update the chart useEffect\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) return;\n\n    // Destroy existing chart if it exists\n    if (chart) {\n      chart.destroy();\n    }\n\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && \n             tDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions]\n      .filter(t => t.type === 'expense' && !t.skipped);\n\n    const categoryTotals = allTransactions.reduce((acc, transaction) => {\n      const category = transaction.category || 'Other';\n      if (!acc[category]) {\n        acc[category] = 0;\n      }\n      acc[category] += parseFloat(transaction.amount);\n      return acc;\n    }, {});\n\n    if (Object.keys(categoryTotals).length > 0) {\n      const categories = Object.keys(categoryTotals);\n      const colors = categories.map((category, index) => generateColor(category, index));\n\n      const newChart = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: categories,\n          datasets: [{\n            data: Object.values(categoryTotals),\n            backgroundColor: colors.map(c => c.bg),\n            borderColor: colors.map(c => c.border),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          animation: {\n            duration: 300\n          },\n          plugins: {\n            datalabels: {\n              color: '#ffffff',\n              font: {\n                weight: 'bold',\n                size: window.innerWidth < 768 ? 9 : 14,\n                family: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial'\n              },\n              formatter: (value, context) => {\n                const total = context.dataset.data.reduce((acc, val) => acc + val, 0);\n                const percentage = ((value / total) * 100).toFixed(1);\n                if (percentage < 3) return '';\n                return `$${value.toFixed(0)}`;\n              },\n              anchor: 'center',\n              align: 'center',\n              offset: 0\n            },\n            legend: {\n              position: window.innerWidth < 768 ? 'bottom' : 'right',\n              align: 'start',\n              maxWidth: window.innerWidth < 768 ? '100%' : 200,\n              maxHeight: window.innerWidth < 768 ? 150 : undefined,\n              labels: {\n                color: '#ffffff',\n                boxWidth: window.innerWidth < 768 ? 12 : 20,\n                padding: window.innerWidth < 768 ? 8 : 15,\n                font: {\n                  size: window.innerWidth < 768 ? 10 : 13,\n                  family: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial'\n                },\n                generateLabels: (chart) => {\n                  const data = chart.data;\n                  if (data.labels.length && data.datasets.length) {\n                    return data.labels.map((label, i) => {\n                      const value = data.datasets[0].data[i];\n                      const total = data.datasets[0].data.reduce((acc, val) => acc + val, 0);\n                      const percentage = ((value / total) * 100).toFixed(1);\n                      const text = window.innerWidth < 768 \n                        ? `${label}: $${value.toFixed(0)}`\n                        : `${label}: $${value.toFixed(2)} (${percentage}%)`;\n                      return {\n                        text,\n                        fillStyle: data.datasets[0].backgroundColor[i],\n                        strokeStyle: data.datasets[0].borderColor[i],\n                        lineWidth: 1,\n                        hidden: false,\n                        color: '#ffffff'\n                      };\n                    });\n                  }\n                  return [];\n                }\n              },\n              overflow: 'scroll'\n            }\n          }\n        },\n        plugins: [ChartDataLabels]\n      });\n\n      setChart(newChart);\n    }\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = (e) => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      return; // Just return if validation fails\n    }\n\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly',\n      dueDate: new Date().toISOString().split('T')[0]\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n    \n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    setIsIncomeOpen(false); // Automatically close the form after submission\n  };\n\n  const handleExpenseSubmit = (e) => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      return;\n    }\n\n    // Use custom category if \"Other\" is selected\n    const finalCategory = category === 'Other' ? customCategory : category;\n\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category: finalCategory,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    addTransaction(newExpense, 'expense');\n    \n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    setCategory('Bills'); // Reset to default category\n    setCustomCategory(''); // Clear custom category\n    setIsExpenseOpen(false);\n  };\n\n  const togglePaid = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n\n    try {\n      if (monthTransaction) {\n        setAllMonthsTransactions(prev => {\n          const updated = {\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n            )\n          };\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updated));\n          return updated;\n        });\n      } else {\n        setTransactions(prev => {\n          const updated = prev.map(t =>\n            t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n          );\n          localStorage.setItem('transactions', JSON.stringify(updated));\n          return updated;\n        });\n      }\n\n      // If chart exists, update it safely\n      if (chart) {\n        requestAnimationFrame(() => {\n          try {\n            chart.update('none');\n          } catch (error) {\n            console.error('Error updating chart in togglePaid:', error);\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in togglePaid:', error);\n    }\n  };\n\n  const toggleSkipped = (id) => {\n    setTransactions(prev => {\n      const updated = prev.map(t => \n        t.id === id ? { ...t, skipped: !t.skipped, paid: false } : t\n      );\n      localStorage.setItem('transactions', JSON.stringify(updated));\n      return updated;\n    });\n  };\n\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      \n      if (!transaction) {\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        \n        if (monthTransaction?.originalTransactionId) {\n          const deleteAll = window.confirm(\n            'Delete all future occurrences of this recurring transaction?'\n          );\n          \n          if (deleteAll) {\n            const updatedMonthsTransactions = { ...allMonthsTransactions };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || (year === currentYear && month >= fromMonth)) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey]\n                  .filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          } else {\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions,\n              [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n            };\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          }\n        } else {\n          const updatedMonthsTransactions = {\n            ...allMonthsTransactions,\n            [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n          };\n          setAllMonthsTransactions(updatedMonthsTransactions);\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n        }\n      } else {\n        const updatedTransactions = transactions.filter(t => t.id !== transactionId);\n        setTransactions(updatedTransactions);\n        localStorage.setItem('transactions', JSON.stringify(updatedTransactions));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = (type) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && \n             transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n    \n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) =>\n      index === self.findIndex(t => t.id === transaction.id)\n    );\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n\n    return {\n      income: allTransactions\n        .filter(t => t.type === 'income')\n        .reduce((sum, t) => sum + t.amount, 0),\n      expenses: allTransactions\n        .filter(t => t.type === 'expense' && !t.skipped)\n        .reduce((sum, t) => sum + t.amount, 0),\n      paid: allTransactions\n        .filter(t => t.paid)\n        .reduce((sum, t) => sum + t.amount, 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = allMonthsTransactions[monthKey]?.some(t => t.id === id);\n    \n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm(\n          'Do you want to apply these changes to all future occurrences?'\n        );\n        \n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = { ...allMonthsTransactions };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || (year === currentYear && month >= currentMonth)) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t =>\n                t.originalTransactionId === editingValues.originalTransactionId\n                  ? { ...t, ...editingValues }\n                  : t\n              );\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, ...editingValues } : t\n            )\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t =>\n            t.id === id ? { ...t, ...editingValues } : t\n          )\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => \n        t.id === id ? { ...t, ...editingValues } : t\n      ));\n    }\n    \n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = (transaction) => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = (date) => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1: return day + \"st\";\n      case 2: return day + \"nd\";\n      case 3: return day + \"rd\";\n      default: return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({ length: 6 }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'expense' && \n                   tDate.getMonth() === date.getMonth() &&\n                   !t.skipped;\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'income' && \n                   tDate.getMonth() === date.getMonth();\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n      \n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n      \n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Add these wrapper functions\n  const updateTransactions = (newTransactions) => {\n    setTransactions(newTransactions);\n    localStorage.setItem('transactions', JSON.stringify(newTransactions));\n  };\n\n  const updateMonthlyTransactions = (newMonthlyTransactions) => {\n    setAllMonthsTransactions(newMonthlyTransactions);\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(newMonthlyTransactions));\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n\n    // Ensure paid property is set for expenses\n    const transactionWithPaid = {\n      ...transaction,\n      paid: type === 'expense' ? false : undefined\n    };\n\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(\n        startDate,\n        transaction.frequency,\n        endOfYear\n      );\n\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n\n        const recurringTransaction = {\n          ...transactionWithPaid,\n          id: Date.now() + Math.random(),\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: type === 'expense' ? false : undefined\n        };\n\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n\n      // Update allMonthsTransactions\n      const updatedMonthsTransactions = { ...allMonthsTransactions };\n      Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n        if (!updatedMonthsTransactions[monthKey]) {\n          updatedMonthsTransactions[monthKey] = [];\n        }\n        updatedMonthsTransactions[monthKey] = [\n          ...updatedMonthsTransactions[monthKey],\n          ...transactions\n        ];\n      });\n\n      setAllMonthsTransactions(updatedMonthsTransactions);\n      localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n\n    } else {\n      if (type === 'income') {\n        updateTransactions([...transactions, transactionWithPaid]);\n      } else {\n        // Handle one-time expenses\n        const transactionDate = new Date(transaction.dueDate);\n        const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n        \n        const updatedMonthly = {\n          ...allMonthsTransactions,\n          [monthKey]: [\n            ...(allMonthsTransactions[monthKey] || []),\n            { ...transactionWithPaid, paid: false }\n          ]\n        };\n\n        updateMonthlyTransactions(updatedMonthly);\n      }\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = (transactions) => {\n    const income = transactions\n      .filter(t => t.type === 'income')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const paidIncome = transactions\n      .filter(t => t.type === 'income' && t.paid)\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const expenses = transactions\n      .filter(t => t.type === 'expense')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const balance = paidIncome - expenses;\n\n    return { income, paidIncome, expenses, balance };\n  };\n\n  // Add this function near the top of App component\n  const updateCreditCards = (newCards) => {\n    setCreditCards(newCards);\n    localStorage.setItem('creditCards', JSON.stringify(newCards));\n  };\n\n  // Add function to calculate payment summary\n  const calculatePaymentSummary = () => {\n    const expenses = filterTransactions('expense');\n    const total = expenses.reduce((sum, t) => sum + t.amount, 0);\n    const paid = expenses.reduce((sum, t) => t.paid ? sum + t.amount : sum, 0);\n    const remaining = total - paid;\n    \n    return {\n      total: total.toFixed(2),\n      paid: paid.toFixed(2),\n      remaining: remaining.toFixed(2),\n      progress: total > 0 ? (paid / total * 100).toFixed(1) : 0\n    };\n  };\n\n  // Add this sorting function\n  const sortTransactions = (transactions) => {\n    return [...transactions].sort((a, b) => {\n      if (sortConfig.key === 'amount') {\n        return sortConfig.direction === 'asc' \n          ? a.amount - b.amount \n          : b.amount - a.amount;\n      }\n      if (sortConfig.key === 'dueDate') {\n        return sortConfig.direction === 'asc'\n          ? new Date(a.dueDate) - new Date(b.dueDate)\n          : new Date(b.dueDate) - new Date(a.dueDate);\n      }\n      if (sortConfig.key === 'description') {\n        return sortConfig.direction === 'asc'\n          ? a.description.localeCompare(b.description)\n          : b.description.localeCompare(a.description);\n      }\n      return 0;\n    });\n  };\n\n  // Rename this function to applyFilters\n  const applyFilters = (transactions) => {\n    return transactions.filter(transaction => {\n      const matchesCategory = filterConfig.category === 'all' || transaction.category === filterConfig.category;\n      const matchesStatus = filterConfig.status === 'all' \n        || (filterConfig.status === 'paid' && transaction.paid)\n        || (filterConfig.status === 'unpaid' && !transaction.paid);\n      const matchesSearch = transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());\n      \n      return matchesCategory && matchesStatus && matchesSearch;\n    });\n  };\n\n  // Add this function to handle form toggling\n  const toggleForm = (formName) => {\n    if (activeForm === formName) {\n      setActiveForm(null);\n      setIsIncomeOpen(false);\n      setIsExpenseOpen(false);\n    } else {\n      setActiveForm(formName);\n      if (formName === 'income') {\n        setIsIncomeOpen(true);\n        setIsExpenseOpen(false);\n      } else {\n        setIsExpenseOpen(true);\n        setIsIncomeOpen(false);\n      }\n    }\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      <header className=\"finance-header\">\n        <div className=\"theme-toggle\">\n          <button \n            onClick={() => setIsDarkMode(!isDarkMode)}\n            className=\"theme-toggle-btn\"\n            title={isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n          >\n            <i className={`fas fa-${isDarkMode ? 'sun' : 'moon'}`}></i>\n          </button>\n        </div>\n        <h1 className=\"gradient-text\">Finance Tracker</h1>\n        \n        {/* Update the navigation section */}\n        <div className=\"app-navigation\">\n          {/* Main Tabs */}\n          <Nav variant=\"tabs\" className=\"main-nav\">\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'budget'}\n                onClick={() => setActiveTab('budget')}\n              >\n                <i className=\"fas fa-wallet me-2\"></i>\n                Budget Tracker\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'credit'}\n                onClick={() => setActiveTab('credit')}\n              >\n                <i className=\"fas fa-credit-card me-2\"></i>\n                Credit Cards\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n\n          {/* Month Navigation - Only show for budget tab */}\n          {activeTab === 'budget' && (\n            <div className=\"month-navigation\">\n              <button \n                className=\"nav-btn prev\"\n                onClick={() => {\n                  if (currentMonth === 0) {\n                    setCurrentYear(prev => prev - 1);\n                    setCurrentMonth(11);\n                  } else {\n                    setCurrentMonth(prev => prev - 1);\n                  }\n                }}\n                aria-label=\"Previous month\"\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n              \n              <div className=\"month-select\">\n                <select \n                  value={currentMonth}\n                  onChange={(e) => setCurrentMonth(Number(e.target.value))}\n                  className=\"month-dropdown\"\n                  aria-label=\"Select month\"\n                >\n                  {months.map((month, index) => (\n                    <option key={index} value={index}>{month}</option>\n                  ))}\n                </select>\n                <select \n                  value={currentYear}\n                  onChange={(e) => setCurrentYear(Number(e.target.value))}\n                  className=\"year-dropdown\"\n                  aria-label=\"Select year\"\n                >\n                  {Array.from({ length: 5 }, (_, i) => (\n                    <option key={i} value={currentYear - 2 + i}>\n                      {currentYear - 2 + i}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <button \n                className=\"nav-btn next\"\n                onClick={() => {\n                  if (currentMonth === 11) {\n                    setCurrentYear(prev => prev + 1);\n                    setCurrentMonth(0);\n                  } else {\n                    setCurrentMonth(prev => prev + 1);\n                  }\n                }}\n                aria-label=\"Next month\"\n              >\n                <i className=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </header>\n\n      {/* Conditional Rendering based on active tab */}\n      {activeTab === 'budget' ? (\n        <>\n          {/* Forms Section - Side by Side */}\n          <div className=\"row\">\n            {/* Expense Form */}\n            <div className=\"col-md-8 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-danger text-white\">\n                  <Button\n                    onClick={() => toggleForm('expense')}\n                    aria-controls=\"expenseForm\"\n                    aria-expanded={isExpenseOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Expenses</h3>\n                        <i className={`fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                {/* Add backdrop for mobile */}\n                <div \n                  className={`mobile-form-backdrop ${isExpenseOpen ? 'show' : ''}`}\n                  onClick={() => toggleForm('expense')}\n                />\n                <Collapse in={isExpenseOpen}>\n                  <div id=\"expenseForm\">\n                    <Card.Body>\n                      <form onSubmit={handleExpenseSubmit} className=\"transaction-form\">\n                        <input\n                          type=\"text\"\n                          value={expenseDescription}\n                          onChange={(e) => setExpenseDescription(e.target.value)}\n                          placeholder=\"Expense Item\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={expenseAmount}\n                          onChange={(e) => setExpenseAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={category} \n                          onChange={(e) => setCategory(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Category</option>\n                          <option value=\"Bills\">Bills</option>\n                          <option value=\"Savings\">Savings</option>\n                          <option value=\"Personal\">Personal</option>\n                          <option value=\"Other\">Other...</option>\n                        </select>\n                        {/* Show custom category input when \"Other\" is selected */}\n                        {category === 'Other' && (\n                          <input\n                            type=\"text\"\n                            value={customCategory}\n                            onChange={(e) => setCustomCategory(e.target.value)}\n                            placeholder=\"Enter custom category\"\n                            className=\"form-control mt-2\"\n                            required\n                          />\n                        )}\n                        <input\n                          type=\"date\"\n                          value={dueDate}\n                          onChange={(e) => setDueDate(e.target.value)}\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={frequency} \n                          onChange={(e) => setFrequency(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Frequency</option>\n                          <option value=\"Monthly\">Monthly</option>\n                          <option value=\"Bi-Weekly\">Bi-Weekly</option>\n                          <option value=\"Weekly\">Weekly</option>\n                        </select>\n                        <button type=\"submit\" className=\"btn btn-danger\">\n                          Add Expense\n                        </button>\n                      </form>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n\n            {/* Income Form */}\n            <div className=\"col-md-4 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-success text-white\">\n                  <Button\n                    onClick={() => toggleForm('income')}\n                    aria-controls=\"incomeSection\"\n                    aria-expanded={isIncomeOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Income</h3>\n                        <i className={`fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                {/* Add backdrop for mobile */}\n                <div \n                  className={`mobile-form-backdrop ${isIncomeOpen ? 'show' : ''}`}\n                  onClick={() => toggleForm('income')}\n                />\n                <Collapse in={isIncomeOpen}>\n                  <div id=\"incomeSection\">\n                    <Card.Body>\n                      <form onSubmit={handleIncomeSubmit} className=\"transaction-form mb-4\">\n                        <input\n                          type=\"text\"\n                          value={incomeDescription}\n                          onChange={(e) => setIncomeDescription(e.target.value)}\n                          placeholder=\"Income Source\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={incomeAmount}\n                          onChange={(e) => setIncomeAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <button type=\"submit\" className=\"btn btn-success\">\n                          Add Income\n                        </button>\n                      </form>\n                      <div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <thead>\n                            <tr>\n                              <th>Description</th>\n                              <th>Amount</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {sortTransactions(applyFilters(filterTransactions('income'))).map(transaction => (\n                              <tr key={transaction.id}>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"text\"\n                                      value={editingValues.description || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        description: e.target.value\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                    />\n                                  ) : (\n                                    transaction.description\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"number\"\n                                      value={editingValues.amount || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        amount: parseFloat(e.target.value)\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                      step=\"0.01\"\n                                    />\n                                  ) : (\n                                    <span className=\"text-success\">${transaction.amount.toFixed(2)}</span>\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <>\n                                      <button\n                                        onClick={() => saveEdit(transaction.id)}\n                                        className=\"btn-icon\"\n                                        title=\"Save changes\"\n                                      >\n                                        <i className=\"fas fa-save\"></i>\n                                        <span>Save</span>\n                                      </button>\n                                      <button\n                                        onClick={cancelEdit}\n                                        className=\"btn-icon delete\"\n                                        title=\"Cancel editing\"\n                                      >\n                                        <i className=\"fas fa-times\"></i>\n                                        <span>Cancel</span>\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <div className=\"expense-actions\">\n                                      <button\n                                        onClick={() => startEditing(transaction)}\n                                        className=\"btn-icon\"\n                                        title=\"Edit this entry\"\n                                      >\n                                        <i className=\"fas fa-edit\"></i>\n                                        <span>Edit</span>\n                                      </button>\n                                      <button\n                                        onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                        className=\"btn-icon delete\"\n                                        title=\"Delete this entry\"\n                                      >\n                                        <i className=\"fas fa-trash\"></i>\n                                        <span>Delete</span>\n                                      </button>\n                                    </div>\n                                  )}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n          </div>\n\n          {/* Chart Section - Moved above Budget & Expenses */}\n          <div className=\"row mb-4\">\n            <div className=\"col-12\">\n              <div className=\"chart-section\">\n                <h3>Expense Breakdown</h3>\n                <div className=\"chart-container\">\n                  <canvas id=\"expenseChart\"></canvas>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Budget & Expenses Card */}\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card budget-expenses\">\n                <div className=\"card-header bg-danger text-white\">\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <h3 className=\"mb-0\">Budget & Expenses</h3>\n                    <button \n                      className=\"btn btn-link text-white\" \n                      onClick={() => setIsExpenseListOpen(!isExpenseListOpen)}\n                    >\n                      <i className={`fas fa-chevron-${isExpenseListOpen ? 'up' : 'down'}`}></i>\n                    </button>\n                  </div>\n                </div>\n                \n                <div className=\"card-body\">\n                  {/* Budget Summary Section */}\n                  <div className=\"budget-summary mb-3\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-wallet me-2\"></i>\n                          <span className=\"label\">Monthly Income:</span>\n                          <span className=\"value text-success\">${calculateTotals().income.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-shopping-cart me-2\"></i>\n                          <span className=\"label\">Total Expenses:</span>\n                          <span className=\"value text-danger\">${calculateTotals().expenses.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-piggy-bank me-2\"></i>\n                          <span className=\"label\">Remaining:</span>\n                          <span className=\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\">\n                            ${(calculateTotals().income - calculateTotals().expenses).toFixed(2)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"payment-summary mt-3\">\n                      {(() => {\n                        const summary = calculatePaymentSummary();\n                        return (\n                          <>\n                            <div className=\"progress mb-2\">\n                              <div \n                                className=\"progress-bar bg-success\" \n                                role=\"progressbar\" \n                                style={{width: `${summary.progress}%`}}\n                                aria-valuenow={summary.progress} \n                                aria-valuemin=\"0\" \n                                aria-valuemax=\"100\"\n                              >\n                                {summary.progress}%\n                              </div>\n                            </div>\n                            <div className=\"summary-grid\">\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Paid:</span>\n                                <span className=\"value text-success\">${summary.paid}</span>\n                              </div>\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Remaining:</span>\n                                <span className=\"value text-danger\">${summary.remaining}</span>\n                              </div>\n                            </div>\n                          </>\n                        );\n                      })()}\n                    </div>\n                  </div>\n\n                  {/* Expense List Section */}\n                  <Collapse in={isExpenseListOpen}>\n                    <div>\n                      {/* Add Filter Controls */}\n                      <div className=\"filters-section mb-4\">\n                        <div className=\"row g-3\">\n                          <div className=\"col-md-3\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Search expenses...\"\n                              value={filterConfig.search}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                search: e.target.value\n                              }))}\n                            />\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.category}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                category: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Categories</option>\n                              <option value=\"Bills\">Bills</option>\n                              <option value=\"Savings\">Savings</option>\n                              <option value=\"Personal\">Personal</option>\n                              <option value=\"Other\">Other</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.status}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                status: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Status</option>\n                              <option value=\"paid\">Paid</option>\n                              <option value=\"unpaid\">Unpaid</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={`${sortConfig.key}-${sortConfig.direction}`}\n                              onChange={(e) => {\n                                const [key, direction] = e.target.value.split('-');\n                                setSortConfig({ key, direction });\n                              }}\n                            >\n                              <option value=\"dueDate-asc\">Date (Earliest First)</option>\n                              <option value=\"dueDate-desc\">Date (Latest First)</option>\n                              <option value=\"amount-asc\">Amount (Low to High)</option>\n                              <option value=\"amount-desc\">Amount (High to Low)</option>\n                              <option value=\"description-asc\">Name (A to Z)</option>\n                              <option value=\"description-desc\">Name (Z to A)</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"table-responsive\">\n                        <div className=\"expense-list\">\n                          {sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction => (\n                            <div key={transaction.id} className={`expense-item ${transaction.paid ? 'paid' : ''}`}>\n                              <div className=\"expense-main\">\n                                <div className=\"expense-checkbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    checked={transaction.paid || false}\n                                    onChange={() => togglePaid(transaction.id)}\n                                    id={`paid-${transaction.id}`}\n                                  />\n                                  <label className=\"checkmark\" htmlFor={`paid-${transaction.id}`}></label>\n                                </div>\n                                <div className=\"expense-content\">\n                                  {editingId === transaction.id ? (\n                                    // Edit mode\n                                    <div className=\"expense-edit-form\">\n                                      <input\n                                        type=\"text\"\n                                        value={editingValues.description || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          description: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        placeholder=\"Description\"\n                                      />\n                                      <input\n                                        type=\"number\"\n                                        value={editingValues.amount || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          amount: parseFloat(e.target.value)\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        step=\"0.01\"\n                                        placeholder=\"Amount\"\n                                      />\n                                      <select\n                                        value={editingValues.category || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          category: e.target.value\n                                        })}\n                                        className=\"form-select form-select-sm mb-2\"\n                                      >\n                                        <option value=\"Bills\">Bills</option>\n                                        <option value=\"Savings\">Savings</option>\n                                        <option value=\"Personal\">Personal</option>\n                                        <option value=\"Other\">Other</option>\n                                      </select>\n                                      <input\n                                        type=\"date\"\n                                        value={editingValues.dueDate || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          dueDate: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                      />\n                                      <div className=\"edit-actions\">\n                                        <button\n                                          onClick={() => saveEdit(transaction.id)}\n                                          className=\"btn btn-success btn-sm me-2\"\n                                        >\n                                          <i className=\"fas fa-save\"></i> Save\n                                        </button>\n                                        <button\n                                          onClick={cancelEdit}\n                                          className=\"btn btn-secondary btn-sm\"\n                                        >\n                                          <i className=\"fas fa-times\"></i> Cancel\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    // Display mode\n                                    <>\n                                      <div className=\"expense-primary\">\n                                        <span className=\"expense-title\">{transaction.description}</span>\n                                        <span className=\"expense-amount\">${transaction.amount.toFixed(2)}</span>\n                                      </div>\n                                      <div className=\"expense-secondary\">\n                                        {transaction.type === 'expense' && (\n                                          <span className=\"expense-tag\">{transaction.category}</span>\n                                        )}\n                                        <span className=\"expense-date\">{getDayWithSuffix(transaction.dueDate)}</span>\n                                        <span className=\"expense-frequency\">{transaction.frequency}</span>\n                                      </div>\n                                    </>\n                                  )}\n                                </div>\n                                {!editingId && (\n                                  <div className=\"expense-actions\">\n                                    <button\n                                      onClick={() => startEditing(transaction)}\n                                      className=\"btn-icon\"\n                                      title=\"Edit\"\n                                    >\n                                      <i className=\"fas fa-edit\"></i>\n                                      <span>Edit</span>\n                                    </button>\n                                    <button\n                                      onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                      className=\"btn-icon delete\"\n                                      title=\"Delete\"\n                                    >\n                                      <i className=\"fas fa-trash\"></i>\n                                      <span>Delete</span>\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </Collapse>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Render current month's page */}\n          <MonthPage\n            month={currentMonth}\n            year={currentYear}\n            transactions={allMonthsTransactions[`${currentYear}-${currentMonth}`] || []}\n            onUpdateTransaction={addTransaction}\n            onDeleteTransaction={deleteTransaction}\n          />\n        </>\n      ) : (\n        <CreditCardTracker \n          creditCards={creditCards} \n          setCreditCards={updateCreditCards}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}