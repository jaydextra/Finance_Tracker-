{"ast":null,"code":"var _jsxFileName = \"/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement, ChartDataLabels);\n\n// Create theme context\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Add this before the App component.\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction App() {\n  _s2();\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n  const [creditCards, setCreditCards] = useState([]);\n  const [customCategory, setCustomCategory] = useState('');\n  const [isExpenseListOpen, setIsExpenseListOpen] = useState(false);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'dueDate',\n    direction: 'asc'\n  });\n  const [filterConfig, setFilterConfig] = useState({\n    category: 'all',\n    status: 'all',\n    search: ''\n  });\n  const [activeForm, setActiveForm] = useState(null);\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    // Load all data on mount\n    const loadData = () => {\n      try {\n        const savedTransactions = localStorage.getItem('transactions');\n        const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n        const savedCreditCards = localStorage.getItem('creditCards');\n        if (savedTransactions) {\n          setTransactions(JSON.parse(savedTransactions));\n        }\n        if (savedMonthsTransactions) {\n          setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n        }\n        if (savedCreditCards) {\n          setCreditCards(JSON.parse(savedCreditCards));\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n    loadData();\n  }, []); // Only run on mount\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n        setChart(null);\n      }\n    };\n  }, [chart]);\n\n  // Add this helper function at the top of your App component\n  const generateColor = index => {\n    // Predefined colors for known categories\n    const categoryColors = {\n      'Bills': {\n        bg: 'rgba(255, 99, 132, 0.8)',\n        border: 'rgba(255, 99, 132, 1)'\n      },\n      'Savings': {\n        bg: 'rgba(54, 162, 235, 0.8)',\n        border: 'rgba(54, 162, 235, 1)'\n      },\n      'Personal': {\n        bg: 'rgba(255, 206, 86, 0.8)',\n        border: 'rgba(255, 206, 86, 1)'\n      }\n    };\n\n    // Color palette for additional categories\n    const colorPalette = [{\n      bg: 'rgba(75, 192, 192, 0.8)',\n      border: 'rgba(75, 192, 192, 1)'\n    }, {\n      bg: 'rgba(153, 102, 255, 0.8)',\n      border: 'rgba(153, 102, 255, 1)'\n    }, {\n      bg: 'rgba(255, 159, 64, 0.8)',\n      border: 'rgba(255, 159, 64, 1)'\n    }, {\n      bg: 'rgba(231, 233, 237, 0.8)',\n      border: 'rgba(231, 233, 237, 1)'\n    }, {\n      bg: 'rgba(102, 204, 153, 0.8)',\n      border: 'rgba(102, 204, 153, 1)'\n    }, {\n      bg: 'rgba(255, 99, 255, 0.8)',\n      border: 'rgba(255, 99, 255, 1)'\n    }];\n    return colorPalette[index % colorPalette.length];\n  };\n\n  // Update the chart useEffect with debug logs\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) {\n      console.log('Canvas context not found');\n      return;\n    }\n    console.log('Starting chart creation...');\n\n    // Destroy existing chart if it exists\n    if (chart) {\n      chart.destroy();\n      setChart(null);\n    }\n    try {\n      const monthKey = `${currentYear}-${currentMonth}`;\n      const monthTransactions = allMonthsTransactions[monthKey] || [];\n      const regularTransactions = transactions.filter(t => {\n        const tDate = new Date(t.date);\n        return tDate.getMonth() === currentMonth && tDate.getFullYear() === currentYear;\n      });\n      const allTransactions = [...regularTransactions, ...monthTransactions].filter(t => t.type === 'expense' && !t.skipped);\n      console.log('Filtered transactions:', allTransactions);\n      const categoryTotals = allTransactions.reduce((acc, transaction) => {\n        if (!acc[transaction.category]) {\n          acc[transaction.category] = 0;\n        }\n        acc[transaction.category] += parseFloat(transaction.amount);\n        return acc;\n      }, {});\n      console.log('Category totals:', categoryTotals);\n      if (Object.keys(categoryTotals).length > 0) {\n        const categories = Object.keys(categoryTotals);\n        const colors = categories.map((category, index) => {\n          const categoryColors = {\n            'Bills': {\n              bg: 'rgba(255, 99, 132, 0.8)',\n              border: 'rgba(255, 99, 132, 1)'\n            },\n            'Savings': {\n              bg: 'rgba(54, 162, 235, 0.8)',\n              border: 'rgba(54, 162, 235, 1)'\n            },\n            'Personal': {\n              bg: 'rgba(255, 206, 86, 0.8)',\n              border: 'rgba(255, 206, 86, 1)'\n            }\n          };\n          return categoryColors[category] || generateColor(index);\n        });\n        console.log('Creating new chart with data:', {\n          categories,\n          data: Object.values(categoryTotals),\n          colors\n        });\n        const newChart = new Chart(ctx, {\n          type: 'pie',\n          data: {\n            labels: categories,\n            datasets: [{\n              data: Object.values(categoryTotals),\n              backgroundColor: colors.map(c => c.bg),\n              borderColor: colors.map(c => c.border),\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              datalabels: {\n                formatter: value => `$${value.toFixed(2)}`,\n                color: '#fff',\n                font: {\n                  weight: 'bold',\n                  size: 14\n                }\n              },\n              legend: {\n                position: 'right',\n                labels: {\n                  color: isDarkMode ? '#ffffff' : '#666666',\n                  font: {\n                    size: 12\n                  },\n                  generateLabels: chart => {\n                    const data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                      return data.labels.map((label, i) => {\n                        const value = data.datasets[0].data[i];\n                        return {\n                          text: `${label}: $${value.toFixed(2)}`,\n                          fillStyle: data.datasets[0].backgroundColor[i],\n                          strokeStyle: data.datasets[0].borderColor[i],\n                          lineWidth: 1,\n                          hidden: false,\n                          index: i\n                        };\n                      });\n                    }\n                    return [];\n                  }\n                }\n              }\n            }\n          }\n        });\n        console.log('Chart created successfully');\n        setChart(newChart);\n      } else {\n        console.log('No data available for chart');\n      }\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = e => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      return; // Just return if validation fails\n    }\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly',\n      dueDate: new Date().toISOString().split('T')[0]\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n\n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    setIsIncomeOpen(false); // Automatically close the form after submission\n  };\n  const handleExpenseSubmit = e => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      return;\n    }\n\n    // Use custom category if \"Other\" is selected\n    const finalCategory = category === 'Other' ? customCategory : category;\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category: finalCategory,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n    addTransaction(newExpense, 'expense');\n\n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    setCategory('Bills'); // Reset to default category\n    setCustomCategory(''); // Clear custom category\n    setIsExpenseOpen(false);\n  };\n  const togglePaid = id => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n    try {\n      if (monthTransaction) {\n        setAllMonthsTransactions(prev => {\n          const updated = {\n            ...prev,\n            [monthKey]: prev[monthKey].map(t => t.id === id ? {\n              ...t,\n              paid: !t.paid,\n              skipped: false\n            } : t)\n          };\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updated));\n          return updated;\n        });\n      } else {\n        setTransactions(prev => {\n          const updated = prev.map(t => t.id === id ? {\n            ...t,\n            paid: !t.paid,\n            skipped: false\n          } : t);\n          localStorage.setItem('transactions', JSON.stringify(updated));\n          return updated;\n        });\n      }\n\n      // If chart exists, update it safely\n      if (chart) {\n        requestAnimationFrame(() => {\n          try {\n            chart.update('none');\n          } catch (error) {\n            console.error('Error updating chart in togglePaid:', error);\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in togglePaid:', error);\n    }\n  };\n  const toggleSkipped = id => {\n    setTransactions(prev => {\n      const updated = prev.map(t => t.id === id ? {\n        ...t,\n        skipped: !t.skipped,\n        paid: false\n      } : t);\n      localStorage.setItem('transactions', JSON.stringify(updated));\n      return updated;\n    });\n  };\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      if (!transaction) {\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        if (monthTransaction !== null && monthTransaction !== void 0 && monthTransaction.originalTransactionId) {\n          const deleteAll = window.confirm('Delete all future occurrences of this recurring transaction?');\n          if (deleteAll) {\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions\n            };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || year === currentYear && month >= fromMonth) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey].filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          } else {\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions,\n              [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n            };\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          }\n        } else {\n          const updatedMonthsTransactions = {\n            ...allMonthsTransactions,\n            [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n          };\n          setAllMonthsTransactions(updatedMonthsTransactions);\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n        }\n      } else {\n        const updatedTransactions = transactions.filter(t => t.id !== transactionId);\n        setTransactions(updatedTransactions);\n        localStorage.setItem('transactions', JSON.stringify(updatedTransactions));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = type => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n\n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\n    });\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n\n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) => index === self.findIndex(t => t.id === transaction.id));\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && tDate.getFullYear() === currentYear;\n    });\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n    return {\n      income: allTransactions.filter(t => t.type === 'income').reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0),\n      expenses: allTransactions.filter(t => t.type === 'expense' && !t.skipped).reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0),\n      paid: allTransactions.filter(t => t.paid).reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = id => {\n    var _allMonthsTransaction;\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = (_allMonthsTransaction = allMonthsTransactions[monthKey]) === null || _allMonthsTransaction === void 0 ? void 0 : _allMonthsTransaction.some(t => t.id === id);\n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm('Do you want to apply these changes to all future occurrences?');\n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = {\n            ...allMonthsTransactions\n          };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || year === currentYear && month >= currentMonth) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t => t.originalTransactionId === editingValues.originalTransactionId ? {\n                ...t,\n                ...editingValues\n              } : t);\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t => t.id === id ? {\n              ...t,\n              ...editingValues\n            } : t)\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t => t.id === id ? {\n            ...t,\n            ...editingValues\n          } : t)\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => t.id === id ? {\n        ...t,\n        ...editingValues\n      } : t));\n    }\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = transaction => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = date => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1:\n        return day + \"st\";\n      case 2:\n        return day + \"nd\";\n      case 3:\n        return day + \"rd\";\n      default:\n        return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({\n      length: 6\n    }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions.filter(t => {\n          const tDate = new Date(t.date);\n          return t.type === 'expense' && tDate.getMonth() === date.getMonth() && !t.skipped;\n        }).reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions.filter(t => {\n          const tDate = new Date(t.date);\n          return t.type === 'income' && tDate.getMonth() === date.getMonth();\n        }).reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n\n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n\n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n\n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Add these wrapper functions\n  const updateTransactions = newTransactions => {\n    setTransactions(newTransactions);\n    localStorage.setItem('transactions', JSON.stringify(newTransactions));\n  };\n  const updateMonthlyTransactions = newMonthlyTransactions => {\n    setAllMonthsTransactions(newMonthlyTransactions);\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(newMonthlyTransactions));\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n\n    // Ensure paid property is set for expenses\n    const transactionWithPaid = {\n      ...transaction,\n      paid: type === 'expense' ? false : undefined\n    };\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(startDate, transaction.frequency, endOfYear);\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n        const recurringTransaction = {\n          ...transactionWithPaid,\n          id: Date.now() + Math.random(),\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: type === 'expense' ? false : undefined\n        };\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n\n      // Update allMonthsTransactions\n      const updatedMonthsTransactions = {\n        ...allMonthsTransactions\n      };\n      Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n        if (!updatedMonthsTransactions[monthKey]) {\n          updatedMonthsTransactions[monthKey] = [];\n        }\n        updatedMonthsTransactions[monthKey] = [...updatedMonthsTransactions[monthKey], ...transactions];\n      });\n      setAllMonthsTransactions(updatedMonthsTransactions);\n      localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n    } else {\n      if (type === 'income') {\n        updateTransactions([...transactions, transactionWithPaid]);\n      } else {\n        // Handle one-time expenses\n        const transactionDate = new Date(transaction.dueDate);\n        const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n        const updatedMonthly = {\n          ...allMonthsTransactions,\n          [monthKey]: [...(allMonthsTransactions[monthKey] || []), {\n            ...transactionWithPaid,\n            paid: false\n          }]\n        };\n        updateMonthlyTransactions(updatedMonthly);\n      }\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = transactions => {\n    const income = transactions.filter(t => t.type === 'income').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const paidIncome = transactions.filter(t => t.type === 'income' && t.paid).reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const expenses = transactions.filter(t => t.type === 'expense').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const balance = paidIncome - expenses;\n    return {\n      income,\n      paidIncome,\n      expenses,\n      balance\n    };\n  };\n\n  // Add this function near the top of App component\n  const updateCreditCards = newCards => {\n    setCreditCards(newCards);\n    localStorage.setItem('creditCards', JSON.stringify(newCards));\n  };\n\n  // Add function to calculate payment summary\n  const calculatePaymentSummary = () => {\n    const expenses = filterTransactions('expense');\n    const total = expenses.reduce((sum, t) => sum + t.amount, 0);\n    const paid = expenses.reduce((sum, t) => t.paid ? sum + t.amount : sum, 0);\n    const remaining = total - paid;\n    return {\n      total: total.toFixed(2),\n      paid: paid.toFixed(2),\n      remaining: remaining.toFixed(2),\n      progress: total > 0 ? (paid / total * 100).toFixed(1) : 0\n    };\n  };\n\n  // Add this sorting function\n  const sortTransactions = transactions => {\n    return [...transactions].sort((a, b) => {\n      if (sortConfig.key === 'amount') {\n        return sortConfig.direction === 'asc' ? a.amount - b.amount : b.amount - a.amount;\n      }\n      if (sortConfig.key === 'dueDate') {\n        return sortConfig.direction === 'asc' ? new Date(a.dueDate) - new Date(b.dueDate) : new Date(b.dueDate) - new Date(a.dueDate);\n      }\n      if (sortConfig.key === 'description') {\n        return sortConfig.direction === 'asc' ? a.description.localeCompare(b.description) : b.description.localeCompare(a.description);\n      }\n      return 0;\n    });\n  };\n\n  // Rename this function to applyFilters\n  const applyFilters = transactions => {\n    return transactions.filter(transaction => {\n      const matchesCategory = filterConfig.category === 'all' || transaction.category === filterConfig.category;\n      const matchesStatus = filterConfig.status === 'all' || filterConfig.status === 'paid' && transaction.paid || filterConfig.status === 'unpaid' && !transaction.paid;\n      const matchesSearch = transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());\n      return matchesCategory && matchesStatus && matchesSearch;\n    });\n  };\n\n  // Add this function to handle form toggling\n  const toggleForm = formName => {\n    if (activeForm === formName) {\n      setActiveForm(null);\n      setIsIncomeOpen(false);\n      setIsExpenseOpen(false);\n    } else {\n      setActiveForm(formName);\n      if (formName === 'income') {\n        setIsIncomeOpen(true);\n        setIsExpenseOpen(false);\n      } else {\n        setIsExpenseOpen(true);\n        setIsIncomeOpen(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"finance-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDarkMode(!isDarkMode),\n          className: \"theme-toggle-btn\",\n          title: isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas fa-${isDarkMode ? 'sun' : 'moon'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gradient-text\",\n        children: \"Finance Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          variant: \"tabs\",\n          className: \"main-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              active: activeTab === 'budget',\n              onClick: () => setActiveTab('budget'),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-wallet me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 17\n              }, this), \"Budget Tracker\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              active: activeTab === 'credit',\n              onClick: () => setActiveTab('credit'),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-credit-card me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 17\n              }, this), \"Credit Cards\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this), activeTab === 'budget' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn prev\",\n            onClick: () => {\n              if (currentMonth === 0) {\n                setCurrentYear(prev => prev - 1);\n                setCurrentMonth(11);\n              } else {\n                setCurrentMonth(prev => prev - 1);\n              }\n            },\n            \"aria-label\": \"Previous month\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-arrow-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentMonth,\n              onChange: e => setCurrentMonth(Number(e.target.value)),\n              className: \"month-dropdown\",\n              \"aria-label\": \"Select month\",\n              children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: index,\n                children: month\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 864,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentYear,\n              onChange: e => setCurrentYear(Number(e.target.value)),\n              className: \"year-dropdown\",\n              \"aria-label\": \"Select year\",\n              children: Array.from({\n                length: 5\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: currentYear - 2 + i,\n                children: currentYear - 2 + i\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn next\",\n            onClick: () => {\n              if (currentMonth === 11) {\n                setCurrentYear(prev => prev + 1);\n                setCurrentMonth(0);\n              } else {\n                setCurrentMonth(prev => prev + 1);\n              }\n            },\n            \"aria-label\": \"Next month\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-arrow-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 7\n    }, this), activeTab === 'budget' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-danger text-white\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => toggleForm('expense'),\n                \"aria-controls\": \"expenseForm\",\n                \"aria-expanded\": isExpenseOpen,\n                variant: \"link\",\n                className: \"text-white w-100 text-start p-0\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"mb-0\",\n                      children: \"Expenses\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 918,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 919,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mobile-form-backdrop ${isExpenseOpen ? 'show' : ''}`,\n              onClick: () => toggleForm('expense')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: isExpenseOpen,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"expenseForm\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleExpenseSubmit,\n                    className: \"transaction-form\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: expenseDescription,\n                      onChange: e => setExpenseDescription(e.target.value),\n                      placeholder: \"Expense Item\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 933,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: expenseAmount,\n                      onChange: e => setExpenseAmount(e.target.value),\n                      placeholder: \"Amount\",\n                      step: \"0.01\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 941,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: category,\n                      onChange: e => setCategory(e.target.value),\n                      className: \"form-select\",\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 956,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Bills\",\n                        children: \"Bills\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 957,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Savings\",\n                        children: \"Savings\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 958,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Personal\",\n                        children: \"Personal\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 959,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Other\",\n                        children: \"Other...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 960,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 950,\n                      columnNumber: 25\n                    }, this), category === 'Other' && /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: customCategory,\n                      onChange: e => setCustomCategory(e.target.value),\n                      placeholder: \"Enter custom category\",\n                      className: \"form-control mt-2\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 964,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      value: dueDate,\n                      onChange: e => setDueDate(e.target.value),\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 973,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: frequency,\n                      onChange: e => setFrequency(e.target.value),\n                      className: \"form-select\",\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Frequency\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 986,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Monthly\",\n                        children: \"Monthly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 987,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Bi-Weekly\",\n                        children: \"Bi-Weekly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 988,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Weekly\",\n                        children: \"Weekly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 989,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 980,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-danger\",\n                      children: \"Add Expense\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 991,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 932,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-success text-white\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => toggleForm('income'),\n                \"aria-controls\": \"incomeSection\",\n                \"aria-expanded\": isIncomeOpen,\n                variant: \"link\",\n                className: \"text-white w-100 text-start p-0\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"mb-0\",\n                      children: \"Income\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1014,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1015,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1013,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mobile-form-backdrop ${isIncomeOpen ? 'show' : ''}`,\n              onClick: () => toggleForm('income')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: isIncomeOpen,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"incomeSection\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleIncomeSubmit,\n                    className: \"transaction-form mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: incomeDescription,\n                      onChange: e => setIncomeDescription(e.target.value),\n                      placeholder: \"Income Source\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1029,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: incomeAmount,\n                      onChange: e => setIncomeAmount(e.target.value),\n                      placeholder: \"Amount\",\n                      step: \"0.01\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1037,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-success\",\n                      children: \"Add Income\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1046,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Description\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1054,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Amount\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1055,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Actions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1056,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1053,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1052,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: sortTransactions(applyFilters(filterTransactions('income'))).map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              value: editingValues.description || '',\n                              onChange: e => setEditingValues({\n                                ...editingValues,\n                                description: e.target.value\n                              }),\n                              className: \"form-control form-control-sm\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1064,\n                              columnNumber: 37\n                            }, this) : transaction.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1062,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"number\",\n                              value: editingValues.amount || '',\n                              onChange: e => setEditingValues({\n                                ...editingValues,\n                                amount: parseFloat(e.target.value)\n                              }),\n                              className: \"form-control form-control-sm\",\n                              step: \"0.01\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1079,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-success\",\n                              children: [\"$\", transaction.amount.toFixed(2)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1090,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1077,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => saveEdit(transaction.id),\n                                className: \"btn-icon\",\n                                title: \"Save changes\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-save\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1101,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Save\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1102,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1096,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: cancelEdit,\n                                className: \"btn-icon delete\",\n                                title: \"Cancel editing\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-times\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1109,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Cancel\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1110,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1104,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"expense-actions\",\n                              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => startEditing(transaction),\n                                className: \"btn-icon\",\n                                title: \"Edit this entry\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-edit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1120,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Edit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1121,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1115,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => deleteTransaction(transaction.id, currentMonth),\n                                className: \"btn-icon delete\",\n                                title: \"Delete this entry\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-trash\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1128,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Delete\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1129,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1123,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1114,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1093,\n                            columnNumber: 33\n                          }, this)]\n                        }, transaction.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1061,\n                          columnNumber: 31\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1059,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1051,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Expense Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"expenseChart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-danger text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"mb-0\",\n                  children: \"Budget & Expenses\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-link text-white\",\n                  onClick: () => setIsExpenseListOpen(!isExpenseListOpen),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: `fas fa-chevron-${isExpenseListOpen ? 'up' : 'down'}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1169,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1165,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"budget-summary mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"budget-stat\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-wallet me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1180,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: \"Monthly Income:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1181,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"value text-success\",\n                        children: [\"$\", calculateTotals().income.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1182,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1179,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1178,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"budget-stat\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-shopping-cart me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1187,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: \"Total Expenses:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1188,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"value text-danger\",\n                        children: [\"$\", calculateTotals().expenses.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1189,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1186,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1185,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"budget-stat\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-piggy-bank me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1194,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label\",\n                        children: \"Remaining:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1195,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\",\n                        children: [\"$\", (calculateTotals().income - calculateTotals().expenses).toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1196,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1193,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1192,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1177,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"payment-summary mt-3\",\n                  children: (() => {\n                    const summary = calculatePaymentSummary();\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"progress mb-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"progress-bar bg-success\",\n                          role: \"progressbar\",\n                          style: {\n                            width: `${summary.progress}%`\n                          },\n                          \"aria-valuenow\": summary.progress,\n                          \"aria-valuemin\": \"0\",\n                          \"aria-valuemax\": \"100\",\n                          children: [summary.progress, \"%\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1208,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1207,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"summary-grid\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"summary-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"label\",\n                            children: \"Paid:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1221,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"value text-success\",\n                            children: [\"$\", summary.paid]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1222,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1220,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"summary-item\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"label\",\n                            children: \"Remaining:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1225,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"value text-danger\",\n                            children: [\"$\", summary.remaining]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1226,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1224,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1219,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true);\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                in: isExpenseListOpen,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"filters-section mb-4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"row g-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"text\",\n                          className: \"form-control\",\n                          placeholder: \"Search expenses...\",\n                          value: filterConfig.search,\n                          onChange: e => setFilterConfig(prev => ({\n                            ...prev,\n                            search: e.target.value\n                          }))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1242,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1241,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"form-select\",\n                          value: filterConfig.category,\n                          onChange: e => setFilterConfig(prev => ({\n                            ...prev,\n                            category: e.target.value\n                          })),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"all\",\n                            children: \"All Categories\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1262,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Bills\",\n                            children: \"Bills\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1263,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Savings\",\n                            children: \"Savings\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1264,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Personal\",\n                            children: \"Personal\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1265,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Other\",\n                            children: \"Other\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1266,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1254,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1253,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"form-select\",\n                          value: filterConfig.status,\n                          onChange: e => setFilterConfig(prev => ({\n                            ...prev,\n                            status: e.target.value\n                          })),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"all\",\n                            children: \"All Status\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1278,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"paid\",\n                            children: \"Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1279,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"unpaid\",\n                            children: \"Unpaid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1280,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1270,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1269,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-3\",\n                        children: /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"form-select\",\n                          value: `${sortConfig.key}-${sortConfig.direction}`,\n                          onChange: e => {\n                            const [key, direction] = e.target.value.split('-');\n                            setSortConfig({\n                              key,\n                              direction\n                            });\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"dueDate-asc\",\n                            children: \"Date (Earliest First)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1292,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"dueDate-desc\",\n                            children: \"Date (Latest First)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1293,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"amount-asc\",\n                            children: \"Amount (Low to High)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1294,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"amount-desc\",\n                            children: \"Amount (High to Low)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1295,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"description-asc\",\n                            children: \"Name (A to Z)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1296,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"description-desc\",\n                            children: \"Name (Z to A)\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1297,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1284,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1283,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1240,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1239,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"expense-list\",\n                      children: sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `expense-item ${transaction.paid ? 'paid' : ''}`,\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"expense-main\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"expense-checkbox\",\n                            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"checkbox\",\n                              checked: transaction.paid || false,\n                              onChange: () => togglePaid(transaction.id),\n                              id: `paid-${transaction.id}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1309,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"checkmark\",\n                              htmlFor: `paid-${transaction.id}`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1315,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1308,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"expense-content\",\n                            children: editingId === transaction.id ?\n                            /*#__PURE__*/\n                            // Edit mode\n                            _jsxDEV(\"div\", {\n                              className: \"expense-edit-form\",\n                              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"text\",\n                                value: editingValues.description || '',\n                                onChange: e => setEditingValues({\n                                  ...editingValues,\n                                  description: e.target.value\n                                }),\n                                className: \"form-control form-control-sm mb-2\",\n                                placeholder: \"Description\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1321,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"number\",\n                                value: editingValues.amount || '',\n                                onChange: e => setEditingValues({\n                                  ...editingValues,\n                                  amount: parseFloat(e.target.value)\n                                }),\n                                className: \"form-control form-control-sm mb-2\",\n                                step: \"0.01\",\n                                placeholder: \"Amount\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1331,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                                value: editingValues.category || '',\n                                onChange: e => setEditingValues({\n                                  ...editingValues,\n                                  category: e.target.value\n                                }),\n                                className: \"form-select form-select-sm mb-2\",\n                                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"Bills\",\n                                  children: \"Bills\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1350,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"Savings\",\n                                  children: \"Savings\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1351,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"Personal\",\n                                  children: \"Personal\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1352,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                                  value: \"Other\",\n                                  children: \"Other\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1353,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1342,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"date\",\n                                value: editingValues.dueDate || '',\n                                onChange: e => setEditingValues({\n                                  ...editingValues,\n                                  dueDate: e.target.value\n                                }),\n                                className: \"form-control form-control-sm mb-2\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1355,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"edit-actions\",\n                                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                  onClick: () => saveEdit(transaction.id),\n                                  className: \"btn btn-success btn-sm me-2\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                    className: \"fas fa-save\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1369,\n                                    columnNumber: 43\n                                  }, this), \" Save\"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1365,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                  onClick: cancelEdit,\n                                  className: \"btn btn-secondary btn-sm\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                    className: \"fas fa-times\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1375,\n                                    columnNumber: 43\n                                  }, this), \" Cancel\"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1371,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1364,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1320,\n                              columnNumber: 37\n                            }, this) :\n                            /*#__PURE__*/\n                            // Display mode\n                            _jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"expense-primary\",\n                                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"expense-title\",\n                                  children: transaction.description\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1383,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"expense-amount\",\n                                  children: [\"$\", transaction.amount.toFixed(2)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1384,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1382,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"expense-secondary\",\n                                children: [transaction.type === 'expense' && /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"expense-tag\",\n                                  children: transaction.category\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1388,\n                                  columnNumber: 43\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"expense-date\",\n                                  children: getDayWithSuffix(transaction.dueDate)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1390,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"expense-frequency\",\n                                  children: transaction.frequency\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1391,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1386,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1317,\n                            columnNumber: 33\n                          }, this), !editingId && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"expense-actions\",\n                            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => startEditing(transaction),\n                              className: \"btn-icon\",\n                              title: \"Edit\",\n                              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fas fa-edit\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1403,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                children: \"Edit\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1404,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1398,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => deleteTransaction(transaction.id, currentMonth),\n                              className: \"btn-icon delete\",\n                              title: \"Delete\",\n                              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fas fa-trash\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1411,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                children: \"Delete\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1412,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1406,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1397,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1307,\n                          columnNumber: 31\n                        }, this)\n                      }, transaction.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1306,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1304,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1303,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1237,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MonthPage, {\n        month: currentMonth,\n        year: currentYear,\n        transactions: allMonthsTransactions[`${currentYear}-${currentMonth}`] || [],\n        onUpdateTransaction: addTransaction,\n        onDeleteTransaction: deleteTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(CreditCardTracker, {\n      creditCards: creditCards,\n      setCreditCards: updateCreditCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 801,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"Oh5CHKED3IkQDicib4RvTgZ1r6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Chart","ChartDataLabels","Collapse","Button","Card","Nav","Line","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","MonthPage","CreditCardTracker","jsxDEV","_jsxDEV","Fragment","_Fragment","register","ThemeContext","useTheme","_s","App","_s2","transactions","setTransactions","incomeDescription","setIncomeDescription","incomeAmount","setIncomeAmount","expenseDescription","setExpenseDescription","expenseAmount","setExpenseAmount","category","setCategory","dueDate","setDueDate","Date","toISOString","split","frequency","setFrequency","currentMonth","setCurrentMonth","getMonth","chart","setChart","isIncomeOpen","setIsIncomeOpen","isIncomeListOpen","setIsIncomeListOpen","isExpenseOpen","setIsExpenseOpen","editingId","setEditingId","editingValues","setEditingValues","isDarkMode","setIsDarkMode","currentYear","setCurrentYear","getFullYear","allMonthsTransactions","setAllMonthsTransactions","activeTab","setActiveTab","creditCards","setCreditCards","customCategory","setCustomCategory","isExpenseListOpen","setIsExpenseListOpen","sortConfig","setSortConfig","key","direction","filterConfig","setFilterConfig","status","search","activeForm","setActiveForm","months","loadData","savedTransactions","localStorage","getItem","savedMonthsTransactions","savedCreditCards","JSON","parse","error","console","destroy","generateColor","index","categoryColors","bg","border","colorPalette","length","ctx","document","getElementById","log","monthKey","monthTransactions","regularTransactions","filter","t","tDate","date","allTransactions","type","skipped","categoryTotals","reduce","acc","transaction","parseFloat","amount","Object","keys","categories","colors","map","data","values","newChart","labels","datasets","backgroundColor","c","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","datalabels","formatter","value","toFixed","color","font","weight","size","legend","position","generateLabels","label","i","text","fillStyle","strokeStyle","lineWidth","hidden","handleIncomeSubmit","e","preventDefault","newIncome","id","now","description","addTransaction","handleExpenseSubmit","finalCategory","newExpense","paid","togglePaid","monthTransaction","find","prev","updated","setItem","stringify","requestAnimationFrame","update","toggleSkipped","deleteTransaction","transactionId","fromMonth","window","confirm","originalTransactionId","deleteAll","updatedMonthsTransactions","forEach","year","month","Number","updatedTransactions","filterTransactions","transactionDate","recurringTransactions","combined","self","findIndex","calculateTotals","income","sum","expenses","saveEdit","_allMonthsTransaction","isMonthTransaction","some","editFuture","startEditing","toString","cancelEdit","getDayWithSuffix","day","getDate","getMonthlyTrends","last6Months","Array","from","_","d","setMonth","reverse","generateRecurringDates","startDate","endDate","dates","currentDate","end","setHours","push","originalDay","setDate","updateTransactions","newTransactions","updateMonthlyTransactions","newMonthlyTransactions","endOfYear","isRecurring","transactionWithPaid","undefined","recurringDates","transactionsByMonth","recurringTransaction","Math","random","entries","updatedMonthly","calculateSummary","paidIncome","balance","updateCreditCards","newCards","calculatePaymentSummary","total","remaining","progress","sortTransactions","sort","a","b","localeCompare","applyFilters","matchesCategory","matchesStatus","matchesSearch","toLowerCase","includes","toggleForm","formName","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","variant","Item","Link","active","onChange","target","Header","in","Body","onSubmit","placeholder","required","step","summary","role","style","width","checked","htmlFor","onUpdateTransaction","onDeleteTransaction","_c","$RefreshReg$"],"sources":["/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n} from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement,\n  ChartDataLabels\n);\n\n// Create theme context\nconst ThemeContext = createContext();\n\n// Add this before the App component.\nexport const useTheme = () => useContext(ThemeContext);\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n  const [creditCards, setCreditCards] = useState([]);\n  const [customCategory, setCustomCategory] = useState('');\n  const [isExpenseListOpen, setIsExpenseListOpen] = useState(false);\n  const [sortConfig, setSortConfig] = useState({ key: 'dueDate', direction: 'asc' });\n  const [filterConfig, setFilterConfig] = useState({\n    category: 'all',\n    status: 'all',\n    search: ''\n  });\n  const [activeForm, setActiveForm] = useState(null);\n\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    // Load all data on mount\n    const loadData = () => {\n      try {\n        const savedTransactions = localStorage.getItem('transactions');\n        const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n        const savedCreditCards = localStorage.getItem('creditCards');\n\n        if (savedTransactions) {\n          setTransactions(JSON.parse(savedTransactions));\n        }\n        if (savedMonthsTransactions) {\n          setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n        }\n        if (savedCreditCards) {\n          setCreditCards(JSON.parse(savedCreditCards));\n        }\n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n\n    loadData();\n  }, []); // Only run on mount\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n        setChart(null);\n      }\n    };\n  }, [chart]);\n\n  // Add this helper function at the top of your App component\n  const generateColor = (index) => {\n    // Predefined colors for known categories\n    const categoryColors = {\n      'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n      'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n      'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n    };\n\n    // Color palette for additional categories\n    const colorPalette = [\n      { bg: 'rgba(75, 192, 192, 0.8)', border: 'rgba(75, 192, 192, 1)' },\n      { bg: 'rgba(153, 102, 255, 0.8)', border: 'rgba(153, 102, 255, 1)' },\n      { bg: 'rgba(255, 159, 64, 0.8)', border: 'rgba(255, 159, 64, 1)' },\n      { bg: 'rgba(231, 233, 237, 0.8)', border: 'rgba(231, 233, 237, 1)' },\n      { bg: 'rgba(102, 204, 153, 0.8)', border: 'rgba(102, 204, 153, 1)' },\n      { bg: 'rgba(255, 99, 255, 0.8)', border: 'rgba(255, 99, 255, 1)' }\n    ];\n\n    return colorPalette[index % colorPalette.length];\n  };\n\n  // Update the chart useEffect with debug logs\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) {\n      console.log('Canvas context not found');\n      return;\n    }\n\n    console.log('Starting chart creation...');\n\n    // Destroy existing chart if it exists\n    if (chart) {\n      chart.destroy();\n      setChart(null);\n    }\n\n    try {\n      const monthKey = `${currentYear}-${currentMonth}`;\n      const monthTransactions = allMonthsTransactions[monthKey] || [];\n      const regularTransactions = transactions.filter(t => {\n        const tDate = new Date(t.date);\n        return tDate.getMonth() === currentMonth && \n               tDate.getFullYear() === currentYear;\n      });\n\n      const allTransactions = [...regularTransactions, ...monthTransactions]\n        .filter(t => t.type === 'expense' && !t.skipped);\n\n      console.log('Filtered transactions:', allTransactions);\n\n      const categoryTotals = allTransactions.reduce((acc, transaction) => {\n        if (!acc[transaction.category]) {\n          acc[transaction.category] = 0;\n        }\n        acc[transaction.category] += parseFloat(transaction.amount);\n        return acc;\n      }, {});\n\n      console.log('Category totals:', categoryTotals);\n\n      if (Object.keys(categoryTotals).length > 0) {\n        const categories = Object.keys(categoryTotals);\n        const colors = categories.map((category, index) => {\n          const categoryColors = {\n            'Bills': { bg: 'rgba(255, 99, 132, 0.8)', border: 'rgba(255, 99, 132, 1)' },\n            'Savings': { bg: 'rgba(54, 162, 235, 0.8)', border: 'rgba(54, 162, 235, 1)' },\n            'Personal': { bg: 'rgba(255, 206, 86, 0.8)', border: 'rgba(255, 206, 86, 1)' }\n          };\n\n          return categoryColors[category] || generateColor(index);\n        });\n\n        console.log('Creating new chart with data:', {\n          categories,\n          data: Object.values(categoryTotals),\n          colors\n        });\n\n        const newChart = new Chart(ctx, {\n          type: 'pie',\n          data: {\n            labels: categories,\n            datasets: [{\n              data: Object.values(categoryTotals),\n              backgroundColor: colors.map(c => c.bg),\n              borderColor: colors.map(c => c.border),\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              datalabels: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n                color: '#fff',\n                font: {\n                  weight: 'bold',\n                  size: 14\n                }\n              },\n              legend: {\n                position: 'right',\n                labels: {\n                  color: isDarkMode ? '#ffffff' : '#666666',\n                  font: {\n                    size: 12\n                  },\n                  generateLabels: (chart) => {\n                    const data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                      return data.labels.map((label, i) => {\n                        const value = data.datasets[0].data[i];\n                        return {\n                          text: `${label}: $${value.toFixed(2)}`,\n                          fillStyle: data.datasets[0].backgroundColor[i],\n                          strokeStyle: data.datasets[0].borderColor[i],\n                          lineWidth: 1,\n                          hidden: false,\n                          index: i\n                        };\n                      });\n                    }\n                    return [];\n                  }\n                }\n              }\n            }\n          }\n        });\n\n        console.log('Chart created successfully');\n        setChart(newChart);\n      } else {\n        console.log('No data available for chart');\n      }\n    } catch (error) {\n      console.error('Error creating chart:', error);\n    }\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = (e) => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      return; // Just return if validation fails\n    }\n\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly',\n      dueDate: new Date().toISOString().split('T')[0]\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n    \n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    setIsIncomeOpen(false); // Automatically close the form after submission\n  };\n\n  const handleExpenseSubmit = (e) => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      return;\n    }\n\n    // Use custom category if \"Other\" is selected\n    const finalCategory = category === 'Other' ? customCategory : category;\n\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category: finalCategory,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    addTransaction(newExpense, 'expense');\n    \n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    setCategory('Bills'); // Reset to default category\n    setCustomCategory(''); // Clear custom category\n    setIsExpenseOpen(false);\n  };\n\n  const togglePaid = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n\n    try {\n      if (monthTransaction) {\n        setAllMonthsTransactions(prev => {\n          const updated = {\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n            )\n          };\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updated));\n          return updated;\n        });\n      } else {\n        setTransactions(prev => {\n          const updated = prev.map(t =>\n            t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n          );\n          localStorage.setItem('transactions', JSON.stringify(updated));\n          return updated;\n        });\n      }\n\n      // If chart exists, update it safely\n      if (chart) {\n        requestAnimationFrame(() => {\n          try {\n            chart.update('none');\n          } catch (error) {\n            console.error('Error updating chart in togglePaid:', error);\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error in togglePaid:', error);\n    }\n  };\n\n  const toggleSkipped = (id) => {\n    setTransactions(prev => {\n      const updated = prev.map(t => \n        t.id === id ? { ...t, skipped: !t.skipped, paid: false } : t\n      );\n      localStorage.setItem('transactions', JSON.stringify(updated));\n      return updated;\n    });\n  };\n\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      \n      if (!transaction) {\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        \n        if (monthTransaction?.originalTransactionId) {\n          const deleteAll = window.confirm(\n            'Delete all future occurrences of this recurring transaction?'\n          );\n          \n          if (deleteAll) {\n            const updatedMonthsTransactions = { ...allMonthsTransactions };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || (year === currentYear && month >= fromMonth)) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey]\n                  .filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          } else {\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions,\n              [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n            };\n            setAllMonthsTransactions(updatedMonthsTransactions);\n            localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n          }\n        } else {\n          const updatedMonthsTransactions = {\n            ...allMonthsTransactions,\n            [monthKey]: allMonthsTransactions[monthKey].filter(t => t.id !== transactionId)\n          };\n          setAllMonthsTransactions(updatedMonthsTransactions);\n          localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n        }\n      } else {\n        const updatedTransactions = transactions.filter(t => t.id !== transactionId);\n        setTransactions(updatedTransactions);\n        localStorage.setItem('transactions', JSON.stringify(updatedTransactions));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = (type) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && \n             transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n    \n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) =>\n      index === self.findIndex(t => t.id === transaction.id)\n    );\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && \n             tDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n\n    return {\n      income: allTransactions\n        .filter(t => t.type === 'income')\n        .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0),\n      expenses: allTransactions\n        .filter(t => t.type === 'expense' && !t.skipped)\n        .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0),\n      paid: allTransactions\n        .filter(t => t.paid)\n        .reduce((sum, t) => sum + (parseFloat(t.amount) || 0), 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = allMonthsTransactions[monthKey]?.some(t => t.id === id);\n    \n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm(\n          'Do you want to apply these changes to all future occurrences?'\n        );\n        \n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = { ...allMonthsTransactions };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || (year === currentYear && month >= currentMonth)) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t =>\n                t.originalTransactionId === editingValues.originalTransactionId\n                  ? { ...t, ...editingValues }\n                  : t\n              );\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, ...editingValues } : t\n            )\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t =>\n            t.id === id ? { ...t, ...editingValues } : t\n          )\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => \n        t.id === id ? { ...t, ...editingValues } : t\n      ));\n    }\n    \n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = (transaction) => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = (date) => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1: return day + \"st\";\n      case 2: return day + \"nd\";\n      case 3: return day + \"rd\";\n      default: return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({ length: 6 }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'expense' && \n                   tDate.getMonth() === date.getMonth() &&\n                   !t.skipped;\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'income' && \n                   tDate.getMonth() === date.getMonth();\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n      \n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n      \n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Add these wrapper functions\n  const updateTransactions = (newTransactions) => {\n    setTransactions(newTransactions);\n    localStorage.setItem('transactions', JSON.stringify(newTransactions));\n  };\n\n  const updateMonthlyTransactions = (newMonthlyTransactions) => {\n    setAllMonthsTransactions(newMonthlyTransactions);\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(newMonthlyTransactions));\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n\n    // Ensure paid property is set for expenses\n    const transactionWithPaid = {\n      ...transaction,\n      paid: type === 'expense' ? false : undefined\n    };\n\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(\n        startDate,\n        transaction.frequency,\n        endOfYear\n      );\n\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n\n        const recurringTransaction = {\n          ...transactionWithPaid,\n          id: Date.now() + Math.random(),\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: type === 'expense' ? false : undefined\n        };\n\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n\n      // Update allMonthsTransactions\n      const updatedMonthsTransactions = { ...allMonthsTransactions };\n      Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n        if (!updatedMonthsTransactions[monthKey]) {\n          updatedMonthsTransactions[monthKey] = [];\n        }\n        updatedMonthsTransactions[monthKey] = [\n          ...updatedMonthsTransactions[monthKey],\n          ...transactions\n        ];\n      });\n\n      setAllMonthsTransactions(updatedMonthsTransactions);\n      localStorage.setItem('allMonthsTransactions', JSON.stringify(updatedMonthsTransactions));\n\n    } else {\n      if (type === 'income') {\n        updateTransactions([...transactions, transactionWithPaid]);\n      } else {\n        // Handle one-time expenses\n        const transactionDate = new Date(transaction.dueDate);\n        const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n        \n        const updatedMonthly = {\n          ...allMonthsTransactions,\n          [monthKey]: [\n            ...(allMonthsTransactions[monthKey] || []),\n            { ...transactionWithPaid, paid: false }\n          ]\n        };\n\n        updateMonthlyTransactions(updatedMonthly);\n      }\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = (transactions) => {\n    const income = transactions\n      .filter(t => t.type === 'income')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const paidIncome = transactions\n      .filter(t => t.type === 'income' && t.paid)\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const expenses = transactions\n      .filter(t => t.type === 'expense')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const balance = paidIncome - expenses;\n\n    return { income, paidIncome, expenses, balance };\n  };\n\n  // Add this function near the top of App component\n  const updateCreditCards = (newCards) => {\n    setCreditCards(newCards);\n    localStorage.setItem('creditCards', JSON.stringify(newCards));\n  };\n\n  // Add function to calculate payment summary\n  const calculatePaymentSummary = () => {\n    const expenses = filterTransactions('expense');\n    const total = expenses.reduce((sum, t) => sum + t.amount, 0);\n    const paid = expenses.reduce((sum, t) => t.paid ? sum + t.amount : sum, 0);\n    const remaining = total - paid;\n    \n    return {\n      total: total.toFixed(2),\n      paid: paid.toFixed(2),\n      remaining: remaining.toFixed(2),\n      progress: total > 0 ? (paid / total * 100).toFixed(1) : 0\n    };\n  };\n\n  // Add this sorting function\n  const sortTransactions = (transactions) => {\n    return [...transactions].sort((a, b) => {\n      if (sortConfig.key === 'amount') {\n        return sortConfig.direction === 'asc' \n          ? a.amount - b.amount \n          : b.amount - a.amount;\n      }\n      if (sortConfig.key === 'dueDate') {\n        return sortConfig.direction === 'asc'\n          ? new Date(a.dueDate) - new Date(b.dueDate)\n          : new Date(b.dueDate) - new Date(a.dueDate);\n      }\n      if (sortConfig.key === 'description') {\n        return sortConfig.direction === 'asc'\n          ? a.description.localeCompare(b.description)\n          : b.description.localeCompare(a.description);\n      }\n      return 0;\n    });\n  };\n\n  // Rename this function to applyFilters\n  const applyFilters = (transactions) => {\n    return transactions.filter(transaction => {\n      const matchesCategory = filterConfig.category === 'all' || transaction.category === filterConfig.category;\n      const matchesStatus = filterConfig.status === 'all' \n        || (filterConfig.status === 'paid' && transaction.paid)\n        || (filterConfig.status === 'unpaid' && !transaction.paid);\n      const matchesSearch = transaction.description.toLowerCase().includes(filterConfig.search.toLowerCase());\n      \n      return matchesCategory && matchesStatus && matchesSearch;\n    });\n  };\n\n  // Add this function to handle form toggling\n  const toggleForm = (formName) => {\n    if (activeForm === formName) {\n      setActiveForm(null);\n      setIsIncomeOpen(false);\n      setIsExpenseOpen(false);\n    } else {\n      setActiveForm(formName);\n      if (formName === 'income') {\n        setIsIncomeOpen(true);\n        setIsExpenseOpen(false);\n      } else {\n        setIsExpenseOpen(true);\n        setIsIncomeOpen(false);\n      }\n    }\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      <header className=\"finance-header\">\n        <div className=\"theme-toggle\">\n          <button \n            onClick={() => setIsDarkMode(!isDarkMode)}\n            className=\"theme-toggle-btn\"\n            title={isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n          >\n            <i className={`fas fa-${isDarkMode ? 'sun' : 'moon'}`}></i>\n          </button>\n        </div>\n        <h1 className=\"gradient-text\">Finance Tracker</h1>\n        \n        {/* Update the navigation section */}\n        <div className=\"app-navigation\">\n          {/* Main Tabs */}\n          <Nav variant=\"tabs\" className=\"main-nav\">\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'budget'}\n                onClick={() => setActiveTab('budget')}\n              >\n                <i className=\"fas fa-wallet me-2\"></i>\n                Budget Tracker\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'credit'}\n                onClick={() => setActiveTab('credit')}\n              >\n                <i className=\"fas fa-credit-card me-2\"></i>\n                Credit Cards\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n\n          {/* Month Navigation - Only show for budget tab */}\n          {activeTab === 'budget' && (\n            <div className=\"month-navigation\">\n              <button \n                className=\"nav-btn prev\"\n                onClick={() => {\n                  if (currentMonth === 0) {\n                    setCurrentYear(prev => prev - 1);\n                    setCurrentMonth(11);\n                  } else {\n                    setCurrentMonth(prev => prev - 1);\n                  }\n                }}\n                aria-label=\"Previous month\"\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n              \n              <div className=\"month-select\">\n                <select \n                  value={currentMonth}\n                  onChange={(e) => setCurrentMonth(Number(e.target.value))}\n                  className=\"month-dropdown\"\n                  aria-label=\"Select month\"\n                >\n                  {months.map((month, index) => (\n                    <option key={index} value={index}>{month}</option>\n                  ))}\n                </select>\n                <select \n                  value={currentYear}\n                  onChange={(e) => setCurrentYear(Number(e.target.value))}\n                  className=\"year-dropdown\"\n                  aria-label=\"Select year\"\n                >\n                  {Array.from({ length: 5 }, (_, i) => (\n                    <option key={i} value={currentYear - 2 + i}>\n                      {currentYear - 2 + i}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <button \n                className=\"nav-btn next\"\n                onClick={() => {\n                  if (currentMonth === 11) {\n                    setCurrentYear(prev => prev + 1);\n                    setCurrentMonth(0);\n                  } else {\n                    setCurrentMonth(prev => prev + 1);\n                  }\n                }}\n                aria-label=\"Next month\"\n              >\n                <i className=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </header>\n\n      {/* Conditional Rendering based on active tab */}\n      {activeTab === 'budget' ? (\n        <>\n          {/* Forms Section - Side by Side */}\n          <div className=\"row\">\n            {/* Expense Form */}\n            <div className=\"col-md-8 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-danger text-white\">\n                  <Button\n                    onClick={() => toggleForm('expense')}\n                    aria-controls=\"expenseForm\"\n                    aria-expanded={isExpenseOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Expenses</h3>\n                        <i className={`fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                {/* Add backdrop for mobile */}\n                <div \n                  className={`mobile-form-backdrop ${isExpenseOpen ? 'show' : ''}`}\n                  onClick={() => toggleForm('expense')}\n                />\n                <Collapse in={isExpenseOpen}>\n                  <div id=\"expenseForm\">\n                    <Card.Body>\n                      <form onSubmit={handleExpenseSubmit} className=\"transaction-form\">\n                        <input\n                          type=\"text\"\n                          value={expenseDescription}\n                          onChange={(e) => setExpenseDescription(e.target.value)}\n                          placeholder=\"Expense Item\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={expenseAmount}\n                          onChange={(e) => setExpenseAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={category} \n                          onChange={(e) => setCategory(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Category</option>\n                          <option value=\"Bills\">Bills</option>\n                          <option value=\"Savings\">Savings</option>\n                          <option value=\"Personal\">Personal</option>\n                          <option value=\"Other\">Other...</option>\n                        </select>\n                        {/* Show custom category input when \"Other\" is selected */}\n                        {category === 'Other' && (\n                          <input\n                            type=\"text\"\n                            value={customCategory}\n                            onChange={(e) => setCustomCategory(e.target.value)}\n                            placeholder=\"Enter custom category\"\n                            className=\"form-control mt-2\"\n                            required\n                          />\n                        )}\n                        <input\n                          type=\"date\"\n                          value={dueDate}\n                          onChange={(e) => setDueDate(e.target.value)}\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={frequency} \n                          onChange={(e) => setFrequency(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Frequency</option>\n                          <option value=\"Monthly\">Monthly</option>\n                          <option value=\"Bi-Weekly\">Bi-Weekly</option>\n                          <option value=\"Weekly\">Weekly</option>\n                        </select>\n                        <button type=\"submit\" className=\"btn btn-danger\">\n                          Add Expense\n                        </button>\n                      </form>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n\n            {/* Income Form */}\n            <div className=\"col-md-4 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-success text-white\">\n                  <Button\n                    onClick={() => toggleForm('income')}\n                    aria-controls=\"incomeSection\"\n                    aria-expanded={isIncomeOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Income</h3>\n                        <i className={`fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                {/* Add backdrop for mobile */}\n                <div \n                  className={`mobile-form-backdrop ${isIncomeOpen ? 'show' : ''}`}\n                  onClick={() => toggleForm('income')}\n                />\n                <Collapse in={isIncomeOpen}>\n                  <div id=\"incomeSection\">\n                    <Card.Body>\n                      <form onSubmit={handleIncomeSubmit} className=\"transaction-form mb-4\">\n                        <input\n                          type=\"text\"\n                          value={incomeDescription}\n                          onChange={(e) => setIncomeDescription(e.target.value)}\n                          placeholder=\"Income Source\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={incomeAmount}\n                          onChange={(e) => setIncomeAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <button type=\"submit\" className=\"btn btn-success\">\n                          Add Income\n                        </button>\n                      </form>\n                      <div className=\"table-responsive\">\n                        <table className=\"table\">\n                          <thead>\n                            <tr>\n                              <th>Description</th>\n                              <th>Amount</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {sortTransactions(applyFilters(filterTransactions('income'))).map(transaction => (\n                              <tr key={transaction.id}>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"text\"\n                                      value={editingValues.description || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        description: e.target.value\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                    />\n                                  ) : (\n                                    transaction.description\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"number\"\n                                      value={editingValues.amount || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        amount: parseFloat(e.target.value)\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                      step=\"0.01\"\n                                    />\n                                  ) : (\n                                    <span className=\"text-success\">${transaction.amount.toFixed(2)}</span>\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <>\n                                      <button\n                                        onClick={() => saveEdit(transaction.id)}\n                                        className=\"btn-icon\"\n                                        title=\"Save changes\"\n                                      >\n                                        <i className=\"fas fa-save\"></i>\n                                        <span>Save</span>\n                                      </button>\n                                      <button\n                                        onClick={cancelEdit}\n                                        className=\"btn-icon delete\"\n                                        title=\"Cancel editing\"\n                                      >\n                                        <i className=\"fas fa-times\"></i>\n                                        <span>Cancel</span>\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <div className=\"expense-actions\">\n                                      <button\n                                        onClick={() => startEditing(transaction)}\n                                        className=\"btn-icon\"\n                                        title=\"Edit this entry\"\n                                      >\n                                        <i className=\"fas fa-edit\"></i>\n                                        <span>Edit</span>\n                                      </button>\n                                      <button\n                                        onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                        className=\"btn-icon delete\"\n                                        title=\"Delete this entry\"\n                                      >\n                                        <i className=\"fas fa-trash\"></i>\n                                        <span>Delete</span>\n                                      </button>\n                                    </div>\n                                  )}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n          </div>\n\n          {/* Chart Section - Moved above Budget & Expenses */}\n          <div className=\"row mb-4\">\n            <div className=\"col-12\">\n              <div className=\"chart-section\">\n                <h3>Expense Breakdown</h3>\n                <div className=\"chart-container\">\n                  <canvas id=\"expenseChart\"></canvas>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Budget & Expenses Card */}\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header bg-danger text-white\">\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <h3 className=\"mb-0\">Budget & Expenses</h3>\n                    <button \n                      className=\"btn btn-link text-white\" \n                      onClick={() => setIsExpenseListOpen(!isExpenseListOpen)}\n                    >\n                      <i className={`fas fa-chevron-${isExpenseListOpen ? 'up' : 'down'}`}></i>\n                    </button>\n                  </div>\n                </div>\n                \n                <div className=\"card-body\">\n                  {/* Budget Summary Section */}\n                  <div className=\"budget-summary mb-3\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-wallet me-2\"></i>\n                          <span className=\"label\">Monthly Income:</span>\n                          <span className=\"value text-success\">${calculateTotals().income.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-shopping-cart me-2\"></i>\n                          <span className=\"label\">Total Expenses:</span>\n                          <span className=\"value text-danger\">${calculateTotals().expenses.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      <div className=\"col-md-4\">\n                        <div className=\"budget-stat\">\n                          <i className=\"fas fa-piggy-bank me-2\"></i>\n                          <span className=\"label\">Remaining:</span>\n                          <span className=\"value ${(calculateTotals().income - calculateTotals().expenses) >= 0 ? 'text-success' : 'text-danger'}\">\n                            ${(calculateTotals().income - calculateTotals().expenses).toFixed(2)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"payment-summary mt-3\">\n                      {(() => {\n                        const summary = calculatePaymentSummary();\n                        return (\n                          <>\n                            <div className=\"progress mb-2\">\n                              <div \n                                className=\"progress-bar bg-success\" \n                                role=\"progressbar\" \n                                style={{width: `${summary.progress}%`}}\n                                aria-valuenow={summary.progress} \n                                aria-valuemin=\"0\" \n                                aria-valuemax=\"100\"\n                              >\n                                {summary.progress}%\n                              </div>\n                            </div>\n                            <div className=\"summary-grid\">\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Paid:</span>\n                                <span className=\"value text-success\">${summary.paid}</span>\n                              </div>\n                              <div className=\"summary-item\">\n                                <span className=\"label\">Remaining:</span>\n                                <span className=\"value text-danger\">${summary.remaining}</span>\n                              </div>\n                            </div>\n                          </>\n                        );\n                      })()}\n                    </div>\n                  </div>\n\n                  {/* Expense List Section */}\n                  <Collapse in={isExpenseListOpen}>\n                    <div>\n                      {/* Add Filter Controls */}\n                      <div className=\"filters-section mb-4\">\n                        <div className=\"row g-3\">\n                          <div className=\"col-md-3\">\n                            <input\n                              type=\"text\"\n                              className=\"form-control\"\n                              placeholder=\"Search expenses...\"\n                              value={filterConfig.search}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                search: e.target.value\n                              }))}\n                            />\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.category}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                category: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Categories</option>\n                              <option value=\"Bills\">Bills</option>\n                              <option value=\"Savings\">Savings</option>\n                              <option value=\"Personal\">Personal</option>\n                              <option value=\"Other\">Other</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={filterConfig.status}\n                              onChange={(e) => setFilterConfig(prev => ({\n                                ...prev,\n                                status: e.target.value\n                              }))}\n                            >\n                              <option value=\"all\">All Status</option>\n                              <option value=\"paid\">Paid</option>\n                              <option value=\"unpaid\">Unpaid</option>\n                            </select>\n                          </div>\n                          <div className=\"col-md-3\">\n                            <select\n                              className=\"form-select\"\n                              value={`${sortConfig.key}-${sortConfig.direction}`}\n                              onChange={(e) => {\n                                const [key, direction] = e.target.value.split('-');\n                                setSortConfig({ key, direction });\n                              }}\n                            >\n                              <option value=\"dueDate-asc\">Date (Earliest First)</option>\n                              <option value=\"dueDate-desc\">Date (Latest First)</option>\n                              <option value=\"amount-asc\">Amount (Low to High)</option>\n                              <option value=\"amount-desc\">Amount (High to Low)</option>\n                              <option value=\"description-asc\">Name (A to Z)</option>\n                              <option value=\"description-desc\">Name (Z to A)</option>\n                            </select>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"table-responsive\">\n                        <div className=\"expense-list\">\n                          {sortTransactions(applyFilters(filterTransactions('expense'))).map(transaction => (\n                            <div key={transaction.id} className={`expense-item ${transaction.paid ? 'paid' : ''}`}>\n                              <div className=\"expense-main\">\n                                <div className=\"expense-checkbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    checked={transaction.paid || false}\n                                    onChange={() => togglePaid(transaction.id)}\n                                    id={`paid-${transaction.id}`}\n                                  />\n                                  <label className=\"checkmark\" htmlFor={`paid-${transaction.id}`}></label>\n                                </div>\n                                <div className=\"expense-content\">\n                                  {editingId === transaction.id ? (\n                                    // Edit mode\n                                    <div className=\"expense-edit-form\">\n                                      <input\n                                        type=\"text\"\n                                        value={editingValues.description || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          description: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        placeholder=\"Description\"\n                                      />\n                                      <input\n                                        type=\"number\"\n                                        value={editingValues.amount || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          amount: parseFloat(e.target.value)\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                        step=\"0.01\"\n                                        placeholder=\"Amount\"\n                                      />\n                                      <select\n                                        value={editingValues.category || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          category: e.target.value\n                                        })}\n                                        className=\"form-select form-select-sm mb-2\"\n                                      >\n                                        <option value=\"Bills\">Bills</option>\n                                        <option value=\"Savings\">Savings</option>\n                                        <option value=\"Personal\">Personal</option>\n                                        <option value=\"Other\">Other</option>\n                                      </select>\n                                      <input\n                                        type=\"date\"\n                                        value={editingValues.dueDate || ''}\n                                        onChange={(e) => setEditingValues({\n                                          ...editingValues,\n                                          dueDate: e.target.value\n                                        })}\n                                        className=\"form-control form-control-sm mb-2\"\n                                      />\n                                      <div className=\"edit-actions\">\n                                        <button\n                                          onClick={() => saveEdit(transaction.id)}\n                                          className=\"btn btn-success btn-sm me-2\"\n                                        >\n                                          <i className=\"fas fa-save\"></i> Save\n                                        </button>\n                                        <button\n                                          onClick={cancelEdit}\n                                          className=\"btn btn-secondary btn-sm\"\n                                        >\n                                          <i className=\"fas fa-times\"></i> Cancel\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    // Display mode\n                                    <>\n                                      <div className=\"expense-primary\">\n                                        <span className=\"expense-title\">{transaction.description}</span>\n                                        <span className=\"expense-amount\">${transaction.amount.toFixed(2)}</span>\n                                      </div>\n                                      <div className=\"expense-secondary\">\n                                        {transaction.type === 'expense' && (\n                                          <span className=\"expense-tag\">{transaction.category}</span>\n                                        )}\n                                        <span className=\"expense-date\">{getDayWithSuffix(transaction.dueDate)}</span>\n                                        <span className=\"expense-frequency\">{transaction.frequency}</span>\n                                      </div>\n                                    </>\n                                  )}\n                                </div>\n                                {!editingId && (\n                                  <div className=\"expense-actions\">\n                                    <button\n                                      onClick={() => startEditing(transaction)}\n                                      className=\"btn-icon\"\n                                      title=\"Edit\"\n                                    >\n                                      <i className=\"fas fa-edit\"></i>\n                                      <span>Edit</span>\n                                    </button>\n                                    <button\n                                      onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                      className=\"btn-icon delete\"\n                                      title=\"Delete\"\n                                    >\n                                      <i className=\"fas fa-trash\"></i>\n                                      <span>Delete</span>\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </Collapse>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Render current month's page */}\n          <MonthPage\n            month={currentMonth}\n            year={currentYear}\n            transactions={allMonthsTransactions[`${currentYear}-${currentMonth}`] || []}\n            onUpdateTransaction={addTransaction}\n            onDeleteTransaction={deleteTransaction}\n          />\n        </>\n      ) : (\n        <CreditCardTracker \n          creditCards={creditCards} \n          setCreditCards={updateCreditCards}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}