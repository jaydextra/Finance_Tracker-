{"ast":null,"code":"var _jsxFileName = \"/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\n\n// Create theme context\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Add this before the App component.\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction App() {\n  _s2();\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    const savedTransactions = localStorage.getItem('transactions');\n    if (savedTransactions) {\n      setTransactions(JSON.parse(savedTransactions));\n    }\n  }, []);\n\n  // Save transactions to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n  }, [transactions]);\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [chart]);\n\n  // Add this new useEffect to handle localStorage for allMonthsTransactions\n  useEffect(() => {\n    const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n    if (savedMonthsTransactions) {\n      setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n    }\n  }, []);\n\n  // Add this useEffect to save allMonthsTransactions when it changes\n  useEffect(() => {\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(allMonthsTransactions));\n  }, [allMonthsTransactions]);\n\n  // Update the chart update useEffect\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) return;\n\n    // Destroy existing chart\n    if (chart) {\n      chart.destroy();\n    }\n\n    // Get all transactions for the current month\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n\n    // Combine regular and monthly transactions\n    const allTransactions = [...transactions.filter(t => {\n      const tDate = new Date(t.date);\n      return tDate.getMonth() === currentMonth && tDate.getFullYear() === currentYear;\n    }), ...monthTransactions];\n    const categoryTotals = allTransactions.reduce((acc, transaction) => {\n      if (transaction.type === 'expense' && !transaction.skipped) {\n        acc[transaction.category] = (acc[transaction.category] || 0) + transaction.amount;\n      }\n      return acc;\n    }, {});\n\n    // Only create new chart if there's data to display\n    if (Object.keys(categoryTotals).length > 0) {\n      const newChart = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: Object.keys(categoryTotals),\n          datasets: [{\n            data: Object.values(categoryTotals),\n            backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(255, 206, 86, 0.8)', 'rgba(75, 192, 192, 0.8)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            datalabels: {\n              formatter: value => `$${value.toFixed(2)}`,\n              color: 'white',\n              font: {\n                weight: 'bold',\n                size: 12\n              }\n            },\n            legend: {\n              position: 'right',\n              labels: {\n                color: isDarkMode ? '#ffffff' : '#666666',\n                font: {\n                  size: 12\n                }\n              }\n            }\n          }\n        },\n        plugins: [ChartDataLabels]\n      });\n      setChart(newChart);\n    }\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode, chart]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = e => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly',\n      // Add default frequency for income\n      dueDate: new Date().toISOString().split('T')[0] // Add current date as due date\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n\n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    alert('Income added successfully!');\n  };\n  const handleExpenseSubmit = e => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newExpense, 'expense');\n\n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    alert('Expense added successfully!');\n  };\n  const togglePaid = id => {\n    // Check if the transaction is in allMonthsTransactions\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n    if (monthTransaction) {\n      // Update in allMonthsTransactions\n      setAllMonthsTransactions(prev => ({\n        ...prev,\n        [monthKey]: prev[monthKey].map(t => t.id === id ? {\n          ...t,\n          paid: !t.paid,\n          skipped: false\n        } : t)\n      }));\n    } else {\n      // Update in regular transactions\n      setTransactions(transactions.map(t => t.id === id ? {\n        ...t,\n        paid: !t.paid,\n        skipped: false\n      } : t));\n    }\n  };\n  const toggleSkipped = id => {\n    setTransactions(transactions.map(t => t.id === id ? {\n      ...t,\n      skipped: !t.skipped,\n      paid: false\n    } : t));\n  };\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      if (!transaction) {\n        // Check in allMonthsTransactions if not found in transactions\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        if (monthTransaction !== null && monthTransaction !== void 0 && monthTransaction.originalTransactionId) {\n          // If it's a recurring transaction, ask if they want to delete all future occurrences\n          const deleteAll = window.confirm('Delete all future occurrences of this recurring transaction?');\n          if (deleteAll) {\n            // Delete from current month forward\n            const updatedMonthsTransactions = {\n              ...allMonthsTransactions\n            };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || year === currentYear && month >= fromMonth) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey].filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n          } else {\n            // Delete only this occurrence\n            setAllMonthsTransactions(prev => ({\n              ...prev,\n              [monthKey]: prev[monthKey].filter(t => t.id !== transactionId)\n            }));\n          }\n        } else {\n          // Handle one-time transaction deletion\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].filter(t => t.id !== transactionId)\n          }));\n        }\n      } else {\n        // Handle deletion from regular transactions array\n        setTransactions(transactions.filter(t => t.id !== transactionId));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = type => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n\n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\n    });\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n\n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) => index === self.findIndex(t => t.id === transaction.id));\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate.getMonth() === currentMonth && transactionDate.getFullYear() === currentYear;\n    });\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n    return {\n      income: allTransactions.filter(t => t.type === 'income').reduce((sum, t) => sum + t.amount, 0),\n      expenses: allTransactions.filter(t => t.type === 'expense' && !t.skipped).reduce((sum, t) => sum + t.amount, 0),\n      paid: allTransactions.filter(t => t.paid).reduce((sum, t) => sum + t.amount, 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = id => {\n    var _allMonthsTransaction;\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = (_allMonthsTransaction = allMonthsTransactions[monthKey]) === null || _allMonthsTransaction === void 0 ? void 0 : _allMonthsTransaction.some(t => t.id === id);\n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm('Do you want to apply these changes to all future occurrences?');\n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = {\n            ...allMonthsTransactions\n          };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || year === currentYear && month >= currentMonth) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t => t.originalTransactionId === editingValues.originalTransactionId ? {\n                ...t,\n                ...editingValues\n              } : t);\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t => t.id === id ? {\n              ...t,\n              ...editingValues\n            } : t)\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t => t.id === id ? {\n            ...t,\n            ...editingValues\n          } : t)\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => t.id === id ? {\n        ...t,\n        ...editingValues\n      } : t));\n    }\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = transaction => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = date => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1:\n        return day + \"st\";\n      case 2:\n        return day + \"nd\";\n      case 3:\n        return day + \"rd\";\n      default:\n        return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({\n      length: 6\n    }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions.filter(t => {\n          const tDate = new Date(t.date);\n          return t.type === 'expense' && tDate.getMonth() === date.getMonth() && !t.skipped;\n        }).reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions.filter(t => {\n          const tDate = new Date(t.date);\n          return t.type === 'income' && tDate.getMonth() === date.getMonth();\n        }).reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n\n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n\n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n\n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n    console.log('Adding transaction:', {\n      transaction,\n      type,\n      isRecurring,\n      startDate,\n      endOfYear\n    });\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(startDate, transaction.frequency, endOfYear);\n      console.log('Generated recurring dates:', recurringDates.length);\n\n      // Group transactions by month\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n        const recurringTransaction = {\n          ...transaction,\n          id: Date.now() + Math.random(),\n          // Ensure unique IDs\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: false // Reset paid status for each occurrence\n        };\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n      console.log('Transactions grouped by month:', transactionsByMonth);\n\n      // Update allMonthsTransactions\n      setAllMonthsTransactions(prev => {\n        const updated = {\n          ...prev\n        };\n        Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n          if (!updated[monthKey]) {\n            updated[monthKey] = [];\n          }\n          updated[monthKey] = [...updated[monthKey], ...transactions];\n        });\n        return updated;\n      });\n    } else {\n      // Handle one-time transactions\n      const transactionDate = new Date(transaction.dueDate);\n      const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n      setAllMonthsTransactions(prev => ({\n        ...prev,\n        [monthKey]: [...(prev[monthKey] || []), {\n          ...transaction,\n          paid: false\n        }]\n      }));\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = transactions => {\n    const income = transactions.filter(t => t.type === 'income').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const paidIncome = transactions.filter(t => t.type === 'income' && t.paid).reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const expenses = transactions.filter(t => t.type === 'expense').reduce((sum, t) => sum + parseFloat(t.amount), 0);\n    const balance = paidIncome - expenses;\n    return {\n      income,\n      paidIncome,\n      expenses,\n      balance\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"finance-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsDarkMode(!isDarkMode),\n          className: \"theme-toggle-btn\",\n          title: isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas fa-${isDarkMode ? 'sun' : 'moon'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gradient-text\",\n        children: \"Finance Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          variant: \"tabs\",\n          className: \"main-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              active: activeTab === 'budget',\n              onClick: () => setActiveTab('budget'),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-wallet me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 17\n              }, this), \"Budget Tracker\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              active: activeTab === 'credit',\n              onClick: () => setActiveTab('credit'),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-credit-card me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 17\n              }, this), \"Credit Cards\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), activeTab === 'budget' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn prev\",\n            onClick: () => {\n              if (currentMonth === 0) {\n                setCurrentYear(prev => prev - 1);\n                setCurrentMonth(11);\n              } else {\n                setCurrentMonth(prev => prev - 1);\n              }\n            },\n            \"aria-label\": \"Previous month\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-arrow-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentMonth,\n              onChange: e => setCurrentMonth(Number(e.target.value)),\n              className: \"month-dropdown\",\n              \"aria-label\": \"Select month\",\n              children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: index,\n                children: month\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentYear,\n              onChange: e => setCurrentYear(Number(e.target.value)),\n              className: \"year-dropdown\",\n              \"aria-label\": \"Select year\",\n              children: Array.from({\n                length: 5\n              }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: currentYear - 2 + i,\n                children: currentYear - 2 + i\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"nav-btn next\",\n            onClick: () => {\n              if (currentMonth === 11) {\n                setCurrentYear(prev => prev + 1);\n                setCurrentMonth(0);\n              } else {\n                setCurrentMonth(prev => prev + 1);\n              }\n            },\n            \"aria-label\": \"Next month\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-arrow-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this), activeTab === 'budget' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-row income\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", calculateTotals().income.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-row expenses\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Expenses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", calculateTotals().expenses.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-row balance\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-label\",\n                children: \"Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-value\",\n                children: [\"$\", (calculateTotals().income - calculateTotals().expenses).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Expense Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                id: \"expenseChart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-danger text-white\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setIsExpenseOpen(!isExpenseOpen),\n                \"aria-controls\": \"expenseForm\",\n                \"aria-expanded\": isExpenseOpen,\n                variant: \"link\",\n                className: \"text-white w-100 text-start p-0\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"mb-0\",\n                      children: \"Expenses\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 760,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 759,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: isExpenseOpen,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"expenseForm\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleExpenseSubmit,\n                    className: \"transaction-form\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: expenseDescription,\n                      onChange: e => setExpenseDescription(e.target.value),\n                      placeholder: \"Expense Item\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 770,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: expenseAmount,\n                      onChange: e => setExpenseAmount(e.target.value),\n                      placeholder: \"Amount\",\n                      step: \"0.01\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 778,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: category,\n                      onChange: e => setCategory(e.target.value),\n                      className: \"form-select\",\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Category\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 793,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Bills\",\n                        children: \"Bills\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 794,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Savings\",\n                        children: \"Savings\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 795,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Personal\",\n                        children: \"Personal\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 796,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Other\",\n                        children: \"Other\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 797,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 787,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"date\",\n                      value: dueDate,\n                      onChange: e => setDueDate(e.target.value),\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 799,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: frequency,\n                      onChange: e => setFrequency(e.target.value),\n                      className: \"form-select\",\n                      required: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Select Frequency\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 812,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Monthly\",\n                        children: \"Monthly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 813,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Bi-Weekly\",\n                        children: \"Bi-Weekly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 814,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Weekly\",\n                        children: \"Weekly\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 815,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 806,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-danger\",\n                      children: \"Add Expense\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 817,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 769,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"bg-success text-white\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => setIsIncomeOpen(!isIncomeOpen),\n                \"aria-controls\": \"incomeSection\",\n                \"aria-expanded\": isIncomeOpen,\n                variant: \"link\",\n                className: \"text-white w-100 text-start p-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"mb-0\",\n                      children: \"Income\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 840,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: `fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 839,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"current-income-display mt-2\",\n                  children: [\"Total Monthly Income: $\", calculateTotals().income.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 844,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: isIncomeOpen,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"incomeSection\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleIncomeSubmit,\n                    className: \"transaction-form mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: incomeDescription,\n                      onChange: e => setIncomeDescription(e.target.value),\n                      placeholder: \"Income Source\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 853,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: incomeAmount,\n                      onChange: e => setIncomeAmount(e.target.value),\n                      placeholder: \"Amount\",\n                      step: \"0.01\",\n                      className: \"form-control\",\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 861,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-success\",\n                      children: \"Add Income\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 870,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-hover\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Description\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 878,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Amount\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 879,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Paid\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 880,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: \"Actions\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 881,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 877,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 876,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: filterTransactions('income').map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              value: editingValues.description || '',\n                              onChange: e => setEditingValues({\n                                ...editingValues,\n                                description: e.target.value\n                              }),\n                              className: \"form-control form-control-sm\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 889,\n                              columnNumber: 37\n                            }, this) : transaction.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 887,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"number\",\n                              value: editingValues.amount || '',\n                              onChange: e => setEditingValues({\n                                ...editingValues,\n                                amount: parseFloat(e.target.value)\n                              }),\n                              className: \"form-control form-control-sm\",\n                              step: \"0.01\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 904,\n                              columnNumber: 37\n                            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"text-success\",\n                              children: [\"$\", transaction.amount.toFixed(2)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 915,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 902,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"expense-checkbox\",\n                              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"checkbox\",\n                                checked: transaction.paid,\n                                onChange: () => togglePaid(transaction.id),\n                                id: `paid-income-${transaction.id}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 920,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"checkmark\",\n                                htmlFor: `paid-income-${transaction.id}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 926,\n                                columnNumber: 37\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 919,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 918,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: editingId === transaction.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => saveEdit(transaction.id),\n                                className: \"btn-icon\",\n                                title: \"Save changes\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-save\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 937,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Save\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 938,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 932,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: cancelEdit,\n                                className: \"btn-icon delete\",\n                                title: \"Cancel editing\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-times\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 945,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Cancel\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 946,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 940,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"expense-actions\",\n                              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => startEditing(transaction),\n                                className: \"btn-icon\",\n                                title: \"Edit this entry\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-edit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 956,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Edit\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 957,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 951,\n                                columnNumber: 39\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                onClick: () => deleteTransaction(transaction.id, currentMonth),\n                                className: \"btn-icon delete\",\n                                title: \"Delete this entry\",\n                                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                  className: \"fas fa-trash\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 964,\n                                  columnNumber: 41\n                                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                  children: \"Delete\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 965,\n                                  columnNumber: 41\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 959,\n                                columnNumber: 39\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 950,\n                              columnNumber: 37\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 929,\n                            columnNumber: 33\n                          }, this)]\n                        }, transaction.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 886,\n                          columnNumber: 31\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 884,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 875,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 874,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header bg-danger text-white\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-0\",\n                children: \"Expenses List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 987,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"expense-list\",\n                  children: filterTransactions('expense').map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `expense-item ${transaction.paid ? 'paid' : ''}`,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"expense-main\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"expense-checkbox\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          checked: transaction.paid,\n                          onChange: () => togglePaid(transaction.id),\n                          id: `paid-${transaction.id}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 997,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"checkmark\",\n                          htmlFor: `paid-${transaction.id}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1003,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 996,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"expense-content\",\n                        children: editingId === transaction.id ?\n                        /*#__PURE__*/\n                        // Edit mode\n                        _jsxDEV(\"div\", {\n                          className: \"expense-edit-form\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            value: editingValues.description || '',\n                            onChange: e => setEditingValues({\n                              ...editingValues,\n                              description: e.target.value\n                            }),\n                            className: \"form-control form-control-sm mb-2\",\n                            placeholder: \"Description\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1009,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"number\",\n                            value: editingValues.amount || '',\n                            onChange: e => setEditingValues({\n                              ...editingValues,\n                              amount: parseFloat(e.target.value)\n                            }),\n                            className: \"form-control form-control-sm mb-2\",\n                            step: \"0.01\",\n                            placeholder: \"Amount\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1019,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                            value: editingValues.category || '',\n                            onChange: e => setEditingValues({\n                              ...editingValues,\n                              category: e.target.value\n                            }),\n                            className: \"form-select form-select-sm mb-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"Bills\",\n                              children: \"Bills\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1038,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"Savings\",\n                              children: \"Savings\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1039,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"Personal\",\n                              children: \"Personal\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1040,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                              value: \"Other\",\n                              children: \"Other\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1041,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1030,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"date\",\n                            value: editingValues.dueDate || '',\n                            onChange: e => setEditingValues({\n                              ...editingValues,\n                              dueDate: e.target.value\n                            }),\n                            className: \"form-control form-control-sm mb-2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1043,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"edit-actions\",\n                            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: () => saveEdit(transaction.id),\n                              className: \"btn btn-success btn-sm me-2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fas fa-save\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1057,\n                                columnNumber: 39\n                              }, this), \" Save\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1053,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: cancelEdit,\n                              className: \"btn btn-secondary btn-sm\",\n                              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"fas fa-times\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1063,\n                                columnNumber: 39\n                              }, this), \" Cancel\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1059,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1052,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1008,\n                          columnNumber: 33\n                        }, this) :\n                        /*#__PURE__*/\n                        // Display mode\n                        _jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"expense-primary\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-title\",\n                              children: transaction.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1071,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-amount\",\n                              children: [\"$\", transaction.amount.toFixed(2)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1072,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1070,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"expense-secondary\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-tag\",\n                              children: transaction.category\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1075,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-date\",\n                              children: getDayWithSuffix(transaction.dueDate)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1076,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"expense-frequency\",\n                              children: transaction.frequency\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1077,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1074,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1005,\n                        columnNumber: 29\n                      }, this), !editingId && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"expense-actions\",\n                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => startEditing(transaction),\n                          className: \"btn-icon\",\n                          title: \"Edit\",\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-edit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1089,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Edit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1090,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1084,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => deleteTransaction(transaction.id, currentMonth),\n                          className: \"btn-icon delete\",\n                          title: \"Delete\",\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-trash\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1097,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Delete\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1098,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1092,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1083,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 995,\n                      columnNumber: 27\n                    }, this)\n                  }, transaction.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 994,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MonthPage, {\n        month: currentMonth,\n        year: currentYear,\n        transactions: allMonthsTransactions[`${currentYear}-${currentMonth}`] || [],\n        onUpdateTransaction: addTransaction,\n        onDeleteTransaction: deleteTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(CreditCardTracker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 614,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"H21qWxAkPHb4BNtrplWIjpPoF0A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Chart","ChartDataLabels","Collapse","Button","Card","Nav","Line","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","MonthPage","CreditCardTracker","jsxDEV","_jsxDEV","Fragment","_Fragment","register","ThemeContext","useTheme","_s","App","_s2","transactions","setTransactions","incomeDescription","setIncomeDescription","incomeAmount","setIncomeAmount","expenseDescription","setExpenseDescription","expenseAmount","setExpenseAmount","category","setCategory","dueDate","setDueDate","Date","toISOString","split","frequency","setFrequency","currentMonth","setCurrentMonth","getMonth","chart","setChart","isIncomeOpen","setIsIncomeOpen","isIncomeListOpen","setIsIncomeListOpen","isExpenseOpen","setIsExpenseOpen","editingId","setEditingId","editingValues","setEditingValues","isDarkMode","setIsDarkMode","currentYear","setCurrentYear","getFullYear","allMonthsTransactions","setAllMonthsTransactions","activeTab","setActiveTab","months","savedTransactions","localStorage","getItem","JSON","parse","setItem","stringify","destroy","savedMonthsTransactions","ctx","document","getElementById","monthKey","monthTransactions","allTransactions","filter","t","tDate","date","categoryTotals","reduce","acc","transaction","type","skipped","amount","Object","keys","length","newChart","data","labels","datasets","values","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","datalabels","formatter","value","toFixed","color","font","weight","size","legend","position","handleIncomeSubmit","e","preventDefault","alert","newIncome","id","now","description","parseFloat","addTransaction","handleExpenseSubmit","newExpense","paid","togglePaid","monthTransaction","find","prev","map","toggleSkipped","deleteTransaction","transactionId","fromMonth","window","confirm","originalTransactionId","deleteAll","updatedMonthsTransactions","forEach","year","month","Number","filterTransactions","regularTransactions","transactionDate","recurringTransactions","combined","index","self","findIndex","calculateTotals","income","sum","expenses","saveEdit","_allMonthsTransaction","isMonthTransaction","some","editFuture","key","startEditing","toString","cancelEdit","getDayWithSuffix","day","getDate","getMonthlyTrends","last6Months","Array","from","_","i","d","setMonth","reverse","generateRecurringDates","startDate","endDate","dates","currentDate","end","setHours","console","log","push","originalDay","setDate","endOfYear","isRecurring","recurringDates","transactionsByMonth","recurringTransaction","Math","random","updated","entries","calculateSummary","paidIncome","balance","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","variant","Item","Link","active","onChange","target","Header","in","Body","onSubmit","placeholder","required","step","checked","htmlFor","onUpdateTransaction","onDeleteTransaction","_c","$RefreshReg$"],"sources":["/Users/machome/Documents/GitHub/Finance_Tracker-/src/App.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\n// src/App.js\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport Chart from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Collapse, Button, Card, Nav } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n} from 'chart.js';\nimport MonthPage from './components/MonthPage';\nimport CreditCardTracker from './components/CreditCardTracker';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  ArcElement\n);\n\n// Create theme context\nconst ThemeContext = createContext();\n\n// Add this before the App component.\nexport const useTheme = () => useContext(ThemeContext);\n\nfunction App() {\n  const [transactions, setTransactions] = useState([]);\n  const [incomeDescription, setIncomeDescription] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [category, setCategory] = useState('Bills');\n  const [dueDate, setDueDate] = useState(new Date().toISOString().split('T')[0]);\n  const [frequency, setFrequency] = useState('Monthly');\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [chart, setChart] = useState(null);\n  const [isIncomeOpen, setIsIncomeOpen] = useState(false);\n  const [isIncomeListOpen, setIsIncomeListOpen] = useState(true);\n  const [isExpenseOpen, setIsExpenseOpen] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [editingValues, setEditingValues] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [allMonthsTransactions, setAllMonthsTransactions] = useState({});\n  const [activeTab, setActiveTab] = useState('budget');\n\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  // Load transactions from localStorage on component mount\n  useEffect(() => {\n    const savedTransactions = localStorage.getItem('transactions');\n    if (savedTransactions) {\n      setTransactions(JSON.parse(savedTransactions));\n    }\n  }, []);\n\n  // Save transactions to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n  }, [transactions]);\n\n  // Clean up chart on component unmount\n  useEffect(() => {\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [chart]);\n\n  // Add this new useEffect to handle localStorage for allMonthsTransactions\n  useEffect(() => {\n    const savedMonthsTransactions = localStorage.getItem('allMonthsTransactions');\n    if (savedMonthsTransactions) {\n      setAllMonthsTransactions(JSON.parse(savedMonthsTransactions));\n    }\n  }, []);\n\n  // Add this useEffect to save allMonthsTransactions when it changes\n  useEffect(() => {\n    localStorage.setItem('allMonthsTransactions', JSON.stringify(allMonthsTransactions));\n  }, [allMonthsTransactions]);\n\n  // Update the chart update useEffect\n  useEffect(() => {\n    const ctx = document.getElementById('expenseChart');\n    if (!ctx) return;\n\n    // Destroy existing chart\n    if (chart) {\n      chart.destroy();\n    }\n\n    // Get all transactions for the current month\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    // Combine regular and monthly transactions\n    const allTransactions = [\n      ...transactions.filter(t => {\n        const tDate = new Date(t.date);\n        return tDate.getMonth() === currentMonth && \n               tDate.getFullYear() === currentYear;\n      }),\n      ...monthTransactions\n    ];\n\n    const categoryTotals = allTransactions.reduce((acc, transaction) => {\n      if (transaction.type === 'expense' && !transaction.skipped) {\n        acc[transaction.category] = (acc[transaction.category] || 0) + transaction.amount;\n      }\n      return acc;\n    }, {});\n\n    // Only create new chart if there's data to display\n    if (Object.keys(categoryTotals).length > 0) {\n      const newChart = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: Object.keys(categoryTotals),\n          datasets: [{\n            data: Object.values(categoryTotals),\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.8)',\n              'rgba(54, 162, 235, 0.8)',\n              'rgba(255, 206, 86, 0.8)',\n              'rgba(75, 192, 192, 0.8)'\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n              'rgba(75, 192, 192, 1)'\n            ],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            datalabels: {\n              formatter: (value) => `$${value.toFixed(2)}`,\n              color: 'white',\n              font: { \n                weight: 'bold',\n                size: 12\n              }\n            },\n            legend: {\n              position: 'right',\n              labels: {\n                color: isDarkMode ? '#ffffff' : '#666666',\n                font: {\n                  size: 12\n                }\n              }\n            }\n          }\n        },\n        plugins: [ChartDataLabels]\n      });\n\n      setChart(newChart);\n    }\n  }, [currentMonth, currentYear, transactions, allMonthsTransactions, isDarkMode, chart]);\n\n  // Separate submit handlers for income and expenses\n  const handleIncomeSubmit = (e) => {\n    e.preventDefault();\n    if (!incomeDescription || !incomeAmount) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n\n    const newIncome = {\n      id: Date.now(),\n      description: incomeDescription,\n      amount: parseFloat(incomeAmount),\n      type: 'income',\n      date: new Date().toISOString(),\n      frequency: 'Monthly', // Add default frequency for income\n      dueDate: new Date().toISOString().split('T')[0] // Add current date as due date\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newIncome, 'income');\n    \n    // Clear form\n    setIncomeDescription('');\n    setIncomeAmount('');\n    alert('Income added successfully!');\n  };\n\n  const handleExpenseSubmit = (e) => {\n    e.preventDefault();\n    if (!expenseDescription || !expenseAmount || !dueDate || !category) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n\n    const newExpense = {\n      id: Date.now(),\n      description: expenseDescription,\n      amount: parseFloat(expenseAmount),\n      type: 'expense',\n      category,\n      dueDate,\n      frequency,\n      paid: false,\n      skipped: false,\n      date: new Date().toISOString()\n    };\n\n    // Use addTransaction instead of directly updating transactions\n    addTransaction(newExpense, 'expense');\n    \n    // Clear form\n    setExpenseDescription('');\n    setExpenseAmount('');\n    alert('Expense added successfully!');\n  };\n\n  const togglePaid = (id) => {\n    // Check if the transaction is in allMonthsTransactions\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    const monthTransaction = monthTransactions.find(t => t.id === id);\n\n    if (monthTransaction) {\n      // Update in allMonthsTransactions\n      setAllMonthsTransactions(prev => ({\n        ...prev,\n        [monthKey]: prev[monthKey].map(t =>\n          t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n        )\n      }));\n    } else {\n      // Update in regular transactions\n      setTransactions(transactions.map(t =>\n        t.id === id ? { ...t, paid: !t.paid, skipped: false } : t\n      ));\n    }\n  };\n\n  const toggleSkipped = (id) => {\n    setTransactions(transactions.map(t => \n      t.id === id ? { ...t, skipped: !t.skipped, paid: false } : t\n    ));\n  };\n\n  const deleteTransaction = (transactionId, fromMonth) => {\n    if (window.confirm('Delete this transaction?')) {\n      const transaction = transactions.find(t => t.id === transactionId);\n      \n      if (!transaction) {\n        // Check in allMonthsTransactions if not found in transactions\n        const monthKey = `${currentYear}-${fromMonth}`;\n        const monthTransactions = allMonthsTransactions[monthKey] || [];\n        const monthTransaction = monthTransactions.find(t => t.id === transactionId);\n        \n        if (monthTransaction?.originalTransactionId) {\n          // If it's a recurring transaction, ask if they want to delete all future occurrences\n          const deleteAll = window.confirm(\n            'Delete all future occurrences of this recurring transaction?'\n          );\n          \n          if (deleteAll) {\n            // Delete from current month forward\n            const updatedMonthsTransactions = { ...allMonthsTransactions };\n            Object.keys(updatedMonthsTransactions).forEach(monthKey => {\n              const [year, month] = monthKey.split('-').map(Number);\n              if (year > currentYear || (year === currentYear && month >= fromMonth)) {\n                updatedMonthsTransactions[monthKey] = updatedMonthsTransactions[monthKey]\n                  .filter(t => t.originalTransactionId !== monthTransaction.originalTransactionId);\n              }\n            });\n            setAllMonthsTransactions(updatedMonthsTransactions);\n          } else {\n            // Delete only this occurrence\n            setAllMonthsTransactions(prev => ({\n              ...prev,\n              [monthKey]: prev[monthKey].filter(t => t.id !== transactionId)\n            }));\n          }\n        } else {\n          // Handle one-time transaction deletion\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].filter(t => t.id !== transactionId)\n          }));\n        }\n      } else {\n        // Handle deletion from regular transactions array\n        setTransactions(transactions.filter(t => t.id !== transactionId));\n      }\n    }\n  };\n\n  // Update the filterTransactions function to properly combine both sources\n  const filterTransactions = (type) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    // Get transactions from both sources\n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return t.type === type && \n             transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const recurringTransactions = monthTransactions.filter(t => t.type === type);\n    \n    // Combine and remove duplicates\n    const combined = [...regularTransactions, ...recurringTransactions];\n    return combined.filter((transaction, index, self) =>\n      index === self.findIndex(t => t.id === transaction.id)\n    );\n  };\n\n  // Update calculateTotals to include both regular and recurring transactions\n  const calculateTotals = () => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const monthTransactions = allMonthsTransactions[monthKey] || [];\n    \n    const regularTransactions = transactions.filter(t => {\n      const transactionDate = new Date(t.date);\n      return transactionDate.getMonth() === currentMonth &&\n             transactionDate.getFullYear() === currentYear;\n    });\n\n    const allTransactions = [...regularTransactions, ...monthTransactions];\n\n    return {\n      income: allTransactions\n        .filter(t => t.type === 'income')\n        .reduce((sum, t) => sum + t.amount, 0),\n      expenses: allTransactions\n        .filter(t => t.type === 'expense' && !t.skipped)\n        .reduce((sum, t) => sum + t.amount, 0),\n      paid: allTransactions\n        .filter(t => t.paid)\n        .reduce((sum, t) => sum + t.amount, 0)\n    };\n  };\n\n  // Update the saveEdit function\n  const saveEdit = (id) => {\n    const monthKey = `${currentYear}-${currentMonth}`;\n    const isMonthTransaction = allMonthsTransactions[monthKey]?.some(t => t.id === id);\n    \n    if (isMonthTransaction) {\n      // Handle editing recurring transactions\n      if (editingValues.originalTransactionId) {\n        const editFuture = window.confirm(\n          'Do you want to apply these changes to all future occurrences?'\n        );\n        \n        if (editFuture) {\n          // Update all future occurrences\n          const updatedMonthsTransactions = { ...allMonthsTransactions };\n          Object.keys(updatedMonthsTransactions).forEach(key => {\n            const [year, month] = key.split('-').map(Number);\n            if (year > currentYear || (year === currentYear && month >= currentMonth)) {\n              updatedMonthsTransactions[key] = updatedMonthsTransactions[key].map(t =>\n                t.originalTransactionId === editingValues.originalTransactionId\n                  ? { ...t, ...editingValues }\n                  : t\n              );\n            }\n          });\n          setAllMonthsTransactions(updatedMonthsTransactions);\n        } else {\n          // Update only this occurrence\n          setAllMonthsTransactions(prev => ({\n            ...prev,\n            [monthKey]: prev[monthKey].map(t =>\n              t.id === id ? { ...t, ...editingValues } : t\n            )\n          }));\n        }\n      } else {\n        // Update one-time transaction\n        setAllMonthsTransactions(prev => ({\n          ...prev,\n          [monthKey]: prev[monthKey].map(t =>\n            t.id === id ? { ...t, ...editingValues } : t\n          )\n        }));\n      }\n    } else {\n      // Handle regular transactions\n      setTransactions(transactions.map(t => \n        t.id === id ? { ...t, ...editingValues } : t\n      ));\n    }\n    \n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Update the startEditing function\n  const startEditing = (transaction) => {\n    setEditingId(transaction.id);\n    setEditingValues({\n      ...transaction,\n      amount: transaction.amount.toString()\n    });\n  };\n\n  // Add this function to cancel editing\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditingValues({});\n  };\n\n  // Add this helper function at the top of your App component\n  const getDayWithSuffix = (date) => {\n    const day = new Date(date).getDate();\n    if (day > 3 && day < 21) return day + 'th';\n    switch (day % 10) {\n      case 1: return day + \"st\";\n      case 2: return day + \"nd\";\n      case 3: return day + \"rd\";\n      default: return day + \"th\";\n    }\n  };\n\n  // Add this function in your App component\n  const getMonthlyTrends = () => {\n    const last6Months = Array.from({ length: 6 }, (_, i) => {\n      const d = new Date();\n      d.setMonth(d.getMonth() - i);\n      return d;\n    }).reverse();\n\n    return {\n      labels: last6Months.map(date => months[date.getMonth()]),\n      expenses: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'expense' && \n                   tDate.getMonth() === date.getMonth() &&\n                   !t.skipped;\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      }),\n      income: last6Months.map(date => {\n        return transactions\n          .filter(t => {\n            const tDate = new Date(t.date);\n            return t.type === 'income' && \n                   tDate.getMonth() === date.getMonth();\n          })\n          .reduce((sum, t) => sum + t.amount, 0);\n      })\n    };\n  };\n\n  // Update the generateRecurringDates function\n  const generateRecurringDates = (startDate, frequency, endDate) => {\n    const dates = [];\n    let currentDate = new Date(startDate);\n    const end = new Date(endDate);\n    \n    // Set both dates to start of day for accurate comparison\n    currentDate.setHours(0, 0, 0, 0);\n    end.setHours(0, 0, 0, 0);\n\n    console.log('Generating recurring dates:', {\n      startDate: currentDate,\n      endDate: end,\n      frequency\n    });\n\n    while (currentDate <= end) {\n      dates.push(new Date(currentDate));\n      \n      // Store the original day of month\n      const originalDay = currentDate.getDate();\n      \n      // Calculate next date based on frequency\n      switch (frequency) {\n        case 'Weekly':\n          currentDate.setDate(currentDate.getDate() + 7);\n          break;\n        case 'Bi-Weekly':\n          currentDate.setDate(currentDate.getDate() + 14);\n          break;\n        case 'Monthly':\n          currentDate.setMonth(currentDate.getMonth() + 1);\n          // Check if we've rolled over to the next month\n          if (currentDate.getDate() !== originalDay) {\n            // We've hit the end of the month, go back to last day of previous month\n            currentDate.setDate(0);\n          }\n          break;\n        default:\n          return dates;\n      }\n\n      console.log(`Added ${frequency} date:`, new Date(currentDate));\n    }\n\n    console.log('Generated dates:', dates);\n    return dates;\n  };\n\n  // Update the addTransaction function\n  const addTransaction = (transaction, type) => {\n    const endOfYear = new Date(currentYear, 11, 31);\n    const isRecurring = transaction.frequency !== 'One-time';\n    const startDate = new Date(transaction.dueDate);\n    \n    console.log('Adding transaction:', {\n      transaction,\n      type,\n      isRecurring,\n      startDate,\n      endOfYear\n    });\n\n    if (isRecurring) {\n      const recurringDates = generateRecurringDates(\n        startDate,\n        transaction.frequency,\n        endOfYear\n      );\n\n      console.log('Generated recurring dates:', recurringDates.length);\n\n      // Group transactions by month\n      const transactionsByMonth = {};\n      recurringDates.forEach(date => {\n        const monthKey = `${date.getFullYear()}-${date.getMonth()}`;\n        if (!transactionsByMonth[monthKey]) {\n          transactionsByMonth[monthKey] = [];\n        }\n\n        const recurringTransaction = {\n          ...transaction,\n          id: Date.now() + Math.random(), // Ensure unique IDs\n          dueDate: date.toISOString().split('T')[0],\n          originalTransactionId: transaction.id,\n          paid: false // Reset paid status for each occurrence\n        };\n\n        transactionsByMonth[monthKey].push(recurringTransaction);\n      });\n\n      console.log('Transactions grouped by month:', transactionsByMonth);\n\n      // Update allMonthsTransactions\n      setAllMonthsTransactions(prev => {\n        const updated = { ...prev };\n        Object.entries(transactionsByMonth).forEach(([monthKey, transactions]) => {\n          if (!updated[monthKey]) {\n            updated[monthKey] = [];\n          }\n          updated[monthKey] = [...updated[monthKey], ...transactions];\n        });\n        return updated;\n      });\n\n    } else {\n      // Handle one-time transactions\n      const transactionDate = new Date(transaction.dueDate);\n      const monthKey = `${transactionDate.getFullYear()}-${transactionDate.getMonth()}`;\n      \n      setAllMonthsTransactions(prev => ({\n        ...prev,\n        [monthKey]: [...(prev[monthKey] || []), { ...transaction, paid: false }]\n      }));\n    }\n  };\n\n  // In App.js, update the summary calculation\n  const calculateSummary = (transactions) => {\n    const income = transactions\n      .filter(t => t.type === 'income')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const paidIncome = transactions\n      .filter(t => t.type === 'income' && t.paid)\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const expenses = transactions\n      .filter(t => t.type === 'expense')\n      .reduce((sum, t) => sum + parseFloat(t.amount), 0);\n\n    const balance = paidIncome - expenses;\n\n    return { income, paidIncome, expenses, balance };\n  };\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark-mode' : ''}`}>\n      <header className=\"finance-header\">\n        <div className=\"theme-toggle\">\n          <button \n            onClick={() => setIsDarkMode(!isDarkMode)}\n            className=\"theme-toggle-btn\"\n            title={isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\n          >\n            <i className={`fas fa-${isDarkMode ? 'sun' : 'moon'}`}></i>\n          </button>\n        </div>\n        <h1 className=\"gradient-text\">Finance Tracker</h1>\n        \n        {/* Update the navigation section */}\n        <div className=\"app-navigation\">\n          {/* Main Tabs */}\n          <Nav variant=\"tabs\" className=\"main-nav\">\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'budget'}\n                onClick={() => setActiveTab('budget')}\n              >\n                <i className=\"fas fa-wallet me-2\"></i>\n                Budget Tracker\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link \n                active={activeTab === 'credit'}\n                onClick={() => setActiveTab('credit')}\n              >\n                <i className=\"fas fa-credit-card me-2\"></i>\n                Credit Cards\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n\n          {/* Month Navigation - Only show for budget tab */}\n          {activeTab === 'budget' && (\n            <div className=\"month-navigation\">\n              <button \n                className=\"nav-btn prev\"\n                onClick={() => {\n                  if (currentMonth === 0) {\n                    setCurrentYear(prev => prev - 1);\n                    setCurrentMonth(11);\n                  } else {\n                    setCurrentMonth(prev => prev - 1);\n                  }\n                }}\n                aria-label=\"Previous month\"\n              >\n                <i className=\"fas fa-arrow-left\"></i>\n              </button>\n              \n              <div className=\"month-select\">\n                <select \n                  value={currentMonth}\n                  onChange={(e) => setCurrentMonth(Number(e.target.value))}\n                  className=\"month-dropdown\"\n                  aria-label=\"Select month\"\n                >\n                  {months.map((month, index) => (\n                    <option key={index} value={index}>{month}</option>\n                  ))}\n                </select>\n                <select \n                  value={currentYear}\n                  onChange={(e) => setCurrentYear(Number(e.target.value))}\n                  className=\"year-dropdown\"\n                  aria-label=\"Select year\"\n                >\n                  {Array.from({ length: 5 }, (_, i) => (\n                    <option key={i} value={currentYear - 2 + i}>\n                      {currentYear - 2 + i}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <button \n                className=\"nav-btn next\"\n                onClick={() => {\n                  if (currentMonth === 11) {\n                    setCurrentYear(prev => prev + 1);\n                    setCurrentMonth(0);\n                  } else {\n                    setCurrentMonth(prev => prev + 1);\n                  }\n                }}\n                aria-label=\"Next month\"\n              >\n                <i className=\"fas fa-arrow-right\"></i>\n              </button>\n            </div>\n          )}\n        </div>\n      </header>\n\n      {/* Conditional Rendering based on active tab */}\n      {activeTab === 'budget' ? (\n        <>\n          {/* Updated Summary Card */}\n          <div className=\"row mb-4\">\n            {/* Summary Stats - Simplified */}\n            <div className=\"mobile-summary\">\n              <div className=\"stat-card\">\n                <div className=\"stat-row income\">\n                  <div className=\"stat-label\">Income</div>\n                  <div className=\"stat-value\">${calculateTotals().income.toFixed(2)}</div>\n                </div>\n                <div className=\"stat-row expenses\">\n                  <div className=\"stat-label\">Expenses</div>\n                  <div className=\"stat-value\">${calculateTotals().expenses.toFixed(2)}</div>\n                </div>\n                <div className=\"stat-row balance\">\n                  <div className=\"stat-label\">Balance</div>\n                  <div className=\"stat-value\">${(calculateTotals().income - calculateTotals().expenses).toFixed(2)}</div>\n                </div>\n              </div>\n              \n              {/* Single Chart - Most Important View */}\n              <div className=\"chart-section\">\n                <h3>Expense Breakdown</h3>\n                <div className=\"chart-container\">\n                  <canvas id=\"expenseChart\"></canvas>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Forms Section - Side by Side */}\n          <div className=\"row\">\n            {/* Expense Form */}\n            <div className=\"col-md-8 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-danger text-white\">\n                  <Button\n                    onClick={() => setIsExpenseOpen(!isExpenseOpen)}\n                    aria-controls=\"expenseForm\"\n                    aria-expanded={isExpenseOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Expenses</h3>\n                        <i className={`fas fa-caret-${isExpenseOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                  </Button>\n                </Card.Header>\n                <Collapse in={isExpenseOpen}>\n                  <div id=\"expenseForm\">\n                    <Card.Body>\n                      <form onSubmit={handleExpenseSubmit} className=\"transaction-form\">\n                        <input\n                          type=\"text\"\n                          value={expenseDescription}\n                          onChange={(e) => setExpenseDescription(e.target.value)}\n                          placeholder=\"Expense Item\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={expenseAmount}\n                          onChange={(e) => setExpenseAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={category} \n                          onChange={(e) => setCategory(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Category</option>\n                          <option value=\"Bills\">Bills</option>\n                          <option value=\"Savings\">Savings</option>\n                          <option value=\"Personal\">Personal</option>\n                          <option value=\"Other\">Other</option>\n                        </select>\n                        <input\n                          type=\"date\"\n                          value={dueDate}\n                          onChange={(e) => setDueDate(e.target.value)}\n                          className=\"form-control\"\n                          required\n                        />\n                        <select \n                          value={frequency} \n                          onChange={(e) => setFrequency(e.target.value)}\n                          className=\"form-select\"\n                          required\n                        >\n                          <option value=\"\">Select Frequency</option>\n                          <option value=\"Monthly\">Monthly</option>\n                          <option value=\"Bi-Weekly\">Bi-Weekly</option>\n                          <option value=\"Weekly\">Weekly</option>\n                        </select>\n                        <button type=\"submit\" className=\"btn btn-danger\">\n                          Add Expense\n                        </button>\n                      </form>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n\n            {/* Income Form */}\n            <div className=\"col-md-4 mb-4\">\n              <Card>\n                <Card.Header className=\"bg-success text-white\">\n                  <Button\n                    onClick={() => setIsIncomeOpen(!isIncomeOpen)}\n                    aria-controls=\"incomeSection\"\n                    aria-expanded={isIncomeOpen}\n                    variant=\"link\"\n                    className=\"text-white w-100 text-start p-0\"\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"d-flex align-items-center\">\n                        <h3 className=\"mb-0\">Income</h3>\n                        <i className={`fas fa-caret-${isIncomeOpen ? 'down' : 'right'} ms-2 fa-lg`}></i>\n                      </div>\n                    </div>\n                    <div className=\"current-income-display mt-2\">\n                      Total Monthly Income: ${calculateTotals().income.toFixed(2)}\n                    </div>\n                  </Button>\n                </Card.Header>\n                <Collapse in={isIncomeOpen}>\n                  <div id=\"incomeSection\">\n                    <Card.Body>\n                      <form onSubmit={handleIncomeSubmit} className=\"transaction-form mb-4\">\n                        <input\n                          type=\"text\"\n                          value={incomeDescription}\n                          onChange={(e) => setIncomeDescription(e.target.value)}\n                          placeholder=\"Income Source\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <input\n                          type=\"number\"\n                          value={incomeAmount}\n                          onChange={(e) => setIncomeAmount(e.target.value)}\n                          placeholder=\"Amount\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          required\n                        />\n                        <button type=\"submit\" className=\"btn btn-success\">\n                          Add Income\n                        </button>\n                      </form>\n                      <div className=\"table-responsive\">\n                        <table className=\"table table-hover\">\n                          <thead>\n                            <tr>\n                              <th>Description</th>\n                              <th>Amount</th>\n                              <th>Paid</th>\n                              <th>Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {filterTransactions('income').map(transaction => (\n                              <tr key={transaction.id}>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"text\"\n                                      value={editingValues.description || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        description: e.target.value\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                    />\n                                  ) : (\n                                    transaction.description\n                                  )}\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <input\n                                      type=\"number\"\n                                      value={editingValues.amount || ''}\n                                      onChange={(e) => setEditingValues({\n                                        ...editingValues,\n                                        amount: parseFloat(e.target.value)\n                                      })}\n                                      className=\"form-control form-control-sm\"\n                                      step=\"0.01\"\n                                    />\n                                  ) : (\n                                    <span className=\"text-success\">${transaction.amount.toFixed(2)}</span>\n                                  )}\n                                </td>\n                                <td>\n                                  <div className=\"expense-checkbox\">\n                                    <input\n                                      type=\"checkbox\"\n                                      checked={transaction.paid}\n                                      onChange={() => togglePaid(transaction.id)}\n                                      id={`paid-income-${transaction.id}`}\n                                    />\n                                    <label className=\"checkmark\" htmlFor={`paid-income-${transaction.id}`}></label>\n                                  </div>\n                                </td>\n                                <td>\n                                  {editingId === transaction.id ? (\n                                    <>\n                                      <button\n                                        onClick={() => saveEdit(transaction.id)}\n                                        className=\"btn-icon\"\n                                        title=\"Save changes\"\n                                      >\n                                        <i className=\"fas fa-save\"></i>\n                                        <span>Save</span>\n                                      </button>\n                                      <button\n                                        onClick={cancelEdit}\n                                        className=\"btn-icon delete\"\n                                        title=\"Cancel editing\"\n                                      >\n                                        <i className=\"fas fa-times\"></i>\n                                        <span>Cancel</span>\n                                      </button>\n                                    </>\n                                  ) : (\n                                    <div className=\"expense-actions\">\n                                      <button\n                                        onClick={() => startEditing(transaction)}\n                                        className=\"btn-icon\"\n                                        title=\"Edit this entry\"\n                                      >\n                                        <i className=\"fas fa-edit\"></i>\n                                        <span>Edit</span>\n                                      </button>\n                                      <button\n                                        onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                        className=\"btn-icon delete\"\n                                        title=\"Delete this entry\"\n                                      >\n                                        <i className=\"fas fa-trash\"></i>\n                                        <span>Delete</span>\n                                      </button>\n                                    </div>\n                                  )}\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </Card.Body>\n                  </div>\n                </Collapse>\n              </Card>\n            </div>\n          </div>\n\n          {/* Full Width Expenses List */}\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header bg-danger text-white\">\n                  <h3 className=\"mb-0\">Expenses List</h3>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"table-responsive\">\n                    {/* Mobile-Friendly Expense List */}\n                    <div className=\"expense-list\">\n                      {filterTransactions('expense').map(transaction => (\n                        <div key={transaction.id} className={`expense-item ${transaction.paid ? 'paid' : ''}`}>\n                          <div className=\"expense-main\">\n                            <div className=\"expense-checkbox\">\n                              <input\n                                type=\"checkbox\"\n                                checked={transaction.paid}\n                                onChange={() => togglePaid(transaction.id)}\n                                id={`paid-${transaction.id}`}\n                              />\n                              <label className=\"checkmark\" htmlFor={`paid-${transaction.id}`}></label>\n                            </div>\n                            <div className=\"expense-content\">\n                              {editingId === transaction.id ? (\n                                // Edit mode\n                                <div className=\"expense-edit-form\">\n                                  <input\n                                    type=\"text\"\n                                    value={editingValues.description || ''}\n                                    onChange={(e) => setEditingValues({\n                                      ...editingValues,\n                                      description: e.target.value\n                                    })}\n                                    className=\"form-control form-control-sm mb-2\"\n                                    placeholder=\"Description\"\n                                  />\n                                  <input\n                                    type=\"number\"\n                                    value={editingValues.amount || ''}\n                                    onChange={(e) => setEditingValues({\n                                      ...editingValues,\n                                      amount: parseFloat(e.target.value)\n                                    })}\n                                    className=\"form-control form-control-sm mb-2\"\n                                    step=\"0.01\"\n                                    placeholder=\"Amount\"\n                                  />\n                                  <select\n                                    value={editingValues.category || ''}\n                                    onChange={(e) => setEditingValues({\n                                      ...editingValues,\n                                      category: e.target.value\n                                    })}\n                                    className=\"form-select form-select-sm mb-2\"\n                                  >\n                                    <option value=\"Bills\">Bills</option>\n                                    <option value=\"Savings\">Savings</option>\n                                    <option value=\"Personal\">Personal</option>\n                                    <option value=\"Other\">Other</option>\n                                  </select>\n                                  <input\n                                    type=\"date\"\n                                    value={editingValues.dueDate || ''}\n                                    onChange={(e) => setEditingValues({\n                                      ...editingValues,\n                                      dueDate: e.target.value\n                                    })}\n                                    className=\"form-control form-control-sm mb-2\"\n                                  />\n                                  <div className=\"edit-actions\">\n                                    <button\n                                      onClick={() => saveEdit(transaction.id)}\n                                      className=\"btn btn-success btn-sm me-2\"\n                                    >\n                                      <i className=\"fas fa-save\"></i> Save\n                                    </button>\n                                    <button\n                                      onClick={cancelEdit}\n                                      className=\"btn btn-secondary btn-sm\"\n                                    >\n                                      <i className=\"fas fa-times\"></i> Cancel\n                                    </button>\n                                  </div>\n                                </div>\n                              ) : (\n                                // Display mode\n                                <>\n                                  <div className=\"expense-primary\">\n                                    <span className=\"expense-title\">{transaction.description}</span>\n                                    <span className=\"expense-amount\">${transaction.amount.toFixed(2)}</span>\n                                  </div>\n                                  <div className=\"expense-secondary\">\n                                    <span className=\"expense-tag\">{transaction.category}</span>\n                                    <span className=\"expense-date\">{getDayWithSuffix(transaction.dueDate)}</span>\n                                    <span className=\"expense-frequency\">{transaction.frequency}</span>\n                                  </div>\n                                </>\n                              )}\n                            </div>\n                            {!editingId && (\n                              <div className=\"expense-actions\">\n                                <button\n                                  onClick={() => startEditing(transaction)}\n                                  className=\"btn-icon\"\n                                  title=\"Edit\"\n                                >\n                                  <i className=\"fas fa-edit\"></i>\n                                  <span>Edit</span>\n                                </button>\n                                <button\n                                  onClick={() => deleteTransaction(transaction.id, currentMonth)}\n                                  className=\"btn-icon delete\"\n                                  title=\"Delete\"\n                                >\n                                  <i className=\"fas fa-trash\"></i>\n                                  <span>Delete</span>\n                                </button>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Render current month's page */}\n          <MonthPage\n            month={currentMonth}\n            year={currentYear}\n            transactions={allMonthsTransactions[`${currentYear}-${currentMonth}`] || []}\n            onUpdateTransaction={addTransaction}\n            onDeleteTransaction={deleteTransaction}\n          />\n        </>\n      ) : (\n        <CreditCardTracker />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}